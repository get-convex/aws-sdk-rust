// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about an error returned for a <code>BatchGetIncidentFindings</code> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchGetIncidentFindingsError {
    /// <p>The ID of a specified finding for which an error was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    pub finding_id: ::std::string::String,
    /// <p>The code associated with an error that was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    pub code: ::std::string::String,
    /// <p>The description for an error that was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    pub message: ::std::string::String,
}
impl BatchGetIncidentFindingsError {
    /// <p>The ID of a specified finding for which an error was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    pub fn finding_id(&self) -> &str {
        use std::ops::Deref;
        self.finding_id.deref()
    }
    /// <p>The code associated with an error that was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    pub fn code(&self) -> &str {
        use std::ops::Deref;
        self.code.deref()
    }
    /// <p>The description for an error that was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    pub fn message(&self) -> &str {
        use std::ops::Deref;
        self.message.deref()
    }
}
impl BatchGetIncidentFindingsError {
    /// Creates a new builder-style object to manufacture [`BatchGetIncidentFindingsError`](crate::types::BatchGetIncidentFindingsError).
    pub fn builder() -> crate::types::builders::BatchGetIncidentFindingsErrorBuilder {
        crate::types::builders::BatchGetIncidentFindingsErrorBuilder::default()
    }
}

/// A builder for [`BatchGetIncidentFindingsError`](crate::types::BatchGetIncidentFindingsError).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchGetIncidentFindingsErrorBuilder {
    pub(crate) finding_id: ::std::option::Option<::std::string::String>,
    pub(crate) code: ::std::option::Option<::std::string::String>,
    pub(crate) message: ::std::option::Option<::std::string::String>,
}
impl BatchGetIncidentFindingsErrorBuilder {
    /// <p>The ID of a specified finding for which an error was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    /// This field is required.
    pub fn finding_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.finding_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of a specified finding for which an error was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    pub fn set_finding_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.finding_id = input;
        self
    }
    /// <p>The ID of a specified finding for which an error was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    pub fn get_finding_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.finding_id
    }
    /// <p>The code associated with an error that was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    /// This field is required.
    pub fn code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The code associated with an error that was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    pub fn set_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.code = input;
        self
    }
    /// <p>The code associated with an error that was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    pub fn get_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.code
    }
    /// <p>The description for an error that was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    /// This field is required.
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description for an error that was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>The description for an error that was returned for a <code>BatchGetIncidentFindings</code> operation.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// Consumes the builder and constructs a [`BatchGetIncidentFindingsError`](crate::types::BatchGetIncidentFindingsError).
    /// This method will fail if any of the following fields are not set:
    /// - [`finding_id`](crate::types::builders::BatchGetIncidentFindingsErrorBuilder::finding_id)
    /// - [`code`](crate::types::builders::BatchGetIncidentFindingsErrorBuilder::code)
    /// - [`message`](crate::types::builders::BatchGetIncidentFindingsErrorBuilder::message)
    pub fn build(self) -> ::std::result::Result<crate::types::BatchGetIncidentFindingsError, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::BatchGetIncidentFindingsError {
            finding_id: self.finding_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "finding_id",
                    "finding_id was not specified but it is required when building BatchGetIncidentFindingsError",
                )
            })?,
            code: self.code.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "code",
                    "code was not specified but it is required when building BatchGetIncidentFindingsError",
                )
            })?,
            message: self.message.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "message",
                    "message was not specified but it is required when building BatchGetIncidentFindingsError",
                )
            })?,
        })
    }
}
