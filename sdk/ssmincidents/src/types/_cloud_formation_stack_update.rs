// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about an CloudFormation stack creation or update that occurred around the time of an incident and could be a potential cause of the incident.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CloudFormationStackUpdate {
    /// <p>The timestamp for when the CloudFormation stack creation or update began.</p>
    pub start_time: ::aws_smithy_types::DateTime,
    /// <p>The timestamp for when the CloudFormation stack creation or update ended. Not reported for deployments that are still in progress.</p>
    pub end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The Amazon Resource Name (ARN) of the CloudFormation stack involved in the update.</p>
    pub stack_arn: ::std::string::String,
}
impl CloudFormationStackUpdate {
    /// <p>The timestamp for when the CloudFormation stack creation or update began.</p>
    pub fn start_time(&self) -> &::aws_smithy_types::DateTime {
        &self.start_time
    }
    /// <p>The timestamp for when the CloudFormation stack creation or update ended. Not reported for deployments that are still in progress.</p>
    pub fn end_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the CloudFormation stack involved in the update.</p>
    pub fn stack_arn(&self) -> &str {
        use std::ops::Deref;
        self.stack_arn.deref()
    }
}
impl CloudFormationStackUpdate {
    /// Creates a new builder-style object to manufacture [`CloudFormationStackUpdate`](crate::types::CloudFormationStackUpdate).
    pub fn builder() -> crate::types::builders::CloudFormationStackUpdateBuilder {
        crate::types::builders::CloudFormationStackUpdateBuilder::default()
    }
}

/// A builder for [`CloudFormationStackUpdate`](crate::types::CloudFormationStackUpdate).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CloudFormationStackUpdateBuilder {
    pub(crate) start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) stack_arn: ::std::option::Option<::std::string::String>,
}
impl CloudFormationStackUpdateBuilder {
    /// <p>The timestamp for when the CloudFormation stack creation or update began.</p>
    /// This field is required.
    pub fn start_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp for when the CloudFormation stack creation or update began.</p>
    pub fn set_start_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start_time = input;
        self
    }
    /// <p>The timestamp for when the CloudFormation stack creation or update began.</p>
    pub fn get_start_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start_time
    }
    /// <p>The timestamp for when the CloudFormation stack creation or update ended. Not reported for deployments that are still in progress.</p>
    pub fn end_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp for when the CloudFormation stack creation or update ended. Not reported for deployments that are still in progress.</p>
    pub fn set_end_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>The timestamp for when the CloudFormation stack creation or update ended. Not reported for deployments that are still in progress.</p>
    pub fn get_end_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end_time
    }
    /// <p>The Amazon Resource Name (ARN) of the CloudFormation stack involved in the update.</p>
    /// This field is required.
    pub fn stack_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.stack_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the CloudFormation stack involved in the update.</p>
    pub fn set_stack_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.stack_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the CloudFormation stack involved in the update.</p>
    pub fn get_stack_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.stack_arn
    }
    /// Consumes the builder and constructs a [`CloudFormationStackUpdate`](crate::types::CloudFormationStackUpdate).
    /// This method will fail if any of the following fields are not set:
    /// - [`start_time`](crate::types::builders::CloudFormationStackUpdateBuilder::start_time)
    /// - [`stack_arn`](crate::types::builders::CloudFormationStackUpdateBuilder::stack_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::CloudFormationStackUpdate, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CloudFormationStackUpdate {
            start_time: self.start_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "start_time",
                    "start_time was not specified but it is required when building CloudFormationStackUpdate",
                )
            })?,
            end_time: self.end_time,
            stack_arn: self.stack_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "stack_arn",
                    "stack_arn was not specified but it is required when building CloudFormationStackUpdate",
                )
            })?,
        })
    }
}
