// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutConfiguredAudienceModelPolicy`](crate::operation::put_configured_audience_model_policy::builders::PutConfiguredAudienceModelPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configured_audience_model_arn(impl Into<String>)`](crate::operation::put_configured_audience_model_policy::builders::PutConfiguredAudienceModelPolicyFluentBuilder::configured_audience_model_arn) / [`set_configured_audience_model_arn(Option<String>)`](crate::operation::put_configured_audience_model_policy::builders::PutConfiguredAudienceModelPolicyFluentBuilder::set_configured_audience_model_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the configured audience model that the resource policy will govern.</p><br>
    ///   - [`configured_audience_model_policy(impl Into<String>)`](crate::operation::put_configured_audience_model_policy::builders::PutConfiguredAudienceModelPolicyFluentBuilder::configured_audience_model_policy) / [`set_configured_audience_model_policy(Option<String>)`](crate::operation::put_configured_audience_model_policy::builders::PutConfiguredAudienceModelPolicyFluentBuilder::set_configured_audience_model_policy):<br>required: **true**<br><p>The IAM resource policy.</p><br>
    ///   - [`previous_policy_hash(impl Into<String>)`](crate::operation::put_configured_audience_model_policy::builders::PutConfiguredAudienceModelPolicyFluentBuilder::previous_policy_hash) / [`set_previous_policy_hash(Option<String>)`](crate::operation::put_configured_audience_model_policy::builders::PutConfiguredAudienceModelPolicyFluentBuilder::set_previous_policy_hash):<br>required: **false**<br><p>A cryptographic hash of the contents of the policy used to prevent unexpected concurrent modification of the policy.</p><br>
    ///   - [`policy_existence_condition(PolicyExistenceCondition)`](crate::operation::put_configured_audience_model_policy::builders::PutConfiguredAudienceModelPolicyFluentBuilder::policy_existence_condition) / [`set_policy_existence_condition(Option<PolicyExistenceCondition>)`](crate::operation::put_configured_audience_model_policy::builders::PutConfiguredAudienceModelPolicyFluentBuilder::set_policy_existence_condition):<br>required: **false**<br><p>Use this to prevent unexpected concurrent modification of the policy.</p><br>
    /// - On success, responds with [`PutConfiguredAudienceModelPolicyOutput`](crate::operation::put_configured_audience_model_policy::PutConfiguredAudienceModelPolicyOutput) with field(s):
    ///   - [`configured_audience_model_policy(String)`](crate::operation::put_configured_audience_model_policy::PutConfiguredAudienceModelPolicyOutput::configured_audience_model_policy): <p>The IAM resource policy.</p>
    ///   - [`policy_hash(String)`](crate::operation::put_configured_audience_model_policy::PutConfiguredAudienceModelPolicyOutput::policy_hash): <p>A cryptographic hash of the contents of the policy used to prevent unexpected concurrent modification of the policy.</p>
    /// - On failure, responds with [`SdkError<PutConfiguredAudienceModelPolicyError>`](crate::operation::put_configured_audience_model_policy::PutConfiguredAudienceModelPolicyError)
    pub fn put_configured_audience_model_policy(
        &self,
    ) -> crate::operation::put_configured_audience_model_policy::builders::PutConfiguredAudienceModelPolicyFluentBuilder {
        crate::operation::put_configured_audience_model_policy::builders::PutConfiguredAudienceModelPolicyFluentBuilder::new(self.handle.clone())
    }
}
