// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateContactRoutingDataInput {
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the contact in this instance of Amazon Connect.</p>
    pub contact_id: ::std::option::Option<::std::string::String>,
    /// <p>The number of seconds to add or subtract from the contact's routing age. Contacts are routed to agents on a first-come, first-serve basis. This means that changing their amount of time in queue compared to others also changes their position in queue.</p>
    pub queue_time_adjustment_seconds: ::std::option::Option<i32>,
    /// <p>Priority of the contact in the queue. The default priority for new contacts is 5. You can raise the priority of a contact compared to other contacts in the queue by assigning them a higher priority, such as 1 or 2.</p>
    pub queue_priority: ::std::option::Option<i64>,
}
impl UpdateContactRoutingDataInput {
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The identifier of the contact in this instance of Amazon Connect.</p>
    pub fn contact_id(&self) -> ::std::option::Option<&str> {
        self.contact_id.as_deref()
    }
    /// <p>The number of seconds to add or subtract from the contact's routing age. Contacts are routed to agents on a first-come, first-serve basis. This means that changing their amount of time in queue compared to others also changes their position in queue.</p>
    pub fn queue_time_adjustment_seconds(&self) -> ::std::option::Option<i32> {
        self.queue_time_adjustment_seconds
    }
    /// <p>Priority of the contact in the queue. The default priority for new contacts is 5. You can raise the priority of a contact compared to other contacts in the queue by assigning them a higher priority, such as 1 or 2.</p>
    pub fn queue_priority(&self) -> ::std::option::Option<i64> {
        self.queue_priority
    }
}
impl UpdateContactRoutingDataInput {
    /// Creates a new builder-style object to manufacture [`UpdateContactRoutingDataInput`](crate::operation::update_contact_routing_data::UpdateContactRoutingDataInput).
    pub fn builder() -> crate::operation::update_contact_routing_data::builders::UpdateContactRoutingDataInputBuilder {
        crate::operation::update_contact_routing_data::builders::UpdateContactRoutingDataInputBuilder::default()
    }
}

/// A builder for [`UpdateContactRoutingDataInput`](crate::operation::update_contact_routing_data::UpdateContactRoutingDataInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateContactRoutingDataInputBuilder {
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) contact_id: ::std::option::Option<::std::string::String>,
    pub(crate) queue_time_adjustment_seconds: ::std::option::Option<i32>,
    pub(crate) queue_priority: ::std::option::Option<i64>,
}
impl UpdateContactRoutingDataInputBuilder {
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    /// This field is required.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// <p>The identifier of the contact in this instance of Amazon Connect.</p>
    /// This field is required.
    pub fn contact_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.contact_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the contact in this instance of Amazon Connect.</p>
    pub fn set_contact_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.contact_id = input;
        self
    }
    /// <p>The identifier of the contact in this instance of Amazon Connect.</p>
    pub fn get_contact_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.contact_id
    }
    /// <p>The number of seconds to add or subtract from the contact's routing age. Contacts are routed to agents on a first-come, first-serve basis. This means that changing their amount of time in queue compared to others also changes their position in queue.</p>
    pub fn queue_time_adjustment_seconds(mut self, input: i32) -> Self {
        self.queue_time_adjustment_seconds = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of seconds to add or subtract from the contact's routing age. Contacts are routed to agents on a first-come, first-serve basis. This means that changing their amount of time in queue compared to others also changes their position in queue.</p>
    pub fn set_queue_time_adjustment_seconds(mut self, input: ::std::option::Option<i32>) -> Self {
        self.queue_time_adjustment_seconds = input;
        self
    }
    /// <p>The number of seconds to add or subtract from the contact's routing age. Contacts are routed to agents on a first-come, first-serve basis. This means that changing their amount of time in queue compared to others also changes their position in queue.</p>
    pub fn get_queue_time_adjustment_seconds(&self) -> &::std::option::Option<i32> {
        &self.queue_time_adjustment_seconds
    }
    /// <p>Priority of the contact in the queue. The default priority for new contacts is 5. You can raise the priority of a contact compared to other contacts in the queue by assigning them a higher priority, such as 1 or 2.</p>
    pub fn queue_priority(mut self, input: i64) -> Self {
        self.queue_priority = ::std::option::Option::Some(input);
        self
    }
    /// <p>Priority of the contact in the queue. The default priority for new contacts is 5. You can raise the priority of a contact compared to other contacts in the queue by assigning them a higher priority, such as 1 or 2.</p>
    pub fn set_queue_priority(mut self, input: ::std::option::Option<i64>) -> Self {
        self.queue_priority = input;
        self
    }
    /// <p>Priority of the contact in the queue. The default priority for new contacts is 5. You can raise the priority of a contact compared to other contacts in the queue by assigning them a higher priority, such as 1 or 2.</p>
    pub fn get_queue_priority(&self) -> &::std::option::Option<i64> {
        &self.queue_priority
    }
    /// Consumes the builder and constructs a [`UpdateContactRoutingDataInput`](crate::operation::update_contact_routing_data::UpdateContactRoutingDataInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_contact_routing_data::UpdateContactRoutingDataInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_contact_routing_data::UpdateContactRoutingDataInput {
            instance_id: self.instance_id,
            contact_id: self.contact_id,
            queue_time_adjustment_seconds: self.queue_time_adjustment_seconds,
            queue_priority: self.queue_priority,
        })
    }
}
