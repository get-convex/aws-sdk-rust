// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The <code>UpdateCase</code> action definition.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateCaseActionDefinition {
    /// <p>An array of objects with <code>Field ID</code> and Value data.</p>
    pub fields: ::std::vec::Vec<crate::types::FieldValue>,
}
impl UpdateCaseActionDefinition {
    /// <p>An array of objects with <code>Field ID</code> and Value data.</p>
    pub fn fields(&self) -> &[crate::types::FieldValue] {
        use std::ops::Deref;
        self.fields.deref()
    }
}
impl UpdateCaseActionDefinition {
    /// Creates a new builder-style object to manufacture [`UpdateCaseActionDefinition`](crate::types::UpdateCaseActionDefinition).
    pub fn builder() -> crate::types::builders::UpdateCaseActionDefinitionBuilder {
        crate::types::builders::UpdateCaseActionDefinitionBuilder::default()
    }
}

/// A builder for [`UpdateCaseActionDefinition`](crate::types::UpdateCaseActionDefinition).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateCaseActionDefinitionBuilder {
    pub(crate) fields: ::std::option::Option<::std::vec::Vec<crate::types::FieldValue>>,
}
impl UpdateCaseActionDefinitionBuilder {
    /// Appends an item to `fields`.
    ///
    /// To override the contents of this collection use [`set_fields`](Self::set_fields).
    ///
    /// <p>An array of objects with <code>Field ID</code> and Value data.</p>
    pub fn fields(mut self, input: crate::types::FieldValue) -> Self {
        let mut v = self.fields.unwrap_or_default();
        v.push(input);
        self.fields = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of objects with <code>Field ID</code> and Value data.</p>
    pub fn set_fields(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::FieldValue>>) -> Self {
        self.fields = input;
        self
    }
    /// <p>An array of objects with <code>Field ID</code> and Value data.</p>
    pub fn get_fields(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::FieldValue>> {
        &self.fields
    }
    /// Consumes the builder and constructs a [`UpdateCaseActionDefinition`](crate::types::UpdateCaseActionDefinition).
    /// This method will fail if any of the following fields are not set:
    /// - [`fields`](crate::types::builders::UpdateCaseActionDefinitionBuilder::fields)
    pub fn build(self) -> ::std::result::Result<crate::types::UpdateCaseActionDefinition, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::UpdateCaseActionDefinition {
            fields: self.fields.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "fields",
                    "fields was not specified but it is required when building UpdateCaseActionDefinition",
                )
            })?,
        })
    }
}
