// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Transcript representation containing Id and list of character intervals that are associated with analysis data. For example, this object within a <code>RealTimeContactAnalysisPointOfInterest</code> in <code>Category.MatchedDetails</code> would have character interval describing part of the text that matched category.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RealTimeContactAnalysisTranscriptItemWithCharacterOffsets {
    /// <p>Transcript identifier. Matches the identifier from one of the TranscriptSegments.</p>
    pub id: ::std::string::String,
    /// <p>List of character intervals within transcript content/text.</p>
    pub character_offsets: ::std::option::Option<crate::types::RealTimeContactAnalysisCharacterInterval>,
}
impl RealTimeContactAnalysisTranscriptItemWithCharacterOffsets {
    /// <p>Transcript identifier. Matches the identifier from one of the TranscriptSegments.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
    /// <p>List of character intervals within transcript content/text.</p>
    pub fn character_offsets(&self) -> ::std::option::Option<&crate::types::RealTimeContactAnalysisCharacterInterval> {
        self.character_offsets.as_ref()
    }
}
impl RealTimeContactAnalysisTranscriptItemWithCharacterOffsets {
    /// Creates a new builder-style object to manufacture [`RealTimeContactAnalysisTranscriptItemWithCharacterOffsets`](crate::types::RealTimeContactAnalysisTranscriptItemWithCharacterOffsets).
    pub fn builder() -> crate::types::builders::RealTimeContactAnalysisTranscriptItemWithCharacterOffsetsBuilder {
        crate::types::builders::RealTimeContactAnalysisTranscriptItemWithCharacterOffsetsBuilder::default()
    }
}

/// A builder for [`RealTimeContactAnalysisTranscriptItemWithCharacterOffsets`](crate::types::RealTimeContactAnalysisTranscriptItemWithCharacterOffsets).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RealTimeContactAnalysisTranscriptItemWithCharacterOffsetsBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) character_offsets: ::std::option::Option<crate::types::RealTimeContactAnalysisCharacterInterval>,
}
impl RealTimeContactAnalysisTranscriptItemWithCharacterOffsetsBuilder {
    /// <p>Transcript identifier. Matches the identifier from one of the TranscriptSegments.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Transcript identifier. Matches the identifier from one of the TranscriptSegments.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>Transcript identifier. Matches the identifier from one of the TranscriptSegments.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>List of character intervals within transcript content/text.</p>
    pub fn character_offsets(mut self, input: crate::types::RealTimeContactAnalysisCharacterInterval) -> Self {
        self.character_offsets = ::std::option::Option::Some(input);
        self
    }
    /// <p>List of character intervals within transcript content/text.</p>
    pub fn set_character_offsets(mut self, input: ::std::option::Option<crate::types::RealTimeContactAnalysisCharacterInterval>) -> Self {
        self.character_offsets = input;
        self
    }
    /// <p>List of character intervals within transcript content/text.</p>
    pub fn get_character_offsets(&self) -> &::std::option::Option<crate::types::RealTimeContactAnalysisCharacterInterval> {
        &self.character_offsets
    }
    /// Consumes the builder and constructs a [`RealTimeContactAnalysisTranscriptItemWithCharacterOffsets`](crate::types::RealTimeContactAnalysisTranscriptItemWithCharacterOffsets).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::types::builders::RealTimeContactAnalysisTranscriptItemWithCharacterOffsetsBuilder::id)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::types::RealTimeContactAnalysisTranscriptItemWithCharacterOffsets,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::types::RealTimeContactAnalysisTranscriptItemWithCharacterOffsets {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building RealTimeContactAnalysisTranscriptItemWithCharacterOffsets",
                )
            })?,
            character_offsets: self.character_offsets,
        })
    }
}
