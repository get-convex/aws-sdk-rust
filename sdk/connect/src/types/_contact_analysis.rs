// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that defines search criteria for contacts using analysis outputs from Amazon Connect Contact Lens.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ContactAnalysis {
    /// <p>Search criteria based on transcript analyzed by Amazon Connect Contact Lens.</p>
    pub transcript: ::std::option::Option<crate::types::Transcript>,
}
impl ContactAnalysis {
    /// <p>Search criteria based on transcript analyzed by Amazon Connect Contact Lens.</p>
    pub fn transcript(&self) -> ::std::option::Option<&crate::types::Transcript> {
        self.transcript.as_ref()
    }
}
impl ContactAnalysis {
    /// Creates a new builder-style object to manufacture [`ContactAnalysis`](crate::types::ContactAnalysis).
    pub fn builder() -> crate::types::builders::ContactAnalysisBuilder {
        crate::types::builders::ContactAnalysisBuilder::default()
    }
}

/// A builder for [`ContactAnalysis`](crate::types::ContactAnalysis).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ContactAnalysisBuilder {
    pub(crate) transcript: ::std::option::Option<crate::types::Transcript>,
}
impl ContactAnalysisBuilder {
    /// <p>Search criteria based on transcript analyzed by Amazon Connect Contact Lens.</p>
    pub fn transcript(mut self, input: crate::types::Transcript) -> Self {
        self.transcript = ::std::option::Option::Some(input);
        self
    }
    /// <p>Search criteria based on transcript analyzed by Amazon Connect Contact Lens.</p>
    pub fn set_transcript(mut self, input: ::std::option::Option<crate::types::Transcript>) -> Self {
        self.transcript = input;
        self
    }
    /// <p>Search criteria based on transcript analyzed by Amazon Connect Contact Lens.</p>
    pub fn get_transcript(&self) -> &::std::option::Option<crate::types::Transcript> {
        &self.transcript
    }
    /// Consumes the builder and constructs a [`ContactAnalysis`](crate::types::ContactAnalysis).
    pub fn build(self) -> crate::types::ContactAnalysis {
        crate::types::ContactAnalysis { transcript: self.transcript }
    }
}
