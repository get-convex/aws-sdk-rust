// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>If this contact was queued, this contains information about the queue.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ContactSearchSummaryQueueInfo {
    /// <p>The unique identifier for the queue.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp when the contact was added to the queue.</p>
    pub enqueue_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ContactSearchSummaryQueueInfo {
    /// <p>The unique identifier for the queue.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The timestamp when the contact was added to the queue.</p>
    pub fn enqueue_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.enqueue_timestamp.as_ref()
    }
}
impl ContactSearchSummaryQueueInfo {
    /// Creates a new builder-style object to manufacture [`ContactSearchSummaryQueueInfo`](crate::types::ContactSearchSummaryQueueInfo).
    pub fn builder() -> crate::types::builders::ContactSearchSummaryQueueInfoBuilder {
        crate::types::builders::ContactSearchSummaryQueueInfoBuilder::default()
    }
}

/// A builder for [`ContactSearchSummaryQueueInfo`](crate::types::ContactSearchSummaryQueueInfo).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ContactSearchSummaryQueueInfoBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) enqueue_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ContactSearchSummaryQueueInfoBuilder {
    /// <p>The unique identifier for the queue.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the queue.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The unique identifier for the queue.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The timestamp when the contact was added to the queue.</p>
    pub fn enqueue_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.enqueue_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the contact was added to the queue.</p>
    pub fn set_enqueue_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.enqueue_timestamp = input;
        self
    }
    /// <p>The timestamp when the contact was added to the queue.</p>
    pub fn get_enqueue_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.enqueue_timestamp
    }
    /// Consumes the builder and constructs a [`ContactSearchSummaryQueueInfo`](crate::types::ContactSearchSummaryQueueInfo).
    pub fn build(self) -> crate::types::ContactSearchSummaryQueueInfo {
        crate::types::ContactSearchSummaryQueueInfo {
            id: self.id,
            enqueue_timestamp: self.enqueue_timestamp,
        }
    }
}
