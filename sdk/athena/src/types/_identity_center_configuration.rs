// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies whether the workgroup is IAM Identity Center supported.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IdentityCenterConfiguration {
    /// <p>Specifies whether the workgroup is IAM Identity Center supported.</p>
    pub enable_identity_center: ::std::option::Option<bool>,
    /// <p>The IAM Identity Center instance ARN that the workgroup associates to.</p>
    pub identity_center_instance_arn: ::std::option::Option<::std::string::String>,
}
impl IdentityCenterConfiguration {
    /// <p>Specifies whether the workgroup is IAM Identity Center supported.</p>
    pub fn enable_identity_center(&self) -> ::std::option::Option<bool> {
        self.enable_identity_center
    }
    /// <p>The IAM Identity Center instance ARN that the workgroup associates to.</p>
    pub fn identity_center_instance_arn(&self) -> ::std::option::Option<&str> {
        self.identity_center_instance_arn.as_deref()
    }
}
impl IdentityCenterConfiguration {
    /// Creates a new builder-style object to manufacture [`IdentityCenterConfiguration`](crate::types::IdentityCenterConfiguration).
    pub fn builder() -> crate::types::builders::IdentityCenterConfigurationBuilder {
        crate::types::builders::IdentityCenterConfigurationBuilder::default()
    }
}

/// A builder for [`IdentityCenterConfiguration`](crate::types::IdentityCenterConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IdentityCenterConfigurationBuilder {
    pub(crate) enable_identity_center: ::std::option::Option<bool>,
    pub(crate) identity_center_instance_arn: ::std::option::Option<::std::string::String>,
}
impl IdentityCenterConfigurationBuilder {
    /// <p>Specifies whether the workgroup is IAM Identity Center supported.</p>
    pub fn enable_identity_center(mut self, input: bool) -> Self {
        self.enable_identity_center = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether the workgroup is IAM Identity Center supported.</p>
    pub fn set_enable_identity_center(mut self, input: ::std::option::Option<bool>) -> Self {
        self.enable_identity_center = input;
        self
    }
    /// <p>Specifies whether the workgroup is IAM Identity Center supported.</p>
    pub fn get_enable_identity_center(&self) -> &::std::option::Option<bool> {
        &self.enable_identity_center
    }
    /// <p>The IAM Identity Center instance ARN that the workgroup associates to.</p>
    pub fn identity_center_instance_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identity_center_instance_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The IAM Identity Center instance ARN that the workgroup associates to.</p>
    pub fn set_identity_center_instance_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identity_center_instance_arn = input;
        self
    }
    /// <p>The IAM Identity Center instance ARN that the workgroup associates to.</p>
    pub fn get_identity_center_instance_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.identity_center_instance_arn
    }
    /// Consumes the builder and constructs a [`IdentityCenterConfiguration`](crate::types::IdentityCenterConfiguration).
    pub fn build(self) -> crate::types::IdentityCenterConfiguration {
        crate::types::IdentityCenterConfiguration {
            enable_identity_center: self.enable_identity_center,
            identity_center_instance_arn: self.identity_center_instance_arn,
        }
    }
}
