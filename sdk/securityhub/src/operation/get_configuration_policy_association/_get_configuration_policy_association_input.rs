// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetConfigurationPolicyAssociationInput {
    /// <p>The target account ID, organizational unit ID, or the root ID to retrieve the association for.</p>
    pub target: ::std::option::Option<crate::types::Target>,
}
impl GetConfigurationPolicyAssociationInput {
    /// <p>The target account ID, organizational unit ID, or the root ID to retrieve the association for.</p>
    pub fn target(&self) -> ::std::option::Option<&crate::types::Target> {
        self.target.as_ref()
    }
}
impl GetConfigurationPolicyAssociationInput {
    /// Creates a new builder-style object to manufacture [`GetConfigurationPolicyAssociationInput`](crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationInput).
    pub fn builder() -> crate::operation::get_configuration_policy_association::builders::GetConfigurationPolicyAssociationInputBuilder {
        crate::operation::get_configuration_policy_association::builders::GetConfigurationPolicyAssociationInputBuilder::default()
    }
}

/// A builder for [`GetConfigurationPolicyAssociationInput`](crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetConfigurationPolicyAssociationInputBuilder {
    pub(crate) target: ::std::option::Option<crate::types::Target>,
}
impl GetConfigurationPolicyAssociationInputBuilder {
    /// <p>The target account ID, organizational unit ID, or the root ID to retrieve the association for.</p>
    /// This field is required.
    pub fn target(mut self, input: crate::types::Target) -> Self {
        self.target = ::std::option::Option::Some(input);
        self
    }
    /// <p>The target account ID, organizational unit ID, or the root ID to retrieve the association for.</p>
    pub fn set_target(mut self, input: ::std::option::Option<crate::types::Target>) -> Self {
        self.target = input;
        self
    }
    /// <p>The target account ID, organizational unit ID, or the root ID to retrieve the association for.</p>
    pub fn get_target(&self) -> &::std::option::Option<crate::types::Target> {
        &self.target
    }
    /// Consumes the builder and constructs a [`GetConfigurationPolicyAssociationInput`](crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationInput { target: self.target },
        )
    }
}
