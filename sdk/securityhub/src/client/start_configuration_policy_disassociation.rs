// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartConfigurationPolicyDisassociation`](crate::operation::start_configuration_policy_disassociation::builders::StartConfigurationPolicyDisassociationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`target(Target)`](crate::operation::start_configuration_policy_disassociation::builders::StartConfigurationPolicyDisassociationFluentBuilder::target) / [`set_target(Option<Target>)`](crate::operation::start_configuration_policy_disassociation::builders::StartConfigurationPolicyDisassociationFluentBuilder::set_target):<br>required: **false**<br><p>The identifier of the target account, organizational unit, or the root to disassociate from the specified configuration.</p><br>
    ///   - [`configuration_policy_identifier(impl Into<String>)`](crate::operation::start_configuration_policy_disassociation::builders::StartConfigurationPolicyDisassociationFluentBuilder::configuration_policy_identifier) / [`set_configuration_policy_identifier(Option<String>)`](crate::operation::start_configuration_policy_disassociation::builders::StartConfigurationPolicyDisassociationFluentBuilder::set_configuration_policy_identifier):<br>required: **true**<br><p>The Amazon Resource Name (ARN) or universally unique identifier (UUID) of the configuration policy.</p><br>
    /// - On success, responds with [`StartConfigurationPolicyDisassociationOutput`](crate::operation::start_configuration_policy_disassociation::StartConfigurationPolicyDisassociationOutput)
    /// - On failure, responds with [`SdkError<StartConfigurationPolicyDisassociationError>`](crate::operation::start_configuration_policy_disassociation::StartConfigurationPolicyDisassociationError)
    pub fn start_configuration_policy_disassociation(
        &self,
    ) -> crate::operation::start_configuration_policy_disassociation::builders::StartConfigurationPolicyDisassociationFluentBuilder {
        crate::operation::start_configuration_policy_disassociation::builders::StartConfigurationPolicyDisassociationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
