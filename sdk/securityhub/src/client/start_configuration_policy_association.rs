// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartConfigurationPolicyAssociation`](crate::operation::start_configuration_policy_association::builders::StartConfigurationPolicyAssociationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_policy_identifier(impl Into<String>)`](crate::operation::start_configuration_policy_association::builders::StartConfigurationPolicyAssociationFluentBuilder::configuration_policy_identifier) / [`set_configuration_policy_identifier(Option<String>)`](crate::operation::start_configuration_policy_association::builders::StartConfigurationPolicyAssociationFluentBuilder::set_configuration_policy_identifier):<br>required: **true**<br><p>The Amazon Resource Name (ARN) or universally unique identifier (UUID) of the configuration policy.</p><br>
    ///   - [`target(Target)`](crate::operation::start_configuration_policy_association::builders::StartConfigurationPolicyAssociationFluentBuilder::target) / [`set_target(Option<Target>)`](crate::operation::start_configuration_policy_association::builders::StartConfigurationPolicyAssociationFluentBuilder::set_target):<br>required: **true**<br><p>The identifier of the target account, organizational unit, or the root to associate with the specified configuration.</p><br>
    /// - On success, responds with [`StartConfigurationPolicyAssociationOutput`](crate::operation::start_configuration_policy_association::StartConfigurationPolicyAssociationOutput) with field(s):
    ///   - [`configuration_policy_id(Option<String>)`](crate::operation::start_configuration_policy_association::StartConfigurationPolicyAssociationOutput::configuration_policy_id): <p>The UUID of the configuration policy.</p>
    ///   - [`target_id(Option<String>)`](crate::operation::start_configuration_policy_association::StartConfigurationPolicyAssociationOutput::target_id): <p>The identifier of the target account, organizational unit, or the organization root with which the configuration is associated.</p>
    ///   - [`target_type(Option<TargetType>)`](crate::operation::start_configuration_policy_association::StartConfigurationPolicyAssociationOutput::target_type): <p>Indicates whether the target is an Amazon Web Services account, organizational unit, or the organization root.</p>
    ///   - [`association_type(Option<AssociationType>)`](crate::operation::start_configuration_policy_association::StartConfigurationPolicyAssociationOutput::association_type): <p>Indicates whether the association between the specified target and the configuration was directly applied by the Security Hub delegated administrator or inherited from a parent.</p>
    ///   - [`updated_at(Option<DateTime>)`](crate::operation::start_configuration_policy_association::StartConfigurationPolicyAssociationOutput::updated_at): <p>The date and time, in UTC and ISO 8601 format, that the configuration policy association was last updated.</p>
    ///   - [`association_status(Option<ConfigurationPolicyAssociationStatus>)`](crate::operation::start_configuration_policy_association::StartConfigurationPolicyAssociationOutput::association_status): <p>The current status of the association between the specified target and the configuration.</p>
    ///   - [`association_status_message(Option<String>)`](crate::operation::start_configuration_policy_association::StartConfigurationPolicyAssociationOutput::association_status_message): <p>An explanation for a <code>FAILED</code> value for <code>AssociationStatus</code>.</p>
    /// - On failure, responds with [`SdkError<StartConfigurationPolicyAssociationError>`](crate::operation::start_configuration_policy_association::StartConfigurationPolicyAssociationError)
    pub fn start_configuration_policy_association(
        &self,
    ) -> crate::operation::start_configuration_policy_association::builders::StartConfigurationPolicyAssociationFluentBuilder {
        crate::operation::start_configuration_policy_association::builders::StartConfigurationPolicyAssociationFluentBuilder::new(self.handle.clone())
    }
}
