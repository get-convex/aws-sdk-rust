// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetConfigurationPolicyAssociation`](crate::operation::get_configuration_policy_association::builders::GetConfigurationPolicyAssociationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`target(Target)`](crate::operation::get_configuration_policy_association::builders::GetConfigurationPolicyAssociationFluentBuilder::target) / [`set_target(Option<Target>)`](crate::operation::get_configuration_policy_association::builders::GetConfigurationPolicyAssociationFluentBuilder::set_target):<br>required: **true**<br><p>The target account ID, organizational unit ID, or the root ID to retrieve the association for.</p><br>
    /// - On success, responds with [`GetConfigurationPolicyAssociationOutput`](crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationOutput) with field(s):
    ///   - [`configuration_policy_id(Option<String>)`](crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationOutput::configuration_policy_id): <p>The universally unique identifier (UUID) of a configuration policy. For self-managed behavior, the value is <code>SELF_MANAGED_SECURITY_HUB</code>.</p>
    ///   - [`target_id(Option<String>)`](crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationOutput::target_id): <p>The target account ID, organizational unit ID, or the root ID for which the association is retrieved.</p>
    ///   - [`target_type(Option<TargetType>)`](crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationOutput::target_type): <p>Specifies whether the target is an Amazon Web Services account, organizational unit, or the organization root.</p>
    ///   - [`association_type(Option<AssociationType>)`](crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationOutput::association_type): <p>Indicates whether the association between the specified target and the configuration was directly applied by the Security Hub delegated administrator or inherited from a parent.</p>
    ///   - [`updated_at(Option<DateTime>)`](crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationOutput::updated_at): <p>The date and time, in UTC and ISO 8601 format, that the configuration policy association was last updated.</p>
    ///   - [`association_status(Option<ConfigurationPolicyAssociationStatus>)`](crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationOutput::association_status): <p>The current status of the association between the specified target and the configuration.</p>
    ///   - [`association_status_message(Option<String>)`](crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationOutput::association_status_message): <p>The explanation for a <code>FAILED</code> value for <code>AssociationStatus</code>.</p>
    /// - On failure, responds with [`SdkError<GetConfigurationPolicyAssociationError>`](crate::operation::get_configuration_policy_association::GetConfigurationPolicyAssociationError)
    pub fn get_configuration_policy_association(
        &self,
    ) -> crate::operation::get_configuration_policy_association::builders::GetConfigurationPolicyAssociationFluentBuilder {
        crate::operation::get_configuration_policy_association::builders::GetConfigurationPolicyAssociationFluentBuilder::new(self.handle.clone())
    }
}
