// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The virtual private cloud (VPC) configuration for an Amazon S3 access point.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsS3AccessPointVpcConfigurationDetails {
    /// <p>If this field is specified, this access point will only allow connections from the specified VPC ID.</p>
    pub vpc_id: ::std::option::Option<::std::string::String>,
}
impl AwsS3AccessPointVpcConfigurationDetails {
    /// <p>If this field is specified, this access point will only allow connections from the specified VPC ID.</p>
    pub fn vpc_id(&self) -> ::std::option::Option<&str> {
        self.vpc_id.as_deref()
    }
}
impl AwsS3AccessPointVpcConfigurationDetails {
    /// Creates a new builder-style object to manufacture [`AwsS3AccessPointVpcConfigurationDetails`](crate::types::AwsS3AccessPointVpcConfigurationDetails).
    pub fn builder() -> crate::types::builders::AwsS3AccessPointVpcConfigurationDetailsBuilder {
        crate::types::builders::AwsS3AccessPointVpcConfigurationDetailsBuilder::default()
    }
}

/// A builder for [`AwsS3AccessPointVpcConfigurationDetails`](crate::types::AwsS3AccessPointVpcConfigurationDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsS3AccessPointVpcConfigurationDetailsBuilder {
    pub(crate) vpc_id: ::std::option::Option<::std::string::String>,
}
impl AwsS3AccessPointVpcConfigurationDetailsBuilder {
    /// <p>If this field is specified, this access point will only allow connections from the specified VPC ID.</p>
    pub fn vpc_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vpc_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If this field is specified, this access point will only allow connections from the specified VPC ID.</p>
    pub fn set_vpc_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vpc_id = input;
        self
    }
    /// <p>If this field is specified, this access point will only allow connections from the specified VPC ID.</p>
    pub fn get_vpc_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.vpc_id
    }
    /// Consumes the builder and constructs a [`AwsS3AccessPointVpcConfigurationDetails`](crate::types::AwsS3AccessPointVpcConfigurationDetails).
    pub fn build(self) -> crate::types::AwsS3AccessPointVpcConfigurationDetails {
        crate::types::AwsS3AccessPointVpcConfigurationDetails { vpc_id: self.vpc_id }
    }
}
