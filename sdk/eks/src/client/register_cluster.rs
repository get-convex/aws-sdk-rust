// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterCluster`](crate::operation::register_cluster::builders::RegisterClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::register_cluster::builders::RegisterClusterFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::register_cluster::builders::RegisterClusterFluentBuilder::set_name):<br>required: **true**<br><p>A unique name for this cluster in your Amazon Web Services Region.</p><br>
    ///   - [`connector_config(ConnectorConfigRequest)`](crate::operation::register_cluster::builders::RegisterClusterFluentBuilder::connector_config) / [`set_connector_config(Option<ConnectorConfigRequest>)`](crate::operation::register_cluster::builders::RegisterClusterFluentBuilder::set_connector_config):<br>required: **true**<br><p>The configuration settings required to connect the Kubernetes cluster to the Amazon EKS control plane.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::register_cluster::builders::RegisterClusterFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::register_cluster::builders::RegisterClusterFluentBuilder::set_client_request_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::register_cluster::builders::RegisterClusterFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::register_cluster::builders::RegisterClusterFluentBuilder::set_tags):<br>required: **false**<br><p>Metadata that assists with categorization and organization. Each tag consists of a key and an optional value. You define both. Tags don't propagate to any other cluster or Amazon Web Services resources.</p><br>
    /// - On success, responds with [`RegisterClusterOutput`](crate::operation::register_cluster::RegisterClusterOutput) with field(s):
    ///   - [`cluster(Option<Cluster>)`](crate::operation::register_cluster::RegisterClusterOutput::cluster): <p>An object representing an Amazon EKS cluster.</p>
    /// - On failure, responds with [`SdkError<RegisterClusterError>`](crate::operation::register_cluster::RegisterClusterError)
    pub fn register_cluster(&self) -> crate::operation::register_cluster::builders::RegisterClusterFluentBuilder {
        crate::operation::register_cluster::builders::RegisterClusterFluentBuilder::new(self.handle.clone())
    }
}
