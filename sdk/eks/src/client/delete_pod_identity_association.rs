// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeletePodIdentityAssociation`](crate::operation::delete_pod_identity_association::builders::DeletePodIdentityAssociationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::operation::delete_pod_identity_association::builders::DeletePodIdentityAssociationFluentBuilder::cluster_name) / [`set_cluster_name(Option<String>)`](crate::operation::delete_pod_identity_association::builders::DeletePodIdentityAssociationFluentBuilder::set_cluster_name):<br>required: **true**<br><p>The cluster name that</p><br>
    ///   - [`association_id(impl Into<String>)`](crate::operation::delete_pod_identity_association::builders::DeletePodIdentityAssociationFluentBuilder::association_id) / [`set_association_id(Option<String>)`](crate::operation::delete_pod_identity_association::builders::DeletePodIdentityAssociationFluentBuilder::set_association_id):<br>required: **true**<br><p>The ID of the association to be deleted.</p><br>
    /// - On success, responds with [`DeletePodIdentityAssociationOutput`](crate::operation::delete_pod_identity_association::DeletePodIdentityAssociationOutput) with field(s):
    ///   - [`association(Option<PodIdentityAssociation>)`](crate::operation::delete_pod_identity_association::DeletePodIdentityAssociationOutput::association): <p>The full description of the EKS Pod Identity association that was deleted.</p>
    /// - On failure, responds with [`SdkError<DeletePodIdentityAssociationError>`](crate::operation::delete_pod_identity_association::DeletePodIdentityAssociationError)
    pub fn delete_pod_identity_association(
        &self,
    ) -> crate::operation::delete_pod_identity_association::builders::DeletePodIdentityAssociationFluentBuilder {
        crate::operation::delete_pod_identity_association::builders::DeletePodIdentityAssociationFluentBuilder::new(self.handle.clone())
    }
}
