// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary information that relates to the category of the insight. Currently only returned with certain insights having category <code>UPGRADE_READINESS</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InsightCategorySpecificSummary {
    /// <p>The summary information about deprecated resource usage for an insight check in the <code>UPGRADE_READINESS</code> category.</p>
    pub deprecation_details: ::std::option::Option<::std::vec::Vec<crate::types::DeprecationDetail>>,
}
impl InsightCategorySpecificSummary {
    /// <p>The summary information about deprecated resource usage for an insight check in the <code>UPGRADE_READINESS</code> category.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.deprecation_details.is_none()`.
    pub fn deprecation_details(&self) -> &[crate::types::DeprecationDetail] {
        self.deprecation_details.as_deref().unwrap_or_default()
    }
}
impl InsightCategorySpecificSummary {
    /// Creates a new builder-style object to manufacture [`InsightCategorySpecificSummary`](crate::types::InsightCategorySpecificSummary).
    pub fn builder() -> crate::types::builders::InsightCategorySpecificSummaryBuilder {
        crate::types::builders::InsightCategorySpecificSummaryBuilder::default()
    }
}

/// A builder for [`InsightCategorySpecificSummary`](crate::types::InsightCategorySpecificSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InsightCategorySpecificSummaryBuilder {
    pub(crate) deprecation_details: ::std::option::Option<::std::vec::Vec<crate::types::DeprecationDetail>>,
}
impl InsightCategorySpecificSummaryBuilder {
    /// Appends an item to `deprecation_details`.
    ///
    /// To override the contents of this collection use [`set_deprecation_details`](Self::set_deprecation_details).
    ///
    /// <p>The summary information about deprecated resource usage for an insight check in the <code>UPGRADE_READINESS</code> category.</p>
    pub fn deprecation_details(mut self, input: crate::types::DeprecationDetail) -> Self {
        let mut v = self.deprecation_details.unwrap_or_default();
        v.push(input);
        self.deprecation_details = ::std::option::Option::Some(v);
        self
    }
    /// <p>The summary information about deprecated resource usage for an insight check in the <code>UPGRADE_READINESS</code> category.</p>
    pub fn set_deprecation_details(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::DeprecationDetail>>) -> Self {
        self.deprecation_details = input;
        self
    }
    /// <p>The summary information about deprecated resource usage for an insight check in the <code>UPGRADE_READINESS</code> category.</p>
    pub fn get_deprecation_details(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::DeprecationDetail>> {
        &self.deprecation_details
    }
    /// Consumes the builder and constructs a [`InsightCategorySpecificSummary`](crate::types::InsightCategorySpecificSummary).
    pub fn build(self) -> crate::types::InsightCategorySpecificSummary {
        crate::types::InsightCategorySpecificSummary {
            deprecation_details: self.deprecation_details,
        }
    }
}
