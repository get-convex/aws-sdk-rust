// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateAccessEntryOutput {
    /// <p>An access entry allows an IAM principal (user or role) to access your cluster. Access entries can replace the need to maintain the <code>aws-auth</code> <code>ConfigMap</code> for authentication. For more information about access entries, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/access-entries.html">Access entries</a> in the <i>Amazon EKS User Guide</i>.</p>
    pub access_entry: ::std::option::Option<crate::types::AccessEntry>,
    _request_id: Option<String>,
}
impl CreateAccessEntryOutput {
    /// <p>An access entry allows an IAM principal (user or role) to access your cluster. Access entries can replace the need to maintain the <code>aws-auth</code> <code>ConfigMap</code> for authentication. For more information about access entries, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/access-entries.html">Access entries</a> in the <i>Amazon EKS User Guide</i>.</p>
    pub fn access_entry(&self) -> ::std::option::Option<&crate::types::AccessEntry> {
        self.access_entry.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for CreateAccessEntryOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateAccessEntryOutput {
    /// Creates a new builder-style object to manufacture [`CreateAccessEntryOutput`](crate::operation::create_access_entry::CreateAccessEntryOutput).
    pub fn builder() -> crate::operation::create_access_entry::builders::CreateAccessEntryOutputBuilder {
        crate::operation::create_access_entry::builders::CreateAccessEntryOutputBuilder::default()
    }
}

/// A builder for [`CreateAccessEntryOutput`](crate::operation::create_access_entry::CreateAccessEntryOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateAccessEntryOutputBuilder {
    pub(crate) access_entry: ::std::option::Option<crate::types::AccessEntry>,
    _request_id: Option<String>,
}
impl CreateAccessEntryOutputBuilder {
    /// <p>An access entry allows an IAM principal (user or role) to access your cluster. Access entries can replace the need to maintain the <code>aws-auth</code> <code>ConfigMap</code> for authentication. For more information about access entries, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/access-entries.html">Access entries</a> in the <i>Amazon EKS User Guide</i>.</p>
    pub fn access_entry(mut self, input: crate::types::AccessEntry) -> Self {
        self.access_entry = ::std::option::Option::Some(input);
        self
    }
    /// <p>An access entry allows an IAM principal (user or role) to access your cluster. Access entries can replace the need to maintain the <code>aws-auth</code> <code>ConfigMap</code> for authentication. For more information about access entries, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/access-entries.html">Access entries</a> in the <i>Amazon EKS User Guide</i>.</p>
    pub fn set_access_entry(mut self, input: ::std::option::Option<crate::types::AccessEntry>) -> Self {
        self.access_entry = input;
        self
    }
    /// <p>An access entry allows an IAM principal (user or role) to access your cluster. Access entries can replace the need to maintain the <code>aws-auth</code> <code>ConfigMap</code> for authentication. For more information about access entries, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/access-entries.html">Access entries</a> in the <i>Amazon EKS User Guide</i>.</p>
    pub fn get_access_entry(&self) -> &::std::option::Option<crate::types::AccessEntry> {
        &self.access_entry
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateAccessEntryOutput`](crate::operation::create_access_entry::CreateAccessEntryOutput).
    pub fn build(self) -> crate::operation::create_access_entry::CreateAccessEntryOutput {
        crate::operation::create_access_entry::CreateAccessEntryOutput {
            access_entry: self.access_entry,
            _request_id: self._request_id,
        }
    }
}
