// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListPodIdentityAssociationsOutput {
    /// <p>The list of summarized descriptions of the associations that are in the cluster and match any filters that you provided.</p>
    /// <p>Each summary is simplified by removing these fields compared to the full <code> <code>PodIdentityAssociation</code> </code>:</p>
    /// <ul>
    /// <li>
    /// <p>The IAM role: <code>roleArn</code></p></li>
    /// <li>
    /// <p>The timestamp that the association was created at: <code>createdAt</code></p></li>
    /// <li>
    /// <p>The most recent timestamp that the association was modified at:. <code>modifiedAt</code></p></li>
    /// <li>
    /// <p>The tags on the association: <code>tags</code></p></li>
    /// </ul>
    pub associations: ::std::option::Option<::std::vec::Vec<crate::types::PodIdentityAssociationSummary>>,
    /// <p>The <code>nextToken</code> value to include in a future <code>ListPodIdentityAssociations</code> request. When the results of a <code>ListPodIdentityAssociations</code> request exceed <code>maxResults</code>, you can use this value to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p><note>
    /// <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p>
    /// </note>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListPodIdentityAssociationsOutput {
    /// <p>The list of summarized descriptions of the associations that are in the cluster and match any filters that you provided.</p>
    /// <p>Each summary is simplified by removing these fields compared to the full <code> <code>PodIdentityAssociation</code> </code>:</p>
    /// <ul>
    /// <li>
    /// <p>The IAM role: <code>roleArn</code></p></li>
    /// <li>
    /// <p>The timestamp that the association was created at: <code>createdAt</code></p></li>
    /// <li>
    /// <p>The most recent timestamp that the association was modified at:. <code>modifiedAt</code></p></li>
    /// <li>
    /// <p>The tags on the association: <code>tags</code></p></li>
    /// </ul>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.associations.is_none()`.
    pub fn associations(&self) -> &[crate::types::PodIdentityAssociationSummary] {
        self.associations.as_deref().unwrap_or_default()
    }
    /// <p>The <code>nextToken</code> value to include in a future <code>ListPodIdentityAssociations</code> request. When the results of a <code>ListPodIdentityAssociations</code> request exceed <code>maxResults</code>, you can use this value to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p><note>
    /// <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p>
    /// </note>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for ListPodIdentityAssociationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListPodIdentityAssociationsOutput {
    /// Creates a new builder-style object to manufacture [`ListPodIdentityAssociationsOutput`](crate::operation::list_pod_identity_associations::ListPodIdentityAssociationsOutput).
    pub fn builder() -> crate::operation::list_pod_identity_associations::builders::ListPodIdentityAssociationsOutputBuilder {
        crate::operation::list_pod_identity_associations::builders::ListPodIdentityAssociationsOutputBuilder::default()
    }
}

/// A builder for [`ListPodIdentityAssociationsOutput`](crate::operation::list_pod_identity_associations::ListPodIdentityAssociationsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListPodIdentityAssociationsOutputBuilder {
    pub(crate) associations: ::std::option::Option<::std::vec::Vec<crate::types::PodIdentityAssociationSummary>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListPodIdentityAssociationsOutputBuilder {
    /// Appends an item to `associations`.
    ///
    /// To override the contents of this collection use [`set_associations`](Self::set_associations).
    ///
    /// <p>The list of summarized descriptions of the associations that are in the cluster and match any filters that you provided.</p>
    /// <p>Each summary is simplified by removing these fields compared to the full <code> <code>PodIdentityAssociation</code> </code>:</p>
    /// <ul>
    /// <li>
    /// <p>The IAM role: <code>roleArn</code></p></li>
    /// <li>
    /// <p>The timestamp that the association was created at: <code>createdAt</code></p></li>
    /// <li>
    /// <p>The most recent timestamp that the association was modified at:. <code>modifiedAt</code></p></li>
    /// <li>
    /// <p>The tags on the association: <code>tags</code></p></li>
    /// </ul>
    pub fn associations(mut self, input: crate::types::PodIdentityAssociationSummary) -> Self {
        let mut v = self.associations.unwrap_or_default();
        v.push(input);
        self.associations = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of summarized descriptions of the associations that are in the cluster and match any filters that you provided.</p>
    /// <p>Each summary is simplified by removing these fields compared to the full <code> <code>PodIdentityAssociation</code> </code>:</p>
    /// <ul>
    /// <li>
    /// <p>The IAM role: <code>roleArn</code></p></li>
    /// <li>
    /// <p>The timestamp that the association was created at: <code>createdAt</code></p></li>
    /// <li>
    /// <p>The most recent timestamp that the association was modified at:. <code>modifiedAt</code></p></li>
    /// <li>
    /// <p>The tags on the association: <code>tags</code></p></li>
    /// </ul>
    pub fn set_associations(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::PodIdentityAssociationSummary>>) -> Self {
        self.associations = input;
        self
    }
    /// <p>The list of summarized descriptions of the associations that are in the cluster and match any filters that you provided.</p>
    /// <p>Each summary is simplified by removing these fields compared to the full <code> <code>PodIdentityAssociation</code> </code>:</p>
    /// <ul>
    /// <li>
    /// <p>The IAM role: <code>roleArn</code></p></li>
    /// <li>
    /// <p>The timestamp that the association was created at: <code>createdAt</code></p></li>
    /// <li>
    /// <p>The most recent timestamp that the association was modified at:. <code>modifiedAt</code></p></li>
    /// <li>
    /// <p>The tags on the association: <code>tags</code></p></li>
    /// </ul>
    pub fn get_associations(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::PodIdentityAssociationSummary>> {
        &self.associations
    }
    /// <p>The <code>nextToken</code> value to include in a future <code>ListPodIdentityAssociations</code> request. When the results of a <code>ListPodIdentityAssociations</code> request exceed <code>maxResults</code>, you can use this value to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p><note>
    /// <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p>
    /// </note>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <code>nextToken</code> value to include in a future <code>ListPodIdentityAssociations</code> request. When the results of a <code>ListPodIdentityAssociations</code> request exceed <code>maxResults</code>, you can use this value to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p><note>
    /// <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p>
    /// </note>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The <code>nextToken</code> value to include in a future <code>ListPodIdentityAssociations</code> request. When the results of a <code>ListPodIdentityAssociations</code> request exceed <code>maxResults</code>, you can use this value to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p><note>
    /// <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p>
    /// </note>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListPodIdentityAssociationsOutput`](crate::operation::list_pod_identity_associations::ListPodIdentityAssociationsOutput).
    pub fn build(self) -> crate::operation::list_pod_identity_associations::ListPodIdentityAssociationsOutput {
        crate::operation::list_pod_identity_associations::ListPodIdentityAssociationsOutput {
            associations: self.associations,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
