// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Settings for the action to deactivate the image in a specific layer.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StaticImageOutputDeactivateScheduleActionSettings {
    /// The time in milliseconds for the image to fade out. Default is 0 (no fade-out).
    pub fade_out: ::std::option::Option<i32>,
    /// The image overlay layer to deactivate, 0 to 7. Default is 0.
    pub layer: ::std::option::Option<i32>,
    /// The name(s) of the output(s) the deactivation should apply to.
    pub output_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl StaticImageOutputDeactivateScheduleActionSettings {
    /// The time in milliseconds for the image to fade out. Default is 0 (no fade-out).
    pub fn fade_out(&self) -> ::std::option::Option<i32> {
        self.fade_out
    }
    /// The image overlay layer to deactivate, 0 to 7. Default is 0.
    pub fn layer(&self) -> ::std::option::Option<i32> {
        self.layer
    }
    /// The name(s) of the output(s) the deactivation should apply to.
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.output_names.is_none()`.
    pub fn output_names(&self) -> &[::std::string::String] {
        self.output_names.as_deref().unwrap_or_default()
    }
}
impl StaticImageOutputDeactivateScheduleActionSettings {
    /// Creates a new builder-style object to manufacture [`StaticImageOutputDeactivateScheduleActionSettings`](crate::types::StaticImageOutputDeactivateScheduleActionSettings).
    pub fn builder() -> crate::types::builders::StaticImageOutputDeactivateScheduleActionSettingsBuilder {
        crate::types::builders::StaticImageOutputDeactivateScheduleActionSettingsBuilder::default()
    }
}

/// A builder for [`StaticImageOutputDeactivateScheduleActionSettings`](crate::types::StaticImageOutputDeactivateScheduleActionSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StaticImageOutputDeactivateScheduleActionSettingsBuilder {
    pub(crate) fade_out: ::std::option::Option<i32>,
    pub(crate) layer: ::std::option::Option<i32>,
    pub(crate) output_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl StaticImageOutputDeactivateScheduleActionSettingsBuilder {
    /// The time in milliseconds for the image to fade out. Default is 0 (no fade-out).
    pub fn fade_out(mut self, input: i32) -> Self {
        self.fade_out = ::std::option::Option::Some(input);
        self
    }
    /// The time in milliseconds for the image to fade out. Default is 0 (no fade-out).
    pub fn set_fade_out(mut self, input: ::std::option::Option<i32>) -> Self {
        self.fade_out = input;
        self
    }
    /// The time in milliseconds for the image to fade out. Default is 0 (no fade-out).
    pub fn get_fade_out(&self) -> &::std::option::Option<i32> {
        &self.fade_out
    }
    /// The image overlay layer to deactivate, 0 to 7. Default is 0.
    pub fn layer(mut self, input: i32) -> Self {
        self.layer = ::std::option::Option::Some(input);
        self
    }
    /// The image overlay layer to deactivate, 0 to 7. Default is 0.
    pub fn set_layer(mut self, input: ::std::option::Option<i32>) -> Self {
        self.layer = input;
        self
    }
    /// The image overlay layer to deactivate, 0 to 7. Default is 0.
    pub fn get_layer(&self) -> &::std::option::Option<i32> {
        &self.layer
    }
    /// Appends an item to `output_names`.
    ///
    /// To override the contents of this collection use [`set_output_names`](Self::set_output_names).
    ///
    /// The name(s) of the output(s) the deactivation should apply to.
    pub fn output_names(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.output_names.unwrap_or_default();
        v.push(input.into());
        self.output_names = ::std::option::Option::Some(v);
        self
    }
    /// The name(s) of the output(s) the deactivation should apply to.
    pub fn set_output_names(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.output_names = input;
        self
    }
    /// The name(s) of the output(s) the deactivation should apply to.
    pub fn get_output_names(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.output_names
    }
    /// Consumes the builder and constructs a [`StaticImageOutputDeactivateScheduleActionSettings`](crate::types::StaticImageOutputDeactivateScheduleActionSettings).
    pub fn build(self) -> crate::types::StaticImageOutputDeactivateScheduleActionSettings {
        crate::types::StaticImageOutputDeactivateScheduleActionSettings {
            fade_out: self.fade_out,
            layer: self.layer,
            output_names: self.output_names,
        }
    }
}
