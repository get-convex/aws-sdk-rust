// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateTransformer`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`transformer_id(impl Into<String>)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::transformer_id) / [`set_transformer_id(Option<String>)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::set_transformer_id):<br>required: **true**<br><p>Specifies the system-assigned unique identifier for the transformer.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::set_name):<br>required: **false**<br><p>Specify a new name for the transformer, if you want to update it.</p><br>
    ///   - [`file_format(FileFormat)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::file_format) / [`set_file_format(Option<FileFormat>)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::set_file_format):<br>required: **false**<br><p>Specifies that the currently supported file formats for EDI transformations are <code>JSON</code> and <code>XML</code>.</p><br>
    ///   - [`mapping_template(impl Into<String>)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::mapping_template) / [`set_mapping_template(Option<String>)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::set_mapping_template):<br>required: **false**<br><p>Specifies the name of the mapping template for the transformer. This template is used to convert the input document into the correct set of objects.</p><br>
    ///   - [`status(TransformerStatus)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::status) / [`set_status(Option<TransformerStatus>)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::set_status):<br>required: **false**<br><p>Specifies the transformer's status. You can update the state of the transformer, from <code>active</code> to <code>inactive</code>, or <code>inactive</code> to <code>active</code>.</p><br>
    ///   - [`edi_type(EdiType)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::edi_type) / [`set_edi_type(Option<EdiType>)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::set_edi_type):<br>required: **false**<br><p>Specifies the details for the EDI standard that is being used for the transformer. Currently, only X12 is supported. X12 is a set of standards and corresponding messages that define specific business documents.</p><br>
    ///   - [`sample_document(impl Into<String>)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::sample_document) / [`set_sample_document(Option<String>)`](crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::set_sample_document):<br>required: **false**<br><p>Specifies a sample EDI document that is used by a transformer as a guide for processing the EDI data.</p><br>
    /// - On success, responds with [`UpdateTransformerOutput`](crate::operation::update_transformer::UpdateTransformerOutput) with field(s):
    ///   - [`transformer_id(String)`](crate::operation::update_transformer::UpdateTransformerOutput::transformer_id): <p>Returns the system-assigned unique identifier for the transformer.</p>
    ///   - [`transformer_arn(String)`](crate::operation::update_transformer::UpdateTransformerOutput::transformer_arn): <p>Returns an Amazon Resource Name (ARN) for a specific Amazon Web Services resource, such as a capability, partnership, profile, or transformer.</p>
    ///   - [`name(String)`](crate::operation::update_transformer::UpdateTransformerOutput::name): <p>Returns the name of the transformer.</p>
    ///   - [`file_format(FileFormat)`](crate::operation::update_transformer::UpdateTransformerOutput::file_format): <p>Returns that the currently supported file formats for EDI transformations are <code>JSON</code> and <code>XML</code>.</p>
    ///   - [`mapping_template(String)`](crate::operation::update_transformer::UpdateTransformerOutput::mapping_template): <p>Returns the name of the mapping template for the transformer. This template is used to convert the input document into the correct set of objects.</p>
    ///   - [`status(TransformerStatus)`](crate::operation::update_transformer::UpdateTransformerOutput::status): <p>Returns the state of the newly created transformer. The transformer can be either <code>active</code> or <code>inactive</code>. For the transformer to be used in a capability, its status must <code>active</code>.</p>
    ///   - [`edi_type(Option<EdiType>)`](crate::operation::update_transformer::UpdateTransformerOutput::edi_type): <p>Returns the details for the EDI standard that is being used for the transformer. Currently, only X12 is supported. X12 is a set of standards and corresponding messages that define specific business documents.</p>
    ///   - [`sample_document(Option<String>)`](crate::operation::update_transformer::UpdateTransformerOutput::sample_document): <p>Returns a sample EDI document that is used by a transformer as a guide for processing the EDI data.</p>
    ///   - [`created_at(DateTime)`](crate::operation::update_transformer::UpdateTransformerOutput::created_at): <p>Returns a timestamp for creation date and time of the transformer.</p>
    ///   - [`modified_at(DateTime)`](crate::operation::update_transformer::UpdateTransformerOutput::modified_at): <p>Returns a timestamp for last time the transformer was modified.</p>
    /// - On failure, responds with [`SdkError<UpdateTransformerError>`](crate::operation::update_transformer::UpdateTransformerError)
    pub fn update_transformer(&self) -> crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder {
        crate::operation::update_transformer::builders::UpdateTransformerFluentBuilder::new(self.handle.clone())
    }
}
