// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTransformer`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::set_name):<br>required: **true**<br><p>Specifies the name of the transformer, used to identify it.</p><br>
    ///   - [`file_format(FileFormat)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::file_format) / [`set_file_format(Option<FileFormat>)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::set_file_format):<br>required: **true**<br><p>Specifies that the currently supported file formats for EDI transformations are <code>JSON</code> and <code>XML</code>.</p><br>
    ///   - [`mapping_template(impl Into<String>)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::mapping_template) / [`set_mapping_template(Option<String>)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::set_mapping_template):<br>required: **true**<br><p>Specifies the name of the mapping template for the transformer. This template is used to convert the input document into the correct set of objects.</p><br>
    ///   - [`edi_type(EdiType)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::edi_type) / [`set_edi_type(Option<EdiType>)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::set_edi_type):<br>required: **true**<br><p>Specifies the details for the EDI standard that is being used for the transformer. Currently, only X12 is supported. X12 is a set of standards and corresponding messages that define specific business documents.</p><br>
    ///   - [`sample_document(impl Into<String>)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::sample_document) / [`set_sample_document(Option<String>)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::set_sample_document):<br>required: **false**<br><p>Specifies a sample EDI document that is used by a transformer as a guide for processing the EDI data.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::set_client_token):<br>required: **false**<br><p>Reserved for future use.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::set_tags):<br>required: **false**<br><p>Specifies the key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to resources (capabilities, partnerships, and so on) for any purpose.</p><br>
    /// - On success, responds with [`CreateTransformerOutput`](crate::operation::create_transformer::CreateTransformerOutput) with field(s):
    ///   - [`transformer_id(String)`](crate::operation::create_transformer::CreateTransformerOutput::transformer_id): <p>Returns the system-assigned unique identifier for the transformer.</p>
    ///   - [`transformer_arn(String)`](crate::operation::create_transformer::CreateTransformerOutput::transformer_arn): <p>Returns an Amazon Resource Name (ARN) for a specific Amazon Web Services resource, such as a capability, partnership, profile, or transformer.</p>
    ///   - [`name(String)`](crate::operation::create_transformer::CreateTransformerOutput::name): <p>Returns the name of the transformer, used to identify it.</p>
    ///   - [`file_format(FileFormat)`](crate::operation::create_transformer::CreateTransformerOutput::file_format): <p>Returns that the currently supported file formats for EDI transformations are <code>JSON</code> and <code>XML</code>.</p>
    ///   - [`mapping_template(String)`](crate::operation::create_transformer::CreateTransformerOutput::mapping_template): <p>Returns the name of the mapping template for the transformer. This template is used to convert the input document into the correct set of objects.</p>
    ///   - [`status(TransformerStatus)`](crate::operation::create_transformer::CreateTransformerOutput::status): <p>Returns the state of the newly created transformer. The transformer can be either <code>active</code> or <code>inactive</code>. For the transformer to be used in a capability, its status must <code>active</code>.</p>
    ///   - [`edi_type(Option<EdiType>)`](crate::operation::create_transformer::CreateTransformerOutput::edi_type): <p>Returns the details for the EDI standard that is being used for the transformer. Currently, only X12 is supported. X12 is a set of standards and corresponding messages that define specific business documents.</p>
    ///   - [`sample_document(Option<String>)`](crate::operation::create_transformer::CreateTransformerOutput::sample_document): <p>Returns a sample EDI document that is used by a transformer as a guide for processing the EDI data.</p>
    ///   - [`created_at(DateTime)`](crate::operation::create_transformer::CreateTransformerOutput::created_at): <p>Returns a timestamp for creation date and time of the transformer.</p>
    /// - On failure, responds with [`SdkError<CreateTransformerError>`](crate::operation::create_transformer::CreateTransformerError)
    pub fn create_transformer(&self) -> crate::operation::create_transformer::builders::CreateTransformerFluentBuilder {
        crate::operation::create_transformer::builders::CreateTransformerFluentBuilder::new(self.handle.clone())
    }
}
