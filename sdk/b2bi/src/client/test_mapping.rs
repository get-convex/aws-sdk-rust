// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`TestMapping`](crate::operation::test_mapping::builders::TestMappingFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`input_file_content(impl Into<String>)`](crate::operation::test_mapping::builders::TestMappingFluentBuilder::input_file_content) / [`set_input_file_content(Option<String>)`](crate::operation::test_mapping::builders::TestMappingFluentBuilder::set_input_file_content):<br>required: **true**<br><p>Specify the contents of the EDI (electronic data interchange) XML or JSON file that is used as input for the transform.</p><br>
    ///   - [`mapping_template(impl Into<String>)`](crate::operation::test_mapping::builders::TestMappingFluentBuilder::mapping_template) / [`set_mapping_template(Option<String>)`](crate::operation::test_mapping::builders::TestMappingFluentBuilder::set_mapping_template):<br>required: **true**<br><p>Specifies the name of the mapping template for the transformer. This template is used to convert the input document into the correct set of objects.</p><br>
    ///   - [`file_format(FileFormat)`](crate::operation::test_mapping::builders::TestMappingFluentBuilder::file_format) / [`set_file_format(Option<FileFormat>)`](crate::operation::test_mapping::builders::TestMappingFluentBuilder::set_file_format):<br>required: **true**<br><p>Specifies that the currently supported file formats for EDI transformations are <code>JSON</code> and <code>XML</code>.</p><br>
    /// - On success, responds with [`TestMappingOutput`](crate::operation::test_mapping::TestMappingOutput) with field(s):
    ///   - [`mapped_file_content(String)`](crate::operation::test_mapping::TestMappingOutput::mapped_file_content): <p>Returns a string for the mapping that can be used to identify the mapping. Similar to a fingerprint</p>
    /// - On failure, responds with [`SdkError<TestMappingError>`](crate::operation::test_mapping::TestMappingError)
    pub fn test_mapping(&self) -> crate::operation::test_mapping::builders::TestMappingFluentBuilder {
        crate::operation::test_mapping::builders::TestMappingFluentBuilder::new(self.handle.clone())
    }
}
