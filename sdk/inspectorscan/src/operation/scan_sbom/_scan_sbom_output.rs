// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ScanSbomOutput {
    /// <p>The vulnerability report for the scanned SBOM.</p>
    pub sbom: ::std::option::Option<::aws_smithy_types::Document>,
    _request_id: Option<String>,
}
impl ScanSbomOutput {
    /// <p>The vulnerability report for the scanned SBOM.</p>
    pub fn sbom(&self) -> ::std::option::Option<&::aws_smithy_types::Document> {
        self.sbom.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for ScanSbomOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ScanSbomOutput {
    /// Creates a new builder-style object to manufacture [`ScanSbomOutput`](crate::operation::scan_sbom::ScanSbomOutput).
    pub fn builder() -> crate::operation::scan_sbom::builders::ScanSbomOutputBuilder {
        crate::operation::scan_sbom::builders::ScanSbomOutputBuilder::default()
    }
}

/// A builder for [`ScanSbomOutput`](crate::operation::scan_sbom::ScanSbomOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ScanSbomOutputBuilder {
    pub(crate) sbom: ::std::option::Option<::aws_smithy_types::Document>,
    _request_id: Option<String>,
}
impl ScanSbomOutputBuilder {
    /// <p>The vulnerability report for the scanned SBOM.</p>
    pub fn sbom(mut self, input: ::aws_smithy_types::Document) -> Self {
        self.sbom = ::std::option::Option::Some(input);
        self
    }
    /// <p>The vulnerability report for the scanned SBOM.</p>
    pub fn set_sbom(mut self, input: ::std::option::Option<::aws_smithy_types::Document>) -> Self {
        self.sbom = input;
        self
    }
    /// <p>The vulnerability report for the scanned SBOM.</p>
    pub fn get_sbom(&self) -> &::std::option::Option<::aws_smithy_types::Document> {
        &self.sbom
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ScanSbomOutput`](crate::operation::scan_sbom::ScanSbomOutput).
    pub fn build(self) -> crate::operation::scan_sbom::ScanSbomOutput {
        crate::operation::scan_sbom::ScanSbomOutput {
            sbom: self.sbom,
            _request_id: self._request_id,
        }
    }
}
