// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about a text extract in a chat response that can be attributed to a source document.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TextSegment {
    /// <p>The zero-based location in the response string where the source attribution starts.</p>
    pub begin_offset: ::std::option::Option<i32>,
    /// <p>The zero-based location in the response string where the source attribution ends.</p>
    pub end_offset: ::std::option::Option<i32>,
}
impl TextSegment {
    /// <p>The zero-based location in the response string where the source attribution starts.</p>
    pub fn begin_offset(&self) -> ::std::option::Option<i32> {
        self.begin_offset
    }
    /// <p>The zero-based location in the response string where the source attribution ends.</p>
    pub fn end_offset(&self) -> ::std::option::Option<i32> {
        self.end_offset
    }
}
impl TextSegment {
    /// Creates a new builder-style object to manufacture [`TextSegment`](crate::types::TextSegment).
    pub fn builder() -> crate::types::builders::TextSegmentBuilder {
        crate::types::builders::TextSegmentBuilder::default()
    }
}

/// A builder for [`TextSegment`](crate::types::TextSegment).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TextSegmentBuilder {
    pub(crate) begin_offset: ::std::option::Option<i32>,
    pub(crate) end_offset: ::std::option::Option<i32>,
}
impl TextSegmentBuilder {
    /// <p>The zero-based location in the response string where the source attribution starts.</p>
    pub fn begin_offset(mut self, input: i32) -> Self {
        self.begin_offset = ::std::option::Option::Some(input);
        self
    }
    /// <p>The zero-based location in the response string where the source attribution starts.</p>
    pub fn set_begin_offset(mut self, input: ::std::option::Option<i32>) -> Self {
        self.begin_offset = input;
        self
    }
    /// <p>The zero-based location in the response string where the source attribution starts.</p>
    pub fn get_begin_offset(&self) -> &::std::option::Option<i32> {
        &self.begin_offset
    }
    /// <p>The zero-based location in the response string where the source attribution ends.</p>
    pub fn end_offset(mut self, input: i32) -> Self {
        self.end_offset = ::std::option::Option::Some(input);
        self
    }
    /// <p>The zero-based location in the response string where the source attribution ends.</p>
    pub fn set_end_offset(mut self, input: ::std::option::Option<i32>) -> Self {
        self.end_offset = input;
        self
    }
    /// <p>The zero-based location in the response string where the source attribution ends.</p>
    pub fn get_end_offset(&self) -> &::std::option::Option<i32> {
        &self.end_offset
    }
    /// Consumes the builder and constructs a [`TextSegment`](crate::types::TextSegment).
    pub fn build(self) -> crate::types::TextSegment {
        crate::types::TextSegment {
            begin_offset: self.begin_offset,
            end_offset: self.end_offset,
        }
    }
}
