// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration information for the file upload during chat feature.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AttachmentsConfiguration {
    /// <p>Status information about whether file upload functionality is activated or deactivated for your end user.</p>
    pub attachments_control_mode: crate::types::AttachmentsControlMode,
}
impl AttachmentsConfiguration {
    /// <p>Status information about whether file upload functionality is activated or deactivated for your end user.</p>
    pub fn attachments_control_mode(&self) -> &crate::types::AttachmentsControlMode {
        &self.attachments_control_mode
    }
}
impl AttachmentsConfiguration {
    /// Creates a new builder-style object to manufacture [`AttachmentsConfiguration`](crate::types::AttachmentsConfiguration).
    pub fn builder() -> crate::types::builders::AttachmentsConfigurationBuilder {
        crate::types::builders::AttachmentsConfigurationBuilder::default()
    }
}

/// A builder for [`AttachmentsConfiguration`](crate::types::AttachmentsConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AttachmentsConfigurationBuilder {
    pub(crate) attachments_control_mode: ::std::option::Option<crate::types::AttachmentsControlMode>,
}
impl AttachmentsConfigurationBuilder {
    /// <p>Status information about whether file upload functionality is activated or deactivated for your end user.</p>
    /// This field is required.
    pub fn attachments_control_mode(mut self, input: crate::types::AttachmentsControlMode) -> Self {
        self.attachments_control_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>Status information about whether file upload functionality is activated or deactivated for your end user.</p>
    pub fn set_attachments_control_mode(mut self, input: ::std::option::Option<crate::types::AttachmentsControlMode>) -> Self {
        self.attachments_control_mode = input;
        self
    }
    /// <p>Status information about whether file upload functionality is activated or deactivated for your end user.</p>
    pub fn get_attachments_control_mode(&self) -> &::std::option::Option<crate::types::AttachmentsControlMode> {
        &self.attachments_control_mode
    }
    /// Consumes the builder and constructs a [`AttachmentsConfiguration`](crate::types::AttachmentsConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`attachments_control_mode`](crate::types::builders::AttachmentsConfigurationBuilder::attachments_control_mode)
    pub fn build(self) -> ::std::result::Result<crate::types::AttachmentsConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AttachmentsConfiguration {
            attachments_control_mode: self.attachments_control_mode.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "attachments_control_mode",
                    "attachments_control_mode was not specified but it is required when building AttachmentsConfiguration",
                )
            })?,
        })
    }
}
