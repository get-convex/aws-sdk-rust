// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The details of a file uploaded during chat.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AttachmentOutput {
    /// <p>The name of a file uploaded during chat.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The status of a file uploaded during chat.</p>
    pub status: ::std::option::Option<crate::types::AttachmentStatus>,
    /// <p>An error associated with a file uploaded during chat.</p>
    pub error: ::std::option::Option<crate::types::ErrorDetail>,
}
impl AttachmentOutput {
    /// <p>The name of a file uploaded during chat.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The status of a file uploaded during chat.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::AttachmentStatus> {
        self.status.as_ref()
    }
    /// <p>An error associated with a file uploaded during chat.</p>
    pub fn error(&self) -> ::std::option::Option<&crate::types::ErrorDetail> {
        self.error.as_ref()
    }
}
impl AttachmentOutput {
    /// Creates a new builder-style object to manufacture [`AttachmentOutput`](crate::types::AttachmentOutput).
    pub fn builder() -> crate::types::builders::AttachmentOutputBuilder {
        crate::types::builders::AttachmentOutputBuilder::default()
    }
}

/// A builder for [`AttachmentOutput`](crate::types::AttachmentOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AttachmentOutputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::AttachmentStatus>,
    pub(crate) error: ::std::option::Option<crate::types::ErrorDetail>,
}
impl AttachmentOutputBuilder {
    /// <p>The name of a file uploaded during chat.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of a file uploaded during chat.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of a file uploaded during chat.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The status of a file uploaded during chat.</p>
    pub fn status(mut self, input: crate::types::AttachmentStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of a file uploaded during chat.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::AttachmentStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of a file uploaded during chat.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::AttachmentStatus> {
        &self.status
    }
    /// <p>An error associated with a file uploaded during chat.</p>
    pub fn error(mut self, input: crate::types::ErrorDetail) -> Self {
        self.error = ::std::option::Option::Some(input);
        self
    }
    /// <p>An error associated with a file uploaded during chat.</p>
    pub fn set_error(mut self, input: ::std::option::Option<crate::types::ErrorDetail>) -> Self {
        self.error = input;
        self
    }
    /// <p>An error associated with a file uploaded during chat.</p>
    pub fn get_error(&self) -> &::std::option::Option<crate::types::ErrorDetail> {
        &self.error
    }
    /// Consumes the builder and constructs a [`AttachmentOutput`](crate::types::AttachmentOutput).
    pub fn build(self) -> crate::types::AttachmentOutput {
        crate::types::AttachmentOutput {
            name: self.name,
            status: self.status,
            error: self.error,
        }
    }
}
