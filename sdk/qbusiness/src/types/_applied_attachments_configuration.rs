// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration information about the file upload during chat feature for your application.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AppliedAttachmentsConfiguration {
    /// <p>Information about whether file upload during chat functionality is activated for your application.</p>
    pub attachments_control_mode: ::std::option::Option<crate::types::AttachmentsControlMode>,
}
impl AppliedAttachmentsConfiguration {
    /// <p>Information about whether file upload during chat functionality is activated for your application.</p>
    pub fn attachments_control_mode(&self) -> ::std::option::Option<&crate::types::AttachmentsControlMode> {
        self.attachments_control_mode.as_ref()
    }
}
impl AppliedAttachmentsConfiguration {
    /// Creates a new builder-style object to manufacture [`AppliedAttachmentsConfiguration`](crate::types::AppliedAttachmentsConfiguration).
    pub fn builder() -> crate::types::builders::AppliedAttachmentsConfigurationBuilder {
        crate::types::builders::AppliedAttachmentsConfigurationBuilder::default()
    }
}

/// A builder for [`AppliedAttachmentsConfiguration`](crate::types::AppliedAttachmentsConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AppliedAttachmentsConfigurationBuilder {
    pub(crate) attachments_control_mode: ::std::option::Option<crate::types::AttachmentsControlMode>,
}
impl AppliedAttachmentsConfigurationBuilder {
    /// <p>Information about whether file upload during chat functionality is activated for your application.</p>
    pub fn attachments_control_mode(mut self, input: crate::types::AttachmentsControlMode) -> Self {
        self.attachments_control_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about whether file upload during chat functionality is activated for your application.</p>
    pub fn set_attachments_control_mode(mut self, input: ::std::option::Option<crate::types::AttachmentsControlMode>) -> Self {
        self.attachments_control_mode = input;
        self
    }
    /// <p>Information about whether file upload during chat functionality is activated for your application.</p>
    pub fn get_attachments_control_mode(&self) -> &::std::option::Option<crate::types::AttachmentsControlMode> {
        &self.attachments_control_mode
    }
    /// Consumes the builder and constructs a [`AppliedAttachmentsConfiguration`](crate::types::AppliedAttachmentsConfiguration).
    pub fn build(self) -> crate::types::AppliedAttachmentsConfiguration {
        crate::types::AppliedAttachmentsConfiguration {
            attachments_control_mode: self.attachments_control_mode,
        }
    }
}
