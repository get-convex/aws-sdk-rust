// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Object that contains summarized information about a SaaS product.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SaaSProductSummary {
    /// <p>The title of the SaaS product.</p>
    pub product_title: ::std::option::Option<::std::string::String>,
    /// <p>The lifecycle of the SaaS product.</p>
    pub visibility: ::std::option::Option<crate::types::SaaSProductVisibilityString>,
}
impl SaaSProductSummary {
    /// <p>The title of the SaaS product.</p>
    pub fn product_title(&self) -> ::std::option::Option<&str> {
        self.product_title.as_deref()
    }
    /// <p>The lifecycle of the SaaS product.</p>
    pub fn visibility(&self) -> ::std::option::Option<&crate::types::SaaSProductVisibilityString> {
        self.visibility.as_ref()
    }
}
impl SaaSProductSummary {
    /// Creates a new builder-style object to manufacture [`SaaSProductSummary`](crate::types::SaaSProductSummary).
    pub fn builder() -> crate::types::builders::SaaSProductSummaryBuilder {
        crate::types::builders::SaaSProductSummaryBuilder::default()
    }
}

/// A builder for [`SaaSProductSummary`](crate::types::SaaSProductSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SaaSProductSummaryBuilder {
    pub(crate) product_title: ::std::option::Option<::std::string::String>,
    pub(crate) visibility: ::std::option::Option<crate::types::SaaSProductVisibilityString>,
}
impl SaaSProductSummaryBuilder {
    /// <p>The title of the SaaS product.</p>
    pub fn product_title(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.product_title = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The title of the SaaS product.</p>
    pub fn set_product_title(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.product_title = input;
        self
    }
    /// <p>The title of the SaaS product.</p>
    pub fn get_product_title(&self) -> &::std::option::Option<::std::string::String> {
        &self.product_title
    }
    /// <p>The lifecycle of the SaaS product.</p>
    pub fn visibility(mut self, input: crate::types::SaaSProductVisibilityString) -> Self {
        self.visibility = ::std::option::Option::Some(input);
        self
    }
    /// <p>The lifecycle of the SaaS product.</p>
    pub fn set_visibility(mut self, input: ::std::option::Option<crate::types::SaaSProductVisibilityString>) -> Self {
        self.visibility = input;
        self
    }
    /// <p>The lifecycle of the SaaS product.</p>
    pub fn get_visibility(&self) -> &::std::option::Option<crate::types::SaaSProductVisibilityString> {
        &self.visibility
    }
    /// Consumes the builder and constructs a [`SaaSProductSummary`](crate::types::SaaSProductSummary).
    pub fn build(self) -> crate::types::SaaSProductSummary {
        crate::types::SaaSProductSummary {
            product_title: self.product_title,
            visibility: self.visibility,
        }
    }
}
