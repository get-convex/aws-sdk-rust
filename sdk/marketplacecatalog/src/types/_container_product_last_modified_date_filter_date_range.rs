// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Object that contains date range of the last modified date to be filtered on. You can optionally provide a <code>BeforeValue</code> and/or <code>AfterValue</code>. Both are inclusive.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ContainerProductLastModifiedDateFilterDateRange {
    /// <p>Date after which the container product was last modified.</p>
    pub after_value: ::std::option::Option<::std::string::String>,
    /// <p>Date before which the container product was last modified.</p>
    pub before_value: ::std::option::Option<::std::string::String>,
}
impl ContainerProductLastModifiedDateFilterDateRange {
    /// <p>Date after which the container product was last modified.</p>
    pub fn after_value(&self) -> ::std::option::Option<&str> {
        self.after_value.as_deref()
    }
    /// <p>Date before which the container product was last modified.</p>
    pub fn before_value(&self) -> ::std::option::Option<&str> {
        self.before_value.as_deref()
    }
}
impl ContainerProductLastModifiedDateFilterDateRange {
    /// Creates a new builder-style object to manufacture [`ContainerProductLastModifiedDateFilterDateRange`](crate::types::ContainerProductLastModifiedDateFilterDateRange).
    pub fn builder() -> crate::types::builders::ContainerProductLastModifiedDateFilterDateRangeBuilder {
        crate::types::builders::ContainerProductLastModifiedDateFilterDateRangeBuilder::default()
    }
}

/// A builder for [`ContainerProductLastModifiedDateFilterDateRange`](crate::types::ContainerProductLastModifiedDateFilterDateRange).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ContainerProductLastModifiedDateFilterDateRangeBuilder {
    pub(crate) after_value: ::std::option::Option<::std::string::String>,
    pub(crate) before_value: ::std::option::Option<::std::string::String>,
}
impl ContainerProductLastModifiedDateFilterDateRangeBuilder {
    /// <p>Date after which the container product was last modified.</p>
    pub fn after_value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.after_value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Date after which the container product was last modified.</p>
    pub fn set_after_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.after_value = input;
        self
    }
    /// <p>Date after which the container product was last modified.</p>
    pub fn get_after_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.after_value
    }
    /// <p>Date before which the container product was last modified.</p>
    pub fn before_value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.before_value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Date before which the container product was last modified.</p>
    pub fn set_before_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.before_value = input;
        self
    }
    /// <p>Date before which the container product was last modified.</p>
    pub fn get_before_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.before_value
    }
    /// Consumes the builder and constructs a [`ContainerProductLastModifiedDateFilterDateRange`](crate::types::ContainerProductLastModifiedDateFilterDateRange).
    pub fn build(self) -> crate::types::ContainerProductLastModifiedDateFilterDateRange {
        crate::types::ContainerProductLastModifiedDateFilterDateRange {
            after_value: self.after_value,
            before_value: self.before_value,
        }
    }
}
