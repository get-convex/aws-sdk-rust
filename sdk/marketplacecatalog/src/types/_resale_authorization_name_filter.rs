// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Allows filtering on the <code>Name</code> of a ResaleAuthorization.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResaleAuthorizationNameFilter {
    /// <p>Allows filtering on the <code>Name</code> of a ResaleAuthorization with list input.</p>
    pub value_list: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>Allows filtering on the <code>Name</code> of a ResaleAuthorization with wild card input.</p>
    pub wild_card_value: ::std::option::Option<::std::string::String>,
}
impl ResaleAuthorizationNameFilter {
    /// <p>Allows filtering on the <code>Name</code> of a ResaleAuthorization with list input.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.value_list.is_none()`.
    pub fn value_list(&self) -> &[::std::string::String] {
        self.value_list.as_deref().unwrap_or_default()
    }
    /// <p>Allows filtering on the <code>Name</code> of a ResaleAuthorization with wild card input.</p>
    pub fn wild_card_value(&self) -> ::std::option::Option<&str> {
        self.wild_card_value.as_deref()
    }
}
impl ResaleAuthorizationNameFilter {
    /// Creates a new builder-style object to manufacture [`ResaleAuthorizationNameFilter`](crate::types::ResaleAuthorizationNameFilter).
    pub fn builder() -> crate::types::builders::ResaleAuthorizationNameFilterBuilder {
        crate::types::builders::ResaleAuthorizationNameFilterBuilder::default()
    }
}

/// A builder for [`ResaleAuthorizationNameFilter`](crate::types::ResaleAuthorizationNameFilter).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ResaleAuthorizationNameFilterBuilder {
    pub(crate) value_list: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) wild_card_value: ::std::option::Option<::std::string::String>,
}
impl ResaleAuthorizationNameFilterBuilder {
    /// Appends an item to `value_list`.
    ///
    /// To override the contents of this collection use [`set_value_list`](Self::set_value_list).
    ///
    /// <p>Allows filtering on the <code>Name</code> of a ResaleAuthorization with list input.</p>
    pub fn value_list(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.value_list.unwrap_or_default();
        v.push(input.into());
        self.value_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>Allows filtering on the <code>Name</code> of a ResaleAuthorization with list input.</p>
    pub fn set_value_list(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.value_list = input;
        self
    }
    /// <p>Allows filtering on the <code>Name</code> of a ResaleAuthorization with list input.</p>
    pub fn get_value_list(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.value_list
    }
    /// <p>Allows filtering on the <code>Name</code> of a ResaleAuthorization with wild card input.</p>
    pub fn wild_card_value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.wild_card_value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Allows filtering on the <code>Name</code> of a ResaleAuthorization with wild card input.</p>
    pub fn set_wild_card_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.wild_card_value = input;
        self
    }
    /// <p>Allows filtering on the <code>Name</code> of a ResaleAuthorization with wild card input.</p>
    pub fn get_wild_card_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.wild_card_value
    }
    /// Consumes the builder and constructs a [`ResaleAuthorizationNameFilter`](crate::types::ResaleAuthorizationNameFilter).
    pub fn build(self) -> crate::types::ResaleAuthorizationNameFilter {
        crate::types::ResaleAuthorizationNameFilter {
            value_list: self.value_list,
            wild_card_value: self.wild_card_value,
        }
    }
}
