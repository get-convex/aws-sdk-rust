// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Allows filtering on the <code>LastModifiedDate</code> of an offer.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OfferLastModifiedDateFilter {
    /// <p>Allows filtering on the <code>LastModifiedDate</code> of an offer with date range as input.</p>
    pub date_range: ::std::option::Option<crate::types::OfferLastModifiedDateFilterDateRange>,
}
impl OfferLastModifiedDateFilter {
    /// <p>Allows filtering on the <code>LastModifiedDate</code> of an offer with date range as input.</p>
    pub fn date_range(&self) -> ::std::option::Option<&crate::types::OfferLastModifiedDateFilterDateRange> {
        self.date_range.as_ref()
    }
}
impl OfferLastModifiedDateFilter {
    /// Creates a new builder-style object to manufacture [`OfferLastModifiedDateFilter`](crate::types::OfferLastModifiedDateFilter).
    pub fn builder() -> crate::types::builders::OfferLastModifiedDateFilterBuilder {
        crate::types::builders::OfferLastModifiedDateFilterBuilder::default()
    }
}

/// A builder for [`OfferLastModifiedDateFilter`](crate::types::OfferLastModifiedDateFilter).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct OfferLastModifiedDateFilterBuilder {
    pub(crate) date_range: ::std::option::Option<crate::types::OfferLastModifiedDateFilterDateRange>,
}
impl OfferLastModifiedDateFilterBuilder {
    /// <p>Allows filtering on the <code>LastModifiedDate</code> of an offer with date range as input.</p>
    pub fn date_range(mut self, input: crate::types::OfferLastModifiedDateFilterDateRange) -> Self {
        self.date_range = ::std::option::Option::Some(input);
        self
    }
    /// <p>Allows filtering on the <code>LastModifiedDate</code> of an offer with date range as input.</p>
    pub fn set_date_range(mut self, input: ::std::option::Option<crate::types::OfferLastModifiedDateFilterDateRange>) -> Self {
        self.date_range = input;
        self
    }
    /// <p>Allows filtering on the <code>LastModifiedDate</code> of an offer with date range as input.</p>
    pub fn get_date_range(&self) -> &::std::option::Option<crate::types::OfferLastModifiedDateFilterDateRange> {
        &self.date_range
    }
    /// Consumes the builder and constructs a [`OfferLastModifiedDateFilter`](crate::types::OfferLastModifiedDateFilter).
    pub fn build(self) -> crate::types::OfferLastModifiedDateFilter {
        crate::types::OfferLastModifiedDateFilter { date_range: self.date_range }
    }
}
