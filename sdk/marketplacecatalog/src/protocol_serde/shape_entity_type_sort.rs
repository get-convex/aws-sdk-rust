// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_entity_type_sort(
    object_6: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::EntityTypeSort,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    match input {
        crate::types::EntityTypeSort::DataProductSort(inner) => {
            #[allow(unused_mut)]
            let mut object_1 = object_6.key("DataProductSort").start_object();
            crate::protocol_serde::shape_data_product_sort::ser_data_product_sort(&mut object_1, inner)?;
            object_1.finish();
        }
        crate::types::EntityTypeSort::SaaSProductSort(inner) => {
            #[allow(unused_mut)]
            let mut object_2 = object_6.key("SaaSProductSort").start_object();
            crate::protocol_serde::shape_saa_s_product_sort::ser_saa_s_product_sort(&mut object_2, inner)?;
            object_2.finish();
        }
        crate::types::EntityTypeSort::AmiProductSort(inner) => {
            #[allow(unused_mut)]
            let mut object_3 = object_6.key("AmiProductSort").start_object();
            crate::protocol_serde::shape_ami_product_sort::ser_ami_product_sort(&mut object_3, inner)?;
            object_3.finish();
        }
        crate::types::EntityTypeSort::OfferSort(inner) => {
            #[allow(unused_mut)]
            let mut object_4 = object_6.key("OfferSort").start_object();
            crate::protocol_serde::shape_offer_sort::ser_offer_sort(&mut object_4, inner)?;
            object_4.finish();
        }
        crate::types::EntityTypeSort::ContainerProductSort(inner) => {
            #[allow(unused_mut)]
            let mut object_5 = object_6.key("ContainerProductSort").start_object();
            crate::protocol_serde::shape_container_product_sort::ser_container_product_sort(&mut object_5, inner)?;
            object_5.finish();
        }
        crate::types::EntityTypeSort::ResaleAuthorizationSort(inner) => {
            #[allow(unused_mut)]
            let mut object_6 = object_6.key("ResaleAuthorizationSort").start_object();
            crate::protocol_serde::shape_resale_authorization_sort::ser_resale_authorization_sort(&mut object_6, inner)?;
            object_6.finish();
        }
        crate::types::EntityTypeSort::Unknown => {
            return Err(::aws_smithy_types::error::operation::SerializationError::unknown_variant(
                "EntityTypeSort",
            ))
        }
    }
    Ok(())
}
