// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_saa_s_product_filters(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::SaaSProductFilters,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.entity_id {
        #[allow(unused_mut)]
        let mut object_2 = object.key("EntityId").start_object();
        crate::protocol_serde::shape_saa_s_product_entity_id_filter::ser_saa_s_product_entity_id_filter(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.product_title {
        #[allow(unused_mut)]
        let mut object_4 = object.key("ProductTitle").start_object();
        crate::protocol_serde::shape_saa_s_product_title_filter::ser_saa_s_product_title_filter(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.visibility {
        #[allow(unused_mut)]
        let mut object_6 = object.key("Visibility").start_object();
        crate::protocol_serde::shape_saa_s_product_visibility_filter::ser_saa_s_product_visibility_filter(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.last_modified_date {
        #[allow(unused_mut)]
        let mut object_8 = object.key("LastModifiedDate").start_object();
        crate::protocol_serde::shape_saa_s_product_last_modified_date_filter::ser_saa_s_product_last_modified_date_filter(&mut object_8, var_7)?;
        object_8.finish();
    }
    Ok(())
}
