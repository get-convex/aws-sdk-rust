// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_offer_filters(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::OfferFilters,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.entity_id {
        #[allow(unused_mut)]
        let mut object_2 = object.key("EntityId").start_object();
        crate::protocol_serde::shape_offer_entity_id_filter::ser_offer_entity_id_filter(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.name {
        #[allow(unused_mut)]
        let mut object_4 = object.key("Name").start_object();
        crate::protocol_serde::shape_offer_name_filter::ser_offer_name_filter(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.product_id {
        #[allow(unused_mut)]
        let mut object_6 = object.key("ProductId").start_object();
        crate::protocol_serde::shape_offer_product_id_filter::ser_offer_product_id_filter(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.release_date {
        #[allow(unused_mut)]
        let mut object_8 = object.key("ReleaseDate").start_object();
        crate::protocol_serde::shape_offer_release_date_filter::ser_offer_release_date_filter(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.availability_end_date {
        #[allow(unused_mut)]
        let mut object_10 = object.key("AvailabilityEndDate").start_object();
        crate::protocol_serde::shape_offer_availability_end_date_filter::ser_offer_availability_end_date_filter(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.buyer_accounts {
        #[allow(unused_mut)]
        let mut object_12 = object.key("BuyerAccounts").start_object();
        crate::protocol_serde::shape_offer_buyer_accounts_filter::ser_offer_buyer_accounts_filter(&mut object_12, var_11)?;
        object_12.finish();
    }
    if let Some(var_13) = &input.state {
        #[allow(unused_mut)]
        let mut object_14 = object.key("State").start_object();
        crate::protocol_serde::shape_offer_state_filter::ser_offer_state_filter(&mut object_14, var_13)?;
        object_14.finish();
    }
    if let Some(var_15) = &input.targeting {
        #[allow(unused_mut)]
        let mut object_16 = object.key("Targeting").start_object();
        crate::protocol_serde::shape_offer_targeting_filter::ser_offer_targeting_filter(&mut object_16, var_15)?;
        object_16.finish();
    }
    if let Some(var_17) = &input.last_modified_date {
        #[allow(unused_mut)]
        let mut object_18 = object.key("LastModifiedDate").start_object();
        crate::protocol_serde::shape_offer_last_modified_date_filter::ser_offer_last_modified_date_filter(&mut object_18, var_17)?;
        object_18.finish();
    }
    Ok(())
}
