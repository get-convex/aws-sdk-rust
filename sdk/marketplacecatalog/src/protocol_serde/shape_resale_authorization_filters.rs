// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_resale_authorization_filters(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::ResaleAuthorizationFilters,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.entity_id {
        #[allow(unused_mut)]
        let mut object_2 = object.key("EntityId").start_object();
        crate::protocol_serde::shape_resale_authorization_entity_id_filter::ser_resale_authorization_entity_id_filter(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.name {
        #[allow(unused_mut)]
        let mut object_4 = object.key("Name").start_object();
        crate::protocol_serde::shape_resale_authorization_name_filter::ser_resale_authorization_name_filter(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.product_id {
        #[allow(unused_mut)]
        let mut object_6 = object.key("ProductId").start_object();
        crate::protocol_serde::shape_resale_authorization_product_id_filter::ser_resale_authorization_product_id_filter(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.created_date {
        #[allow(unused_mut)]
        let mut object_8 = object.key("CreatedDate").start_object();
        crate::protocol_serde::shape_resale_authorization_created_date_filter::ser_resale_authorization_created_date_filter(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.availability_end_date {
        #[allow(unused_mut)]
        let mut object_10 = object.key("AvailabilityEndDate").start_object();
        crate::protocol_serde::shape_resale_authorization_availability_end_date_filter::ser_resale_authorization_availability_end_date_filter(
            &mut object_10,
            var_9,
        )?;
        object_10.finish();
    }
    if let Some(var_11) = &input.manufacturer_account_id {
        #[allow(unused_mut)]
        let mut object_12 = object.key("ManufacturerAccountId").start_object();
        crate::protocol_serde::shape_resale_authorization_manufacturer_account_id_filter::ser_resale_authorization_manufacturer_account_id_filter(
            &mut object_12,
            var_11,
        )?;
        object_12.finish();
    }
    if let Some(var_13) = &input.product_name {
        #[allow(unused_mut)]
        let mut object_14 = object.key("ProductName").start_object();
        crate::protocol_serde::shape_resale_authorization_product_name_filter::ser_resale_authorization_product_name_filter(&mut object_14, var_13)?;
        object_14.finish();
    }
    if let Some(var_15) = &input.manufacturer_legal_name {
        #[allow(unused_mut)]
        let mut object_16 = object.key("ManufacturerLegalName").start_object();
        crate::protocol_serde::shape_resale_authorization_manufacturer_legal_name_filter::ser_resale_authorization_manufacturer_legal_name_filter(
            &mut object_16,
            var_15,
        )?;
        object_16.finish();
    }
    if let Some(var_17) = &input.reseller_account_id {
        #[allow(unused_mut)]
        let mut object_18 = object.key("ResellerAccountID").start_object();
        crate::protocol_serde::shape_resale_authorization_reseller_account_id_filter::ser_resale_authorization_reseller_account_id_filter(
            &mut object_18,
            var_17,
        )?;
        object_18.finish();
    }
    if let Some(var_19) = &input.reseller_legal_name {
        #[allow(unused_mut)]
        let mut object_20 = object.key("ResellerLegalName").start_object();
        crate::protocol_serde::shape_resale_authorization_reseller_legal_name_filter::ser_resale_authorization_reseller_legal_name_filter(
            &mut object_20,
            var_19,
        )?;
        object_20.finish();
    }
    if let Some(var_21) = &input.status {
        #[allow(unused_mut)]
        let mut object_22 = object.key("Status").start_object();
        crate::protocol_serde::shape_resale_authorization_status_filter::ser_resale_authorization_status_filter(&mut object_22, var_21)?;
        object_22.finish();
    }
    if let Some(var_23) = &input.offer_extended_status {
        #[allow(unused_mut)]
        let mut object_24 = object.key("OfferExtendedStatus").start_object();
        crate::protocol_serde::shape_resale_authorization_offer_extended_status_filter::ser_resale_authorization_offer_extended_status_filter(
            &mut object_24,
            var_23,
        )?;
        object_24.finish();
    }
    if let Some(var_25) = &input.last_modified_date {
        #[allow(unused_mut)]
        let mut object_26 = object.key("LastModifiedDate").start_object();
        crate::protocol_serde::shape_resale_authorization_last_modified_date_filter::ser_resale_authorization_last_modified_date_filter(
            &mut object_26,
            var_25,
        )?;
        object_26.finish();
    }
    Ok(())
}
