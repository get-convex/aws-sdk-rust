// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the effective recommendation preferences for Amazon ECS services.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EcsEffectiveRecommendationPreferences {
    /// <p>Describes the savings estimation mode preference applied for calculating savings opportunity for Amazon ECS services.</p>
    pub savings_estimation_mode: ::std::option::Option<crate::types::EcsSavingsEstimationMode>,
}
impl EcsEffectiveRecommendationPreferences {
    /// <p>Describes the savings estimation mode preference applied for calculating savings opportunity for Amazon ECS services.</p>
    pub fn savings_estimation_mode(&self) -> ::std::option::Option<&crate::types::EcsSavingsEstimationMode> {
        self.savings_estimation_mode.as_ref()
    }
}
impl EcsEffectiveRecommendationPreferences {
    /// Creates a new builder-style object to manufacture [`EcsEffectiveRecommendationPreferences`](crate::types::EcsEffectiveRecommendationPreferences).
    pub fn builder() -> crate::types::builders::EcsEffectiveRecommendationPreferencesBuilder {
        crate::types::builders::EcsEffectiveRecommendationPreferencesBuilder::default()
    }
}

/// A builder for [`EcsEffectiveRecommendationPreferences`](crate::types::EcsEffectiveRecommendationPreferences).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EcsEffectiveRecommendationPreferencesBuilder {
    pub(crate) savings_estimation_mode: ::std::option::Option<crate::types::EcsSavingsEstimationMode>,
}
impl EcsEffectiveRecommendationPreferencesBuilder {
    /// <p>Describes the savings estimation mode preference applied for calculating savings opportunity for Amazon ECS services.</p>
    pub fn savings_estimation_mode(mut self, input: crate::types::EcsSavingsEstimationMode) -> Self {
        self.savings_estimation_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes the savings estimation mode preference applied for calculating savings opportunity for Amazon ECS services.</p>
    pub fn set_savings_estimation_mode(mut self, input: ::std::option::Option<crate::types::EcsSavingsEstimationMode>) -> Self {
        self.savings_estimation_mode = input;
        self
    }
    /// <p>Describes the savings estimation mode preference applied for calculating savings opportunity for Amazon ECS services.</p>
    pub fn get_savings_estimation_mode(&self) -> &::std::option::Option<crate::types::EcsSavingsEstimationMode> {
        &self.savings_estimation_mode
    }
    /// Consumes the builder and constructs a [`EcsEffectiveRecommendationPreferences`](crate::types::EcsEffectiveRecommendationPreferences).
    pub fn build(self) -> crate::types::EcsEffectiveRecommendationPreferences {
        crate::types::EcsEffectiveRecommendationPreferences {
            savings_estimation_mode: self.savings_estimation_mode,
        }
    }
}
