// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct AssumeRoleForPodIdentityInput {
    /// <p>The name of the cluster for the request.</p>
    pub cluster_name: ::std::option::Option<::std::string::String>,
    /// <p>The token of the Kubernetes service account for the pod.</p>
    pub token: ::std::option::Option<::std::string::String>,
}
impl AssumeRoleForPodIdentityInput {
    /// <p>The name of the cluster for the request.</p>
    pub fn cluster_name(&self) -> ::std::option::Option<&str> {
        self.cluster_name.as_deref()
    }
    /// <p>The token of the Kubernetes service account for the pod.</p>
    pub fn token(&self) -> ::std::option::Option<&str> {
        self.token.as_deref()
    }
}
impl ::std::fmt::Debug for AssumeRoleForPodIdentityInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AssumeRoleForPodIdentityInput");
        formatter.field("cluster_name", &self.cluster_name);
        formatter.field("token", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl AssumeRoleForPodIdentityInput {
    /// Creates a new builder-style object to manufacture [`AssumeRoleForPodIdentityInput`](crate::operation::assume_role_for_pod_identity::AssumeRoleForPodIdentityInput).
    pub fn builder() -> crate::operation::assume_role_for_pod_identity::builders::AssumeRoleForPodIdentityInputBuilder {
        crate::operation::assume_role_for_pod_identity::builders::AssumeRoleForPodIdentityInputBuilder::default()
    }
}

/// A builder for [`AssumeRoleForPodIdentityInput`](crate::operation::assume_role_for_pod_identity::AssumeRoleForPodIdentityInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct AssumeRoleForPodIdentityInputBuilder {
    pub(crate) cluster_name: ::std::option::Option<::std::string::String>,
    pub(crate) token: ::std::option::Option<::std::string::String>,
}
impl AssumeRoleForPodIdentityInputBuilder {
    /// <p>The name of the cluster for the request.</p>
    /// This field is required.
    pub fn cluster_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the cluster for the request.</p>
    pub fn set_cluster_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_name = input;
        self
    }
    /// <p>The name of the cluster for the request.</p>
    pub fn get_cluster_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_name
    }
    /// <p>The token of the Kubernetes service account for the pod.</p>
    /// This field is required.
    pub fn token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token of the Kubernetes service account for the pod.</p>
    pub fn set_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.token = input;
        self
    }
    /// <p>The token of the Kubernetes service account for the pod.</p>
    pub fn get_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.token
    }
    /// Consumes the builder and constructs a [`AssumeRoleForPodIdentityInput`](crate::operation::assume_role_for_pod_identity::AssumeRoleForPodIdentityInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::assume_role_for_pod_identity::AssumeRoleForPodIdentityInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::assume_role_for_pod_identity::AssumeRoleForPodIdentityInput {
            cluster_name: self.cluster_name,
            token: self.token,
        })
    }
}
impl ::std::fmt::Debug for AssumeRoleForPodIdentityInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AssumeRoleForPodIdentityInputBuilder");
        formatter.field("cluster_name", &self.cluster_name);
        formatter.field("token", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
