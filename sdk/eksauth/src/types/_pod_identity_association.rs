// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Amazon EKS Pod Identity associations provide the ability to manage credentials for your applications, similar to the way that Amazon EC2 instance profiles provide credentials to Amazon EC2 instances.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PodIdentityAssociation {
    /// <p>The Amazon Resource Name (ARN) of the EKS Pod Identity association.</p>
    pub association_arn: ::std::string::String,
    /// <p>The ID of the association.</p>
    pub association_id: ::std::string::String,
}
impl PodIdentityAssociation {
    /// <p>The Amazon Resource Name (ARN) of the EKS Pod Identity association.</p>
    pub fn association_arn(&self) -> &str {
        use std::ops::Deref;
        self.association_arn.deref()
    }
    /// <p>The ID of the association.</p>
    pub fn association_id(&self) -> &str {
        use std::ops::Deref;
        self.association_id.deref()
    }
}
impl PodIdentityAssociation {
    /// Creates a new builder-style object to manufacture [`PodIdentityAssociation`](crate::types::PodIdentityAssociation).
    pub fn builder() -> crate::types::builders::PodIdentityAssociationBuilder {
        crate::types::builders::PodIdentityAssociationBuilder::default()
    }
}

/// A builder for [`PodIdentityAssociation`](crate::types::PodIdentityAssociation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PodIdentityAssociationBuilder {
    pub(crate) association_arn: ::std::option::Option<::std::string::String>,
    pub(crate) association_id: ::std::option::Option<::std::string::String>,
}
impl PodIdentityAssociationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the EKS Pod Identity association.</p>
    /// This field is required.
    pub fn association_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.association_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the EKS Pod Identity association.</p>
    pub fn set_association_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.association_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the EKS Pod Identity association.</p>
    pub fn get_association_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.association_arn
    }
    /// <p>The ID of the association.</p>
    /// This field is required.
    pub fn association_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.association_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the association.</p>
    pub fn set_association_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.association_id = input;
        self
    }
    /// <p>The ID of the association.</p>
    pub fn get_association_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.association_id
    }
    /// Consumes the builder and constructs a [`PodIdentityAssociation`](crate::types::PodIdentityAssociation).
    /// This method will fail if any of the following fields are not set:
    /// - [`association_arn`](crate::types::builders::PodIdentityAssociationBuilder::association_arn)
    /// - [`association_id`](crate::types::builders::PodIdentityAssociationBuilder::association_id)
    pub fn build(self) -> ::std::result::Result<crate::types::PodIdentityAssociation, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::PodIdentityAssociation {
            association_arn: self.association_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "association_arn",
                    "association_arn was not specified but it is required when building PodIdentityAssociation",
                )
            })?,
            association_id: self.association_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "association_id",
                    "association_id was not specified but it is required when building PodIdentityAssociation",
                )
            })?,
        })
    }
}
