// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListKnowledgeBases`](crate::operation::list_knowledge_bases::builders::ListKnowledgeBasesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_knowledge_bases::builders::ListKnowledgeBasesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::operation::list_knowledge_bases::builders::ListKnowledgeBasesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_knowledge_bases::builders::ListKnowledgeBasesFluentBuilder::set_max_results):<br>required: **false**<br>Max Results.<br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_knowledge_bases::builders::ListKnowledgeBasesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_knowledge_bases::builders::ListKnowledgeBasesFluentBuilder::set_next_token):<br>required: **false**<br>Opaque continuation token of previous paginated response.<br>
    /// - On success, responds with [`ListKnowledgeBasesOutput`](crate::operation::list_knowledge_bases::ListKnowledgeBasesOutput) with field(s):
    ///   - [`knowledge_base_summaries(Vec::<KnowledgeBaseSummary>)`](crate::operation::list_knowledge_bases::ListKnowledgeBasesOutput::knowledge_base_summaries): List of KnowledgeBaseSummaries
    ///   - [`next_token(Option<String>)`](crate::operation::list_knowledge_bases::ListKnowledgeBasesOutput::next_token): Opaque continuation token of previous paginated response.
    /// - On failure, responds with [`SdkError<ListKnowledgeBasesError>`](crate::operation::list_knowledge_bases::ListKnowledgeBasesError)
    pub fn list_knowledge_bases(&self) -> crate::operation::list_knowledge_bases::builders::ListKnowledgeBasesFluentBuilder {
        crate::operation::list_knowledge_bases::builders::ListKnowledgeBasesFluentBuilder::new(self.handle.clone())
    }
}
