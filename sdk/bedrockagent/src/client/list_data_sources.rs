// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListDataSources`](crate::operation::list_data_sources::builders::ListDataSourcesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_data_sources::builders::ListDataSourcesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`knowledge_base_id(impl Into<String>)`](crate::operation::list_data_sources::builders::ListDataSourcesFluentBuilder::knowledge_base_id) / [`set_knowledge_base_id(Option<String>)`](crate::operation::list_data_sources::builders::ListDataSourcesFluentBuilder::set_knowledge_base_id):<br>required: **true**<br>Identifier for a resource.<br>
    ///   - [`max_results(i32)`](crate::operation::list_data_sources::builders::ListDataSourcesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_data_sources::builders::ListDataSourcesFluentBuilder::set_max_results):<br>required: **false**<br>Max Results.<br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_data_sources::builders::ListDataSourcesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_data_sources::builders::ListDataSourcesFluentBuilder::set_next_token):<br>required: **false**<br>Opaque continuation token of previous paginated response.<br>
    /// - On success, responds with [`ListDataSourcesOutput`](crate::operation::list_data_sources::ListDataSourcesOutput) with field(s):
    ///   - [`data_source_summaries(Vec::<DataSourceSummary>)`](crate::operation::list_data_sources::ListDataSourcesOutput::data_source_summaries): list of data source summaries
    ///   - [`next_token(Option<String>)`](crate::operation::list_data_sources::ListDataSourcesOutput::next_token): Opaque continuation token of previous paginated response.
    /// - On failure, responds with [`SdkError<ListDataSourcesError>`](crate::operation::list_data_sources::ListDataSourcesError)
    pub fn list_data_sources(&self) -> crate::operation::list_data_sources::builders::ListDataSourcesFluentBuilder {
        crate::operation::list_data_sources::builders::ListDataSourcesFluentBuilder::new(self.handle.clone())
    }
}
