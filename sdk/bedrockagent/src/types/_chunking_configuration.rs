// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Configures chunking strategy
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ChunkingConfiguration {
    /// The type of chunking strategy
    pub chunking_strategy: crate::types::ChunkingStrategy,
    /// Configures fixed size chunking strategy
    pub fixed_size_chunking_configuration: ::std::option::Option<crate::types::FixedSizeChunkingConfiguration>,
}
impl ChunkingConfiguration {
    /// The type of chunking strategy
    pub fn chunking_strategy(&self) -> &crate::types::ChunkingStrategy {
        &self.chunking_strategy
    }
    /// Configures fixed size chunking strategy
    pub fn fixed_size_chunking_configuration(&self) -> ::std::option::Option<&crate::types::FixedSizeChunkingConfiguration> {
        self.fixed_size_chunking_configuration.as_ref()
    }
}
impl ChunkingConfiguration {
    /// Creates a new builder-style object to manufacture [`ChunkingConfiguration`](crate::types::ChunkingConfiguration).
    pub fn builder() -> crate::types::builders::ChunkingConfigurationBuilder {
        crate::types::builders::ChunkingConfigurationBuilder::default()
    }
}

/// A builder for [`ChunkingConfiguration`](crate::types::ChunkingConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ChunkingConfigurationBuilder {
    pub(crate) chunking_strategy: ::std::option::Option<crate::types::ChunkingStrategy>,
    pub(crate) fixed_size_chunking_configuration: ::std::option::Option<crate::types::FixedSizeChunkingConfiguration>,
}
impl ChunkingConfigurationBuilder {
    /// The type of chunking strategy
    /// This field is required.
    pub fn chunking_strategy(mut self, input: crate::types::ChunkingStrategy) -> Self {
        self.chunking_strategy = ::std::option::Option::Some(input);
        self
    }
    /// The type of chunking strategy
    pub fn set_chunking_strategy(mut self, input: ::std::option::Option<crate::types::ChunkingStrategy>) -> Self {
        self.chunking_strategy = input;
        self
    }
    /// The type of chunking strategy
    pub fn get_chunking_strategy(&self) -> &::std::option::Option<crate::types::ChunkingStrategy> {
        &self.chunking_strategy
    }
    /// Configures fixed size chunking strategy
    pub fn fixed_size_chunking_configuration(mut self, input: crate::types::FixedSizeChunkingConfiguration) -> Self {
        self.fixed_size_chunking_configuration = ::std::option::Option::Some(input);
        self
    }
    /// Configures fixed size chunking strategy
    pub fn set_fixed_size_chunking_configuration(mut self, input: ::std::option::Option<crate::types::FixedSizeChunkingConfiguration>) -> Self {
        self.fixed_size_chunking_configuration = input;
        self
    }
    /// Configures fixed size chunking strategy
    pub fn get_fixed_size_chunking_configuration(&self) -> &::std::option::Option<crate::types::FixedSizeChunkingConfiguration> {
        &self.fixed_size_chunking_configuration
    }
    /// Consumes the builder and constructs a [`ChunkingConfiguration`](crate::types::ChunkingConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`chunking_strategy`](crate::types::builders::ChunkingConfigurationBuilder::chunking_strategy)
    pub fn build(self) -> ::std::result::Result<crate::types::ChunkingConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ChunkingConfiguration {
            chunking_strategy: self.chunking_strategy.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "chunking_strategy",
                    "chunking_strategy was not specified but it is required when building ChunkingConfiguration",
                )
            })?,
            fixed_size_chunking_configuration: self.fixed_size_chunking_configuration,
        })
    }
}
