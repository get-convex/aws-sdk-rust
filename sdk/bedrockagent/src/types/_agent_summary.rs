// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Summary of Agent.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AgentSummary {
    /// Identifier for a resource.
    pub agent_id: ::std::string::String,
    /// Name for a resource.
    pub agent_name: ::std::string::String,
    /// Schema Type for Action APIs.
    pub agent_status: crate::types::AgentStatus,
    /// Description of the Resource.
    pub description: ::std::option::Option<::std::string::String>,
    /// Time Stamp.
    pub updated_at: ::aws_smithy_types::DateTime,
    /// Agent Version.
    pub latest_agent_version: ::std::option::Option<::std::string::String>,
}
impl AgentSummary {
    /// Identifier for a resource.
    pub fn agent_id(&self) -> &str {
        use std::ops::Deref;
        self.agent_id.deref()
    }
    /// Name for a resource.
    pub fn agent_name(&self) -> &str {
        use std::ops::Deref;
        self.agent_name.deref()
    }
    /// Schema Type for Action APIs.
    pub fn agent_status(&self) -> &crate::types::AgentStatus {
        &self.agent_status
    }
    /// Description of the Resource.
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// Time Stamp.
    pub fn updated_at(&self) -> &::aws_smithy_types::DateTime {
        &self.updated_at
    }
    /// Agent Version.
    pub fn latest_agent_version(&self) -> ::std::option::Option<&str> {
        self.latest_agent_version.as_deref()
    }
}
impl AgentSummary {
    /// Creates a new builder-style object to manufacture [`AgentSummary`](crate::types::AgentSummary).
    pub fn builder() -> crate::types::builders::AgentSummaryBuilder {
        crate::types::builders::AgentSummaryBuilder::default()
    }
}

/// A builder for [`AgentSummary`](crate::types::AgentSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AgentSummaryBuilder {
    pub(crate) agent_id: ::std::option::Option<::std::string::String>,
    pub(crate) agent_name: ::std::option::Option<::std::string::String>,
    pub(crate) agent_status: ::std::option::Option<crate::types::AgentStatus>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) latest_agent_version: ::std::option::Option<::std::string::String>,
}
impl AgentSummaryBuilder {
    /// Identifier for a resource.
    /// This field is required.
    pub fn agent_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Identifier for a resource.
    pub fn set_agent_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_id = input;
        self
    }
    /// Identifier for a resource.
    pub fn get_agent_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_id
    }
    /// Name for a resource.
    /// This field is required.
    pub fn agent_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_name = ::std::option::Option::Some(input.into());
        self
    }
    /// Name for a resource.
    pub fn set_agent_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_name = input;
        self
    }
    /// Name for a resource.
    pub fn get_agent_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_name
    }
    /// Schema Type for Action APIs.
    /// This field is required.
    pub fn agent_status(mut self, input: crate::types::AgentStatus) -> Self {
        self.agent_status = ::std::option::Option::Some(input);
        self
    }
    /// Schema Type for Action APIs.
    pub fn set_agent_status(mut self, input: ::std::option::Option<crate::types::AgentStatus>) -> Self {
        self.agent_status = input;
        self
    }
    /// Schema Type for Action APIs.
    pub fn get_agent_status(&self) -> &::std::option::Option<crate::types::AgentStatus> {
        &self.agent_status
    }
    /// Description of the Resource.
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// Description of the Resource.
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Description of the Resource.
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Time Stamp.
    /// This field is required.
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// Time Stamp.
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// Time Stamp.
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Agent Version.
    pub fn latest_agent_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.latest_agent_version = ::std::option::Option::Some(input.into());
        self
    }
    /// Agent Version.
    pub fn set_latest_agent_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.latest_agent_version = input;
        self
    }
    /// Agent Version.
    pub fn get_latest_agent_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.latest_agent_version
    }
    /// Consumes the builder and constructs a [`AgentSummary`](crate::types::AgentSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`agent_id`](crate::types::builders::AgentSummaryBuilder::agent_id)
    /// - [`agent_name`](crate::types::builders::AgentSummaryBuilder::agent_name)
    /// - [`agent_status`](crate::types::builders::AgentSummaryBuilder::agent_status)
    /// - [`updated_at`](crate::types::builders::AgentSummaryBuilder::updated_at)
    pub fn build(self) -> ::std::result::Result<crate::types::AgentSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AgentSummary {
            agent_id: self.agent_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_id",
                    "agent_id was not specified but it is required when building AgentSummary",
                )
            })?,
            agent_name: self.agent_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_name",
                    "agent_name was not specified but it is required when building AgentSummary",
                )
            })?,
            agent_status: self.agent_status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_status",
                    "agent_status was not specified but it is required when building AgentSummary",
                )
            })?,
            description: self.description,
            updated_at: self.updated_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "updated_at",
                    "updated_at was not specified but it is required when building AgentSummary",
                )
            })?,
            latest_agent_version: self.latest_agent_version,
        })
    }
}
