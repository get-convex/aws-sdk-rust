// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Contains the configurations to use Redis Enterprise Cloud to store knowledge base data.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RedisEnterpriseCloudConfiguration {
    /// Redis enterprise cloud endpoint
    pub endpoint: ::std::string::String,
    /// Name of a redis enterprise cloud index
    pub vector_index_name: ::std::string::String,
    /// Arn of a SecretsManager Secret.
    pub credentials_secret_arn: ::std::string::String,
    /// A mapping of Bedrock Knowledge Base fields to Redis Cloud field names
    pub field_mapping: ::std::option::Option<crate::types::RedisEnterpriseCloudFieldMapping>,
}
impl RedisEnterpriseCloudConfiguration {
    /// Redis enterprise cloud endpoint
    pub fn endpoint(&self) -> &str {
        use std::ops::Deref;
        self.endpoint.deref()
    }
    /// Name of a redis enterprise cloud index
    pub fn vector_index_name(&self) -> &str {
        use std::ops::Deref;
        self.vector_index_name.deref()
    }
    /// Arn of a SecretsManager Secret.
    pub fn credentials_secret_arn(&self) -> &str {
        use std::ops::Deref;
        self.credentials_secret_arn.deref()
    }
    /// A mapping of Bedrock Knowledge Base fields to Redis Cloud field names
    pub fn field_mapping(&self) -> ::std::option::Option<&crate::types::RedisEnterpriseCloudFieldMapping> {
        self.field_mapping.as_ref()
    }
}
impl RedisEnterpriseCloudConfiguration {
    /// Creates a new builder-style object to manufacture [`RedisEnterpriseCloudConfiguration`](crate::types::RedisEnterpriseCloudConfiguration).
    pub fn builder() -> crate::types::builders::RedisEnterpriseCloudConfigurationBuilder {
        crate::types::builders::RedisEnterpriseCloudConfigurationBuilder::default()
    }
}

/// A builder for [`RedisEnterpriseCloudConfiguration`](crate::types::RedisEnterpriseCloudConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RedisEnterpriseCloudConfigurationBuilder {
    pub(crate) endpoint: ::std::option::Option<::std::string::String>,
    pub(crate) vector_index_name: ::std::option::Option<::std::string::String>,
    pub(crate) credentials_secret_arn: ::std::option::Option<::std::string::String>,
    pub(crate) field_mapping: ::std::option::Option<crate::types::RedisEnterpriseCloudFieldMapping>,
}
impl RedisEnterpriseCloudConfigurationBuilder {
    /// Redis enterprise cloud endpoint
    /// This field is required.
    pub fn endpoint(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.endpoint = ::std::option::Option::Some(input.into());
        self
    }
    /// Redis enterprise cloud endpoint
    pub fn set_endpoint(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.endpoint = input;
        self
    }
    /// Redis enterprise cloud endpoint
    pub fn get_endpoint(&self) -> &::std::option::Option<::std::string::String> {
        &self.endpoint
    }
    /// Name of a redis enterprise cloud index
    /// This field is required.
    pub fn vector_index_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vector_index_name = ::std::option::Option::Some(input.into());
        self
    }
    /// Name of a redis enterprise cloud index
    pub fn set_vector_index_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vector_index_name = input;
        self
    }
    /// Name of a redis enterprise cloud index
    pub fn get_vector_index_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.vector_index_name
    }
    /// Arn of a SecretsManager Secret.
    /// This field is required.
    pub fn credentials_secret_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.credentials_secret_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// Arn of a SecretsManager Secret.
    pub fn set_credentials_secret_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.credentials_secret_arn = input;
        self
    }
    /// Arn of a SecretsManager Secret.
    pub fn get_credentials_secret_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.credentials_secret_arn
    }
    /// A mapping of Bedrock Knowledge Base fields to Redis Cloud field names
    /// This field is required.
    pub fn field_mapping(mut self, input: crate::types::RedisEnterpriseCloudFieldMapping) -> Self {
        self.field_mapping = ::std::option::Option::Some(input);
        self
    }
    /// A mapping of Bedrock Knowledge Base fields to Redis Cloud field names
    pub fn set_field_mapping(mut self, input: ::std::option::Option<crate::types::RedisEnterpriseCloudFieldMapping>) -> Self {
        self.field_mapping = input;
        self
    }
    /// A mapping of Bedrock Knowledge Base fields to Redis Cloud field names
    pub fn get_field_mapping(&self) -> &::std::option::Option<crate::types::RedisEnterpriseCloudFieldMapping> {
        &self.field_mapping
    }
    /// Consumes the builder and constructs a [`RedisEnterpriseCloudConfiguration`](crate::types::RedisEnterpriseCloudConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`endpoint`](crate::types::builders::RedisEnterpriseCloudConfigurationBuilder::endpoint)
    /// - [`vector_index_name`](crate::types::builders::RedisEnterpriseCloudConfigurationBuilder::vector_index_name)
    /// - [`credentials_secret_arn`](crate::types::builders::RedisEnterpriseCloudConfigurationBuilder::credentials_secret_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::RedisEnterpriseCloudConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RedisEnterpriseCloudConfiguration {
            endpoint: self.endpoint.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "endpoint",
                    "endpoint was not specified but it is required when building RedisEnterpriseCloudConfiguration",
                )
            })?,
            vector_index_name: self.vector_index_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "vector_index_name",
                    "vector_index_name was not specified but it is required when building RedisEnterpriseCloudConfiguration",
                )
            })?,
            credentials_secret_arn: self.credentials_secret_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "credentials_secret_arn",
                    "credentials_secret_arn was not specified but it is required when building RedisEnterpriseCloudConfiguration",
                )
            })?,
            field_mapping: self.field_mapping,
        })
    }
}
