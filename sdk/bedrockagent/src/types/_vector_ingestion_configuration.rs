// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Configures ingestion for a vector knowledge base
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VectorIngestionConfiguration {
    /// Configures chunking strategy
    pub chunking_configuration: ::std::option::Option<crate::types::ChunkingConfiguration>,
}
impl VectorIngestionConfiguration {
    /// Configures chunking strategy
    pub fn chunking_configuration(&self) -> ::std::option::Option<&crate::types::ChunkingConfiguration> {
        self.chunking_configuration.as_ref()
    }
}
impl VectorIngestionConfiguration {
    /// Creates a new builder-style object to manufacture [`VectorIngestionConfiguration`](crate::types::VectorIngestionConfiguration).
    pub fn builder() -> crate::types::builders::VectorIngestionConfigurationBuilder {
        crate::types::builders::VectorIngestionConfigurationBuilder::default()
    }
}

/// A builder for [`VectorIngestionConfiguration`](crate::types::VectorIngestionConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VectorIngestionConfigurationBuilder {
    pub(crate) chunking_configuration: ::std::option::Option<crate::types::ChunkingConfiguration>,
}
impl VectorIngestionConfigurationBuilder {
    /// Configures chunking strategy
    pub fn chunking_configuration(mut self, input: crate::types::ChunkingConfiguration) -> Self {
        self.chunking_configuration = ::std::option::Option::Some(input);
        self
    }
    /// Configures chunking strategy
    pub fn set_chunking_configuration(mut self, input: ::std::option::Option<crate::types::ChunkingConfiguration>) -> Self {
        self.chunking_configuration = input;
        self
    }
    /// Configures chunking strategy
    pub fn get_chunking_configuration(&self) -> &::std::option::Option<crate::types::ChunkingConfiguration> {
        &self.chunking_configuration
    }
    /// Consumes the builder and constructs a [`VectorIngestionConfiguration`](crate::types::VectorIngestionConfiguration).
    pub fn build(self) -> crate::types::VectorIngestionConfiguration {
        crate::types::VectorIngestionConfiguration {
            chunking_configuration: self.chunking_configuration,
        }
    }
}
