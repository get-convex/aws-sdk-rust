// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The identifier for the S3 resource.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct S3Identifier {
    /// A bucket in S3.
    pub s3_bucket_name: ::std::option::Option<::std::string::String>,
    /// A object key in S3.
    pub s3_object_key: ::std::option::Option<::std::string::String>,
}
impl S3Identifier {
    /// A bucket in S3.
    pub fn s3_bucket_name(&self) -> ::std::option::Option<&str> {
        self.s3_bucket_name.as_deref()
    }
    /// A object key in S3.
    pub fn s3_object_key(&self) -> ::std::option::Option<&str> {
        self.s3_object_key.as_deref()
    }
}
impl S3Identifier {
    /// Creates a new builder-style object to manufacture [`S3Identifier`](crate::types::S3Identifier).
    pub fn builder() -> crate::types::builders::S3IdentifierBuilder {
        crate::types::builders::S3IdentifierBuilder::default()
    }
}

/// A builder for [`S3Identifier`](crate::types::S3Identifier).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct S3IdentifierBuilder {
    pub(crate) s3_bucket_name: ::std::option::Option<::std::string::String>,
    pub(crate) s3_object_key: ::std::option::Option<::std::string::String>,
}
impl S3IdentifierBuilder {
    /// A bucket in S3.
    pub fn s3_bucket_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s3_bucket_name = ::std::option::Option::Some(input.into());
        self
    }
    /// A bucket in S3.
    pub fn set_s3_bucket_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s3_bucket_name = input;
        self
    }
    /// A bucket in S3.
    pub fn get_s3_bucket_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.s3_bucket_name
    }
    /// A object key in S3.
    pub fn s3_object_key(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s3_object_key = ::std::option::Option::Some(input.into());
        self
    }
    /// A object key in S3.
    pub fn set_s3_object_key(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s3_object_key = input;
        self
    }
    /// A object key in S3.
    pub fn get_s3_object_key(&self) -> &::std::option::Option<::std::string::String> {
        &self.s3_object_key
    }
    /// Consumes the builder and constructs a [`S3Identifier`](crate::types::S3Identifier).
    pub fn build(self) -> crate::types::S3Identifier {
        crate::types::S3Identifier {
            s3_bucket_name: self.s3_bucket_name,
            s3_object_key: self.s3_object_key,
        }
    }
}
