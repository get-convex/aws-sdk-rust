// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// ActionGroup Summary
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ActionGroupSummary {
    /// Identifier for a resource.
    pub action_group_id: ::std::string::String,
    /// Name for a resource.
    pub action_group_name: ::std::string::String,
    /// State of the action group
    pub action_group_state: crate::types::ActionGroupState,
    /// Description of the Resource.
    pub description: ::std::option::Option<::std::string::String>,
    /// Time Stamp.
    pub updated_at: ::aws_smithy_types::DateTime,
}
impl ActionGroupSummary {
    /// Identifier for a resource.
    pub fn action_group_id(&self) -> &str {
        use std::ops::Deref;
        self.action_group_id.deref()
    }
    /// Name for a resource.
    pub fn action_group_name(&self) -> &str {
        use std::ops::Deref;
        self.action_group_name.deref()
    }
    /// State of the action group
    pub fn action_group_state(&self) -> &crate::types::ActionGroupState {
        &self.action_group_state
    }
    /// Description of the Resource.
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// Time Stamp.
    pub fn updated_at(&self) -> &::aws_smithy_types::DateTime {
        &self.updated_at
    }
}
impl ActionGroupSummary {
    /// Creates a new builder-style object to manufacture [`ActionGroupSummary`](crate::types::ActionGroupSummary).
    pub fn builder() -> crate::types::builders::ActionGroupSummaryBuilder {
        crate::types::builders::ActionGroupSummaryBuilder::default()
    }
}

/// A builder for [`ActionGroupSummary`](crate::types::ActionGroupSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ActionGroupSummaryBuilder {
    pub(crate) action_group_id: ::std::option::Option<::std::string::String>,
    pub(crate) action_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) action_group_state: ::std::option::Option<crate::types::ActionGroupState>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ActionGroupSummaryBuilder {
    /// Identifier for a resource.
    /// This field is required.
    pub fn action_group_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.action_group_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Identifier for a resource.
    pub fn set_action_group_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.action_group_id = input;
        self
    }
    /// Identifier for a resource.
    pub fn get_action_group_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.action_group_id
    }
    /// Name for a resource.
    /// This field is required.
    pub fn action_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.action_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// Name for a resource.
    pub fn set_action_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.action_group_name = input;
        self
    }
    /// Name for a resource.
    pub fn get_action_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.action_group_name
    }
    /// State of the action group
    /// This field is required.
    pub fn action_group_state(mut self, input: crate::types::ActionGroupState) -> Self {
        self.action_group_state = ::std::option::Option::Some(input);
        self
    }
    /// State of the action group
    pub fn set_action_group_state(mut self, input: ::std::option::Option<crate::types::ActionGroupState>) -> Self {
        self.action_group_state = input;
        self
    }
    /// State of the action group
    pub fn get_action_group_state(&self) -> &::std::option::Option<crate::types::ActionGroupState> {
        &self.action_group_state
    }
    /// Description of the Resource.
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// Description of the Resource.
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Description of the Resource.
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Time Stamp.
    /// This field is required.
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// Time Stamp.
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// Time Stamp.
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Consumes the builder and constructs a [`ActionGroupSummary`](crate::types::ActionGroupSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`action_group_id`](crate::types::builders::ActionGroupSummaryBuilder::action_group_id)
    /// - [`action_group_name`](crate::types::builders::ActionGroupSummaryBuilder::action_group_name)
    /// - [`action_group_state`](crate::types::builders::ActionGroupSummaryBuilder::action_group_state)
    /// - [`updated_at`](crate::types::builders::ActionGroupSummaryBuilder::updated_at)
    pub fn build(self) -> ::std::result::Result<crate::types::ActionGroupSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ActionGroupSummary {
            action_group_id: self.action_group_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "action_group_id",
                    "action_group_id was not specified but it is required when building ActionGroupSummary",
                )
            })?,
            action_group_name: self.action_group_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "action_group_name",
                    "action_group_name was not specified but it is required when building ActionGroupSummary",
                )
            })?,
            action_group_state: self.action_group_state.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "action_group_state",
                    "action_group_state was not specified but it is required when building ActionGroupSummary",
                )
            })?,
            description: self.description,
            updated_at: self.updated_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "updated_at",
                    "updated_at was not specified but it is required when building ActionGroupSummary",
                )
            })?,
        })
    }
}
