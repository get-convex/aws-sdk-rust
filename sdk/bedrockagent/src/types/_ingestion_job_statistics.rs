// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The document level statistics of an ingestion job
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IngestionJobStatistics {
    /// Number of scanned documents
    pub number_of_documents_scanned: i64,
    /// Number of indexed documents
    pub number_of_new_documents_indexed: i64,
    /// Number of modified documents indexed
    pub number_of_modified_documents_indexed: i64,
    /// Number of deleted documents
    pub number_of_documents_deleted: i64,
    /// Number of failed documents
    pub number_of_documents_failed: i64,
}
impl IngestionJobStatistics {
    /// Number of scanned documents
    pub fn number_of_documents_scanned(&self) -> i64 {
        self.number_of_documents_scanned
    }
    /// Number of indexed documents
    pub fn number_of_new_documents_indexed(&self) -> i64 {
        self.number_of_new_documents_indexed
    }
    /// Number of modified documents indexed
    pub fn number_of_modified_documents_indexed(&self) -> i64 {
        self.number_of_modified_documents_indexed
    }
    /// Number of deleted documents
    pub fn number_of_documents_deleted(&self) -> i64 {
        self.number_of_documents_deleted
    }
    /// Number of failed documents
    pub fn number_of_documents_failed(&self) -> i64 {
        self.number_of_documents_failed
    }
}
impl IngestionJobStatistics {
    /// Creates a new builder-style object to manufacture [`IngestionJobStatistics`](crate::types::IngestionJobStatistics).
    pub fn builder() -> crate::types::builders::IngestionJobStatisticsBuilder {
        crate::types::builders::IngestionJobStatisticsBuilder::default()
    }
}

/// A builder for [`IngestionJobStatistics`](crate::types::IngestionJobStatistics).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IngestionJobStatisticsBuilder {
    pub(crate) number_of_documents_scanned: ::std::option::Option<i64>,
    pub(crate) number_of_new_documents_indexed: ::std::option::Option<i64>,
    pub(crate) number_of_modified_documents_indexed: ::std::option::Option<i64>,
    pub(crate) number_of_documents_deleted: ::std::option::Option<i64>,
    pub(crate) number_of_documents_failed: ::std::option::Option<i64>,
}
impl IngestionJobStatisticsBuilder {
    /// Number of scanned documents
    pub fn number_of_documents_scanned(mut self, input: i64) -> Self {
        self.number_of_documents_scanned = ::std::option::Option::Some(input);
        self
    }
    /// Number of scanned documents
    pub fn set_number_of_documents_scanned(mut self, input: ::std::option::Option<i64>) -> Self {
        self.number_of_documents_scanned = input;
        self
    }
    /// Number of scanned documents
    pub fn get_number_of_documents_scanned(&self) -> &::std::option::Option<i64> {
        &self.number_of_documents_scanned
    }
    /// Number of indexed documents
    pub fn number_of_new_documents_indexed(mut self, input: i64) -> Self {
        self.number_of_new_documents_indexed = ::std::option::Option::Some(input);
        self
    }
    /// Number of indexed documents
    pub fn set_number_of_new_documents_indexed(mut self, input: ::std::option::Option<i64>) -> Self {
        self.number_of_new_documents_indexed = input;
        self
    }
    /// Number of indexed documents
    pub fn get_number_of_new_documents_indexed(&self) -> &::std::option::Option<i64> {
        &self.number_of_new_documents_indexed
    }
    /// Number of modified documents indexed
    pub fn number_of_modified_documents_indexed(mut self, input: i64) -> Self {
        self.number_of_modified_documents_indexed = ::std::option::Option::Some(input);
        self
    }
    /// Number of modified documents indexed
    pub fn set_number_of_modified_documents_indexed(mut self, input: ::std::option::Option<i64>) -> Self {
        self.number_of_modified_documents_indexed = input;
        self
    }
    /// Number of modified documents indexed
    pub fn get_number_of_modified_documents_indexed(&self) -> &::std::option::Option<i64> {
        &self.number_of_modified_documents_indexed
    }
    /// Number of deleted documents
    pub fn number_of_documents_deleted(mut self, input: i64) -> Self {
        self.number_of_documents_deleted = ::std::option::Option::Some(input);
        self
    }
    /// Number of deleted documents
    pub fn set_number_of_documents_deleted(mut self, input: ::std::option::Option<i64>) -> Self {
        self.number_of_documents_deleted = input;
        self
    }
    /// Number of deleted documents
    pub fn get_number_of_documents_deleted(&self) -> &::std::option::Option<i64> {
        &self.number_of_documents_deleted
    }
    /// Number of failed documents
    pub fn number_of_documents_failed(mut self, input: i64) -> Self {
        self.number_of_documents_failed = ::std::option::Option::Some(input);
        self
    }
    /// Number of failed documents
    pub fn set_number_of_documents_failed(mut self, input: ::std::option::Option<i64>) -> Self {
        self.number_of_documents_failed = input;
        self
    }
    /// Number of failed documents
    pub fn get_number_of_documents_failed(&self) -> &::std::option::Option<i64> {
        &self.number_of_documents_failed
    }
    /// Consumes the builder and constructs a [`IngestionJobStatistics`](crate::types::IngestionJobStatistics).
    pub fn build(self) -> crate::types::IngestionJobStatistics {
        crate::types::IngestionJobStatistics {
            number_of_documents_scanned: self.number_of_documents_scanned.unwrap_or_default(),
            number_of_new_documents_indexed: self.number_of_new_documents_indexed.unwrap_or_default(),
            number_of_modified_documents_indexed: self.number_of_modified_documents_indexed.unwrap_or_default(),
            number_of_documents_deleted: self.number_of_documents_deleted.unwrap_or_default(),
            number_of_documents_failed: self.number_of_documents_failed.unwrap_or_default(),
        }
    }
}
