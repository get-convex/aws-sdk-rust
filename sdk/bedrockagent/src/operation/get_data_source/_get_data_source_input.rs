// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetDataSourceInput {
    /// Identifier for a resource.
    pub knowledge_base_id: ::std::option::Option<::std::string::String>,
    /// Identifier for a resource.
    pub data_source_id: ::std::option::Option<::std::string::String>,
}
impl GetDataSourceInput {
    /// Identifier for a resource.
    pub fn knowledge_base_id(&self) -> ::std::option::Option<&str> {
        self.knowledge_base_id.as_deref()
    }
    /// Identifier for a resource.
    pub fn data_source_id(&self) -> ::std::option::Option<&str> {
        self.data_source_id.as_deref()
    }
}
impl GetDataSourceInput {
    /// Creates a new builder-style object to manufacture [`GetDataSourceInput`](crate::operation::get_data_source::GetDataSourceInput).
    pub fn builder() -> crate::operation::get_data_source::builders::GetDataSourceInputBuilder {
        crate::operation::get_data_source::builders::GetDataSourceInputBuilder::default()
    }
}

/// A builder for [`GetDataSourceInput`](crate::operation::get_data_source::GetDataSourceInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetDataSourceInputBuilder {
    pub(crate) knowledge_base_id: ::std::option::Option<::std::string::String>,
    pub(crate) data_source_id: ::std::option::Option<::std::string::String>,
}
impl GetDataSourceInputBuilder {
    /// Identifier for a resource.
    /// This field is required.
    pub fn knowledge_base_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.knowledge_base_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Identifier for a resource.
    pub fn set_knowledge_base_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.knowledge_base_id = input;
        self
    }
    /// Identifier for a resource.
    pub fn get_knowledge_base_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.knowledge_base_id
    }
    /// Identifier for a resource.
    /// This field is required.
    pub fn data_source_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.data_source_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Identifier for a resource.
    pub fn set_data_source_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.data_source_id = input;
        self
    }
    /// Identifier for a resource.
    pub fn get_data_source_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.data_source_id
    }
    /// Consumes the builder and constructs a [`GetDataSourceInput`](crate::operation::get_data_source::GetDataSourceInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_data_source::GetDataSourceInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_data_source::GetDataSourceInput {
            knowledge_base_id: self.knowledge_base_id,
            data_source_id: self.data_source_id,
        })
    }
}
