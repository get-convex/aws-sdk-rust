// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Update Agent Alias Request
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateAgentAliasInput {
    /// Id generated at the server side when an Agent is created
    pub agent_id: ::std::option::Option<::std::string::String>,
    /// Id generated at the server side when an Agent Alias is created
    pub agent_alias_id: ::std::option::Option<::std::string::String>,
    /// Name for a resource.
    pub agent_alias_name: ::std::option::Option<::std::string::String>,
    /// Description of the Resource.
    pub description: ::std::option::Option<::std::string::String>,
    /// Routing configuration for an Agent alias.
    pub routing_configuration: ::std::option::Option<::std::vec::Vec<crate::types::AgentAliasRoutingConfigurationListItem>>,
}
impl UpdateAgentAliasInput {
    /// Id generated at the server side when an Agent is created
    pub fn agent_id(&self) -> ::std::option::Option<&str> {
        self.agent_id.as_deref()
    }
    /// Id generated at the server side when an Agent Alias is created
    pub fn agent_alias_id(&self) -> ::std::option::Option<&str> {
        self.agent_alias_id.as_deref()
    }
    /// Name for a resource.
    pub fn agent_alias_name(&self) -> ::std::option::Option<&str> {
        self.agent_alias_name.as_deref()
    }
    /// Description of the Resource.
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// Routing configuration for an Agent alias.
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.routing_configuration.is_none()`.
    pub fn routing_configuration(&self) -> &[crate::types::AgentAliasRoutingConfigurationListItem] {
        self.routing_configuration.as_deref().unwrap_or_default()
    }
}
impl UpdateAgentAliasInput {
    /// Creates a new builder-style object to manufacture [`UpdateAgentAliasInput`](crate::operation::update_agent_alias::UpdateAgentAliasInput).
    pub fn builder() -> crate::operation::update_agent_alias::builders::UpdateAgentAliasInputBuilder {
        crate::operation::update_agent_alias::builders::UpdateAgentAliasInputBuilder::default()
    }
}

/// A builder for [`UpdateAgentAliasInput`](crate::operation::update_agent_alias::UpdateAgentAliasInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateAgentAliasInputBuilder {
    pub(crate) agent_id: ::std::option::Option<::std::string::String>,
    pub(crate) agent_alias_id: ::std::option::Option<::std::string::String>,
    pub(crate) agent_alias_name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) routing_configuration: ::std::option::Option<::std::vec::Vec<crate::types::AgentAliasRoutingConfigurationListItem>>,
}
impl UpdateAgentAliasInputBuilder {
    /// Id generated at the server side when an Agent is created
    /// This field is required.
    pub fn agent_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Id generated at the server side when an Agent is created
    pub fn set_agent_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_id = input;
        self
    }
    /// Id generated at the server side when an Agent is created
    pub fn get_agent_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_id
    }
    /// Id generated at the server side when an Agent Alias is created
    /// This field is required.
    pub fn agent_alias_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_alias_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Id generated at the server side when an Agent Alias is created
    pub fn set_agent_alias_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_alias_id = input;
        self
    }
    /// Id generated at the server side when an Agent Alias is created
    pub fn get_agent_alias_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_alias_id
    }
    /// Name for a resource.
    /// This field is required.
    pub fn agent_alias_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_alias_name = ::std::option::Option::Some(input.into());
        self
    }
    /// Name for a resource.
    pub fn set_agent_alias_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_alias_name = input;
        self
    }
    /// Name for a resource.
    pub fn get_agent_alias_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_alias_name
    }
    /// Description of the Resource.
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// Description of the Resource.
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Description of the Resource.
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Appends an item to `routing_configuration`.
    ///
    /// To override the contents of this collection use [`set_routing_configuration`](Self::set_routing_configuration).
    ///
    /// Routing configuration for an Agent alias.
    pub fn routing_configuration(mut self, input: crate::types::AgentAliasRoutingConfigurationListItem) -> Self {
        let mut v = self.routing_configuration.unwrap_or_default();
        v.push(input);
        self.routing_configuration = ::std::option::Option::Some(v);
        self
    }
    /// Routing configuration for an Agent alias.
    pub fn set_routing_configuration(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::AgentAliasRoutingConfigurationListItem>>,
    ) -> Self {
        self.routing_configuration = input;
        self
    }
    /// Routing configuration for an Agent alias.
    pub fn get_routing_configuration(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AgentAliasRoutingConfigurationListItem>> {
        &self.routing_configuration
    }
    /// Consumes the builder and constructs a [`UpdateAgentAliasInput`](crate::operation::update_agent_alias::UpdateAgentAliasInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_agent_alias::UpdateAgentAliasInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::update_agent_alias::UpdateAgentAliasInput {
            agent_id: self.agent_id,
            agent_alias_id: self.agent_alias_id,
            agent_alias_name: self.agent_alias_name,
            description: self.description,
            routing_configuration: self.routing_configuration,
        })
    }
}
