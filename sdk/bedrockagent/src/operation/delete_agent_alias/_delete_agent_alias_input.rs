// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Delete Agent Alias Request
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteAgentAliasInput {
    /// Id generated at the server side when an Agent is created
    pub agent_id: ::std::option::Option<::std::string::String>,
    /// Id generated at the server side when an Agent Alias is created
    pub agent_alias_id: ::std::option::Option<::std::string::String>,
}
impl DeleteAgentAliasInput {
    /// Id generated at the server side when an Agent is created
    pub fn agent_id(&self) -> ::std::option::Option<&str> {
        self.agent_id.as_deref()
    }
    /// Id generated at the server side when an Agent Alias is created
    pub fn agent_alias_id(&self) -> ::std::option::Option<&str> {
        self.agent_alias_id.as_deref()
    }
}
impl DeleteAgentAliasInput {
    /// Creates a new builder-style object to manufacture [`DeleteAgentAliasInput`](crate::operation::delete_agent_alias::DeleteAgentAliasInput).
    pub fn builder() -> crate::operation::delete_agent_alias::builders::DeleteAgentAliasInputBuilder {
        crate::operation::delete_agent_alias::builders::DeleteAgentAliasInputBuilder::default()
    }
}

/// A builder for [`DeleteAgentAliasInput`](crate::operation::delete_agent_alias::DeleteAgentAliasInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteAgentAliasInputBuilder {
    pub(crate) agent_id: ::std::option::Option<::std::string::String>,
    pub(crate) agent_alias_id: ::std::option::Option<::std::string::String>,
}
impl DeleteAgentAliasInputBuilder {
    /// Id generated at the server side when an Agent is created
    /// This field is required.
    pub fn agent_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Id generated at the server side when an Agent is created
    pub fn set_agent_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_id = input;
        self
    }
    /// Id generated at the server side when an Agent is created
    pub fn get_agent_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_id
    }
    /// Id generated at the server side when an Agent Alias is created
    /// This field is required.
    pub fn agent_alias_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_alias_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Id generated at the server side when an Agent Alias is created
    pub fn set_agent_alias_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_alias_id = input;
        self
    }
    /// Id generated at the server side when an Agent Alias is created
    pub fn get_agent_alias_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_alias_id
    }
    /// Consumes the builder and constructs a [`DeleteAgentAliasInput`](crate::operation::delete_agent_alias::DeleteAgentAliasInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_agent_alias::DeleteAgentAliasInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_agent_alias::DeleteAgentAliasInput {
            agent_id: self.agent_id,
            agent_alias_id: self.agent_alias_id,
        })
    }
}
