// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_agent_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_agent::CreateAgentInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.agent_name {
        object.key("agentName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.agent_resource_role_arn {
        object.key("agentResourceRoleArn").string(var_2.as_str());
    }
    if let Some(var_3) = &input.client_token {
        object.key("clientToken").string(var_3.as_str());
    }
    if let Some(var_4) = &input.customer_encryption_key_arn {
        object.key("customerEncryptionKeyArn").string(var_4.as_str());
    }
    if let Some(var_5) = &input.description {
        object.key("description").string(var_5.as_str());
    }
    if let Some(var_6) = &input.foundation_model {
        object.key("foundationModel").string(var_6.as_str());
    }
    if let Some(var_7) = &input.idle_session_ttl_in_seconds {
        object.key("idleSessionTTLInSeconds").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_7).into()),
        );
    }
    if let Some(var_8) = &input.instruction {
        object.key("instruction").string(var_8.as_str());
    }
    if let Some(var_9) = &input.prompt_override_configuration {
        #[allow(unused_mut)]
        let mut object_10 = object.key("promptOverrideConfiguration").start_object();
        crate::protocol_serde::shape_prompt_override_configuration::ser_prompt_override_configuration(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.tags {
        #[allow(unused_mut)]
        let mut object_12 = object.key("tags").start_object();
        for (key_13, value_14) in var_11 {
            {
                object_12.key(key_13.as_str()).string(value_14.as_str());
            }
        }
        object_12.finish();
    }
    Ok(())
}
