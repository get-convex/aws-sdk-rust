// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListOrganizationRecommendationAccountsInput {
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of results to return per page.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>The Recommendation identifier</p>
    pub organization_recommendation_identifier: ::std::option::Option<::std::string::String>,
    /// <p>An account affected by this organization recommendation</p>
    pub affected_account_id: ::std::option::Option<::std::string::String>,
}
impl ListOrganizationRecommendationAccountsInput {
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>The Recommendation identifier</p>
    pub fn organization_recommendation_identifier(&self) -> ::std::option::Option<&str> {
        self.organization_recommendation_identifier.as_deref()
    }
    /// <p>An account affected by this organization recommendation</p>
    pub fn affected_account_id(&self) -> ::std::option::Option<&str> {
        self.affected_account_id.as_deref()
    }
}
impl ListOrganizationRecommendationAccountsInput {
    /// Creates a new builder-style object to manufacture [`ListOrganizationRecommendationAccountsInput`](crate::operation::list_organization_recommendation_accounts::ListOrganizationRecommendationAccountsInput).
    pub fn builder() -> crate::operation::list_organization_recommendation_accounts::builders::ListOrganizationRecommendationAccountsInputBuilder {
        crate::operation::list_organization_recommendation_accounts::builders::ListOrganizationRecommendationAccountsInputBuilder::default()
    }
}

/// A builder for [`ListOrganizationRecommendationAccountsInput`](crate::operation::list_organization_recommendation_accounts::ListOrganizationRecommendationAccountsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListOrganizationRecommendationAccountsInputBuilder {
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) organization_recommendation_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) affected_account_id: ::std::option::Option<::std::string::String>,
}
impl ListOrganizationRecommendationAccountsInputBuilder {
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>The Recommendation identifier</p>
    /// This field is required.
    pub fn organization_recommendation_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.organization_recommendation_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Recommendation identifier</p>
    pub fn set_organization_recommendation_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.organization_recommendation_identifier = input;
        self
    }
    /// <p>The Recommendation identifier</p>
    pub fn get_organization_recommendation_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.organization_recommendation_identifier
    }
    /// <p>An account affected by this organization recommendation</p>
    pub fn affected_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.affected_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An account affected by this organization recommendation</p>
    pub fn set_affected_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.affected_account_id = input;
        self
    }
    /// <p>An account affected by this organization recommendation</p>
    pub fn get_affected_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.affected_account_id
    }
    /// Consumes the builder and constructs a [`ListOrganizationRecommendationAccountsInput`](crate::operation::list_organization_recommendation_accounts::ListOrganizationRecommendationAccountsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_organization_recommendation_accounts::ListOrganizationRecommendationAccountsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::list_organization_recommendation_accounts::ListOrganizationRecommendationAccountsInput {
                next_token: self.next_token,
                max_results: self.max_results,
                organization_recommendation_identifier: self.organization_recommendation_identifier,
                affected_account_id: self.affected_account_id,
            },
        )
    }
}
