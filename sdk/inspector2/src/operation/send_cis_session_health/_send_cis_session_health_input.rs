// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SendCisSessionHealthInput {
    /// <p>A unique identifier for the scan job.</p>
    pub scan_job_id: ::std::option::Option<::std::string::String>,
    /// <p>The unique token that identifies the CIS session.</p>
    pub session_token: ::std::option::Option<::std::string::String>,
}
impl SendCisSessionHealthInput {
    /// <p>A unique identifier for the scan job.</p>
    pub fn scan_job_id(&self) -> ::std::option::Option<&str> {
        self.scan_job_id.as_deref()
    }
    /// <p>The unique token that identifies the CIS session.</p>
    pub fn session_token(&self) -> ::std::option::Option<&str> {
        self.session_token.as_deref()
    }
}
impl SendCisSessionHealthInput {
    /// Creates a new builder-style object to manufacture [`SendCisSessionHealthInput`](crate::operation::send_cis_session_health::SendCisSessionHealthInput).
    pub fn builder() -> crate::operation::send_cis_session_health::builders::SendCisSessionHealthInputBuilder {
        crate::operation::send_cis_session_health::builders::SendCisSessionHealthInputBuilder::default()
    }
}

/// A builder for [`SendCisSessionHealthInput`](crate::operation::send_cis_session_health::SendCisSessionHealthInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SendCisSessionHealthInputBuilder {
    pub(crate) scan_job_id: ::std::option::Option<::std::string::String>,
    pub(crate) session_token: ::std::option::Option<::std::string::String>,
}
impl SendCisSessionHealthInputBuilder {
    /// <p>A unique identifier for the scan job.</p>
    /// This field is required.
    pub fn scan_job_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.scan_job_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the scan job.</p>
    pub fn set_scan_job_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.scan_job_id = input;
        self
    }
    /// <p>A unique identifier for the scan job.</p>
    pub fn get_scan_job_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.scan_job_id
    }
    /// <p>The unique token that identifies the CIS session.</p>
    /// This field is required.
    pub fn session_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.session_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique token that identifies the CIS session.</p>
    pub fn set_session_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.session_token = input;
        self
    }
    /// <p>The unique token that identifies the CIS session.</p>
    pub fn get_session_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.session_token
    }
    /// Consumes the builder and constructs a [`SendCisSessionHealthInput`](crate::operation::send_cis_session_health::SendCisSessionHealthInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::send_cis_session_health::SendCisSessionHealthInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::send_cis_session_health::SendCisSessionHealthInput {
            scan_job_id: self.scan_job_id,
            session_token: self.session_token,
        })
    }
}
