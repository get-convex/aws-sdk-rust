// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a <code>StructureMessageName</code> to <code>DataType</code> map element.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StructuredMessageFieldNameAndDataTypePair {
    /// <p>The field name of the structured message. It determines how a data value is referenced in the target language.</p>
    pub field_name: ::std::string::String,
    /// <p>The data type.</p>
    pub data_type: ::std::option::Option<crate::types::StructuredMessage>,
}
impl StructuredMessageFieldNameAndDataTypePair {
    /// <p>The field name of the structured message. It determines how a data value is referenced in the target language.</p>
    pub fn field_name(&self) -> &str {
        use std::ops::Deref;
        self.field_name.deref()
    }
    /// <p>The data type.</p>
    pub fn data_type(&self) -> ::std::option::Option<&crate::types::StructuredMessage> {
        self.data_type.as_ref()
    }
}
impl StructuredMessageFieldNameAndDataTypePair {
    /// Creates a new builder-style object to manufacture [`StructuredMessageFieldNameAndDataTypePair`](crate::types::StructuredMessageFieldNameAndDataTypePair).
    pub fn builder() -> crate::types::builders::StructuredMessageFieldNameAndDataTypePairBuilder {
        crate::types::builders::StructuredMessageFieldNameAndDataTypePairBuilder::default()
    }
}

/// A builder for [`StructuredMessageFieldNameAndDataTypePair`](crate::types::StructuredMessageFieldNameAndDataTypePair).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StructuredMessageFieldNameAndDataTypePairBuilder {
    pub(crate) field_name: ::std::option::Option<::std::string::String>,
    pub(crate) data_type: ::std::option::Option<crate::types::StructuredMessage>,
}
impl StructuredMessageFieldNameAndDataTypePairBuilder {
    /// <p>The field name of the structured message. It determines how a data value is referenced in the target language.</p>
    /// This field is required.
    pub fn field_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.field_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The field name of the structured message. It determines how a data value is referenced in the target language.</p>
    pub fn set_field_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.field_name = input;
        self
    }
    /// <p>The field name of the structured message. It determines how a data value is referenced in the target language.</p>
    pub fn get_field_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.field_name
    }
    /// <p>The data type.</p>
    /// This field is required.
    pub fn data_type(mut self, input: crate::types::StructuredMessage) -> Self {
        self.data_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The data type.</p>
    pub fn set_data_type(mut self, input: ::std::option::Option<crate::types::StructuredMessage>) -> Self {
        self.data_type = input;
        self
    }
    /// <p>The data type.</p>
    pub fn get_data_type(&self) -> &::std::option::Option<crate::types::StructuredMessage> {
        &self.data_type
    }
    /// Consumes the builder and constructs a [`StructuredMessageFieldNameAndDataTypePair`](crate::types::StructuredMessageFieldNameAndDataTypePair).
    /// This method will fail if any of the following fields are not set:
    /// - [`field_name`](crate::types::builders::StructuredMessageFieldNameAndDataTypePairBuilder::field_name)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::StructuredMessageFieldNameAndDataTypePair, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::StructuredMessageFieldNameAndDataTypePair {
            field_name: self.field_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "field_name",
                    "field_name was not specified but it is required when building StructuredMessageFieldNameAndDataTypePair",
                )
            })?,
            data_type: self.data_type,
        })
    }
}
