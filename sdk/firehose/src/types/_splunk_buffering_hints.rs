// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The buffering options. If no value is specified, the default values for Splunk are used.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SplunkBufferingHints {
    /// <p>Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 60 (1 minute).</p>
    pub interval_in_seconds: ::std::option::Option<i32>,
    /// <p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.</p>
    pub size_in_mbs: ::std::option::Option<i32>,
}
impl SplunkBufferingHints {
    /// <p>Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 60 (1 minute).</p>
    pub fn interval_in_seconds(&self) -> ::std::option::Option<i32> {
        self.interval_in_seconds
    }
    /// <p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.</p>
    pub fn size_in_mbs(&self) -> ::std::option::Option<i32> {
        self.size_in_mbs
    }
}
impl SplunkBufferingHints {
    /// Creates a new builder-style object to manufacture [`SplunkBufferingHints`](crate::types::SplunkBufferingHints).
    pub fn builder() -> crate::types::builders::SplunkBufferingHintsBuilder {
        crate::types::builders::SplunkBufferingHintsBuilder::default()
    }
}

/// A builder for [`SplunkBufferingHints`](crate::types::SplunkBufferingHints).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SplunkBufferingHintsBuilder {
    pub(crate) interval_in_seconds: ::std::option::Option<i32>,
    pub(crate) size_in_mbs: ::std::option::Option<i32>,
}
impl SplunkBufferingHintsBuilder {
    /// <p>Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 60 (1 minute).</p>
    pub fn interval_in_seconds(mut self, input: i32) -> Self {
        self.interval_in_seconds = ::std::option::Option::Some(input);
        self
    }
    /// <p>Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 60 (1 minute).</p>
    pub fn set_interval_in_seconds(mut self, input: ::std::option::Option<i32>) -> Self {
        self.interval_in_seconds = input;
        self
    }
    /// <p>Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 60 (1 minute).</p>
    pub fn get_interval_in_seconds(&self) -> &::std::option::Option<i32> {
        &self.interval_in_seconds
    }
    /// <p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.</p>
    pub fn size_in_mbs(mut self, input: i32) -> Self {
        self.size_in_mbs = ::std::option::Option::Some(input);
        self
    }
    /// <p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.</p>
    pub fn set_size_in_mbs(mut self, input: ::std::option::Option<i32>) -> Self {
        self.size_in_mbs = input;
        self
    }
    /// <p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.</p>
    pub fn get_size_in_mbs(&self) -> &::std::option::Option<i32> {
        &self.size_in_mbs
    }
    /// Consumes the builder and constructs a [`SplunkBufferingHints`](crate::types::SplunkBufferingHints).
    pub fn build(self) -> crate::types::SplunkBufferingHints {
        crate::types::SplunkBufferingHints {
            interval_in_seconds: self.interval_in_seconds,
            size_in_mbs: self.size_in_mbs,
        }
    }
}
