// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the compute fleet of the build project. For more information, see <a href="https://docs.aws.amazon.com/codebuild/latest/userguide/fleets.html">Working with reserved capacity in CodeBuild</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProjectFleet {
    /// <p>Specifies the compute fleet ARN for the build project.</p>
    pub fleet_arn: ::std::option::Option<::std::string::String>,
}
impl ProjectFleet {
    /// <p>Specifies the compute fleet ARN for the build project.</p>
    pub fn fleet_arn(&self) -> ::std::option::Option<&str> {
        self.fleet_arn.as_deref()
    }
}
impl ProjectFleet {
    /// Creates a new builder-style object to manufacture [`ProjectFleet`](crate::types::ProjectFleet).
    pub fn builder() -> crate::types::builders::ProjectFleetBuilder {
        crate::types::builders::ProjectFleetBuilder::default()
    }
}

/// A builder for [`ProjectFleet`](crate::types::ProjectFleet).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ProjectFleetBuilder {
    pub(crate) fleet_arn: ::std::option::Option<::std::string::String>,
}
impl ProjectFleetBuilder {
    /// <p>Specifies the compute fleet ARN for the build project.</p>
    pub fn fleet_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.fleet_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the compute fleet ARN for the build project.</p>
    pub fn set_fleet_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.fleet_arn = input;
        self
    }
    /// <p>Specifies the compute fleet ARN for the build project.</p>
    pub fn get_fleet_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.fleet_arn
    }
    /// Consumes the builder and constructs a [`ProjectFleet`](crate::types::ProjectFleet).
    pub fn build(self) -> crate::types::ProjectFleet {
        crate::types::ProjectFleet { fleet_arn: self.fleet_arn }
    }
}
