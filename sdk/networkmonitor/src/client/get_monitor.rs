// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetMonitor`](crate::operation::get_monitor::builders::GetMonitorFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`monitor_name(impl Into<String>)`](crate::operation::get_monitor::builders::GetMonitorFluentBuilder::monitor_name) / [`set_monitor_name(Option<String>)`](crate::operation::get_monitor::builders::GetMonitorFluentBuilder::set_monitor_name):<br>required: **true**<br><p>The name of the monitor that details are returned for.</p><br>
    /// - On success, responds with [`GetMonitorOutput`](crate::operation::get_monitor::GetMonitorOutput) with field(s):
    ///   - [`monitor_arn(String)`](crate::operation::get_monitor::GetMonitorOutput::monitor_arn): <p>The ARN of the selected monitor.</p>
    ///   - [`monitor_name(String)`](crate::operation::get_monitor::GetMonitorOutput::monitor_name): <p>The name of the monitor. To get a list of the current monitors and their names, use the <code>ListMonitors</code> action.</p>
    ///   - [`state(MonitorState)`](crate::operation::get_monitor::GetMonitorOutput::state): <p>Returns a list of the state of each monitor.</p>
    ///   - [`aggregation_period(i64)`](crate::operation::get_monitor::GetMonitorOutput::aggregation_period): <p>The aggregation period for the specified monitor.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::get_monitor::GetMonitorOutput::tags): <p>The list of key-value pairs assigned to the monitor.</p>
    ///   - [`probes(Option<Vec::<Probe>>)`](crate::operation::get_monitor::GetMonitorOutput::probes): <p>The details about each probe associated with that monitor.</p>
    ///   - [`created_at(DateTime)`](crate::operation::get_monitor::GetMonitorOutput::created_at): <p>The time and date when the monitor was created.</p>
    ///   - [`modified_at(DateTime)`](crate::operation::get_monitor::GetMonitorOutput::modified_at): <p>The time and date when the monitor was last modified.</p>
    /// - On failure, responds with [`SdkError<GetMonitorError>`](crate::operation::get_monitor::GetMonitorError)
    pub fn get_monitor(&self) -> crate::operation::get_monitor::builders::GetMonitorFluentBuilder {
        crate::operation::get_monitor::builders::GetMonitorFluentBuilder::new(self.handle.clone())
    }
}
