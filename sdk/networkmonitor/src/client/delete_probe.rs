// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteProbe`](crate::operation::delete_probe::builders::DeleteProbeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`monitor_name(impl Into<String>)`](crate::operation::delete_probe::builders::DeleteProbeFluentBuilder::monitor_name) / [`set_monitor_name(Option<String>)`](crate::operation::delete_probe::builders::DeleteProbeFluentBuilder::set_monitor_name):<br>required: **true**<br><p>The name of the monitor to delete. For a list of the available monitors, use the <code>ListMonitors</code> action.</p><br>
    ///   - [`probe_id(impl Into<String>)`](crate::operation::delete_probe::builders::DeleteProbeFluentBuilder::probe_id) / [`set_probe_id(Option<String>)`](crate::operation::delete_probe::builders::DeleteProbeFluentBuilder::set_probe_id):<br>required: **true**<br><p>The ID of the probe to delete. Run <code>GetMonitor</code> to get a lst of all probes and probe IDs associated with the monitor.</p><br>
    /// - On success, responds with [`DeleteProbeOutput`](crate::operation::delete_probe::DeleteProbeOutput)
    /// - On failure, responds with [`SdkError<DeleteProbeError>`](crate::operation::delete_probe::DeleteProbeError)
    pub fn delete_probe(&self) -> crate::operation::delete_probe::builders::DeleteProbeFluentBuilder {
        crate::operation::delete_probe::builders::DeleteProbeFluentBuilder::new(self.handle.clone())
    }
}
