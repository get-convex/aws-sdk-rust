// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateProbe`](crate::operation::create_probe::builders::CreateProbeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`monitor_name(impl Into<String>)`](crate::operation::create_probe::builders::CreateProbeFluentBuilder::monitor_name) / [`set_monitor_name(Option<String>)`](crate::operation::create_probe::builders::CreateProbeFluentBuilder::set_monitor_name):<br>required: **true**<br><p>The name of the monitor to associated with the probe. To get a list of available monitors, use <code>ListMonitors</code>.</p><br>
    ///   - [`probe(ProbeInput)`](crate::operation::create_probe::builders::CreateProbeFluentBuilder::probe) / [`set_probe(Option<ProbeInput>)`](crate::operation::create_probe::builders::CreateProbeFluentBuilder::set_probe):<br>required: **true**<br><p>Describes the details of an individual probe for a monitor.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_probe::builders::CreateProbeFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_probe::builders::CreateProbeFluentBuilder::set_client_token):<br>required: **false**<br><p>Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned if a client token was provided in the request.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_probe::builders::CreateProbeFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_probe::builders::CreateProbeFluentBuilder::set_tags):<br>required: **false**<br><p>The list of key-value pairs created and assigned to the probe.</p><br>
    /// - On success, responds with [`CreateProbeOutput`](crate::operation::create_probe::CreateProbeOutput) with field(s):
    ///   - [`probe_id(Option<String>)`](crate::operation::create_probe::CreateProbeOutput::probe_id): <p>The ID of the probe for which details are returned.</p>
    ///   - [`probe_arn(Option<String>)`](crate::operation::create_probe::CreateProbeOutput::probe_arn): <p>The ARN of the probe.</p>
    ///   - [`source_arn(String)`](crate::operation::create_probe::CreateProbeOutput::source_arn): <p>The ARN of the probe.</p>
    ///   - [`destination(String)`](crate::operation::create_probe::CreateProbeOutput::destination): <p>The destination IP address for the monitor. This will be either an IPv4 or IPv6 address.</p>
    ///   - [`destination_port(Option<i32>)`](crate::operation::create_probe::CreateProbeOutput::destination_port): <p>The port associated with the <code>destination</code>. This is required only if the <code>protocol</code> is <code>TCP</code> and must be a number between <code>1</code> and <code>65536</code>.</p>
    ///   - [`protocol(Protocol)`](crate::operation::create_probe::CreateProbeOutput::protocol): <p>The protocol used for the network traffic between the <code>source</code> and <code>destination</code>. This will be either <code>TCP</code> or <code>ICMP</code>.</p>
    ///   - [`packet_size(Option<i32>)`](crate::operation::create_probe::CreateProbeOutput::packet_size): <p>The size of the packets sent between the source and destination. This will be a number between <code>56</code> and <code>8500</code>.</p>
    ///   - [`address_family(Option<AddressFamily>)`](crate::operation::create_probe::CreateProbeOutput::address_family): <p>Indicates whether the IP address is <code>IPV4</code> or <code>IPV6</code>.</p>
    ///   - [`vpc_id(Option<String>)`](crate::operation::create_probe::CreateProbeOutput::vpc_id): <p>The ID of the source VPC or subnet.</p>
    ///   - [`state(Option<ProbeState>)`](crate::operation::create_probe::CreateProbeOutput::state): <p>The state of the probe.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::create_probe::CreateProbeOutput::created_at): <p>The time and date that the probe was created.</p>
    ///   - [`modified_at(Option<DateTime>)`](crate::operation::create_probe::CreateProbeOutput::modified_at): <p>The time and date when the probe was last modified.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::create_probe::CreateProbeOutput::tags): <p>The list of key-value pairs assigned to the probe.</p>
    /// - On failure, responds with [`SdkError<CreateProbeError>`](crate::operation::create_probe::CreateProbeError)
    pub fn create_probe(&self) -> crate::operation::create_probe::builders::CreateProbeFluentBuilder {
        crate::operation::create_probe::builders::CreateProbeFluentBuilder::new(self.handle.clone())
    }
}
