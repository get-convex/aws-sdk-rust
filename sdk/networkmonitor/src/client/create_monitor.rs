// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateMonitor`](crate::operation::create_monitor::builders::CreateMonitorFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`monitor_name(impl Into<String>)`](crate::operation::create_monitor::builders::CreateMonitorFluentBuilder::monitor_name) / [`set_monitor_name(Option<String>)`](crate::operation::create_monitor::builders::CreateMonitorFluentBuilder::set_monitor_name):<br>required: **true**<br><p>The name identifying the monitor. It can contain only letters, underscores (_), or dashes (-), and can be up to 255 characters.</p><br>
    ///   - [`probes(CreateMonitorProbeInput)`](crate::operation::create_monitor::builders::CreateMonitorFluentBuilder::probes) / [`set_probes(Option<Vec::<CreateMonitorProbeInput>>)`](crate::operation::create_monitor::builders::CreateMonitorFluentBuilder::set_probes):<br>required: **false**<br><p>Displays a list of all of the probes created for a monitor.</p><br>
    ///   - [`aggregation_period(i64)`](crate::operation::create_monitor::builders::CreateMonitorFluentBuilder::aggregation_period) / [`set_aggregation_period(Option<i64>)`](crate::operation::create_monitor::builders::CreateMonitorFluentBuilder::set_aggregation_period):<br>required: **false**<br><p>The time, in seconds, that metrics are aggregated and sent to Amazon CloudWatch. Valid values are either <code>30</code> or <code>60</code>.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_monitor::builders::CreateMonitorFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_monitor::builders::CreateMonitorFluentBuilder::set_client_token):<br>required: **false**<br><p>Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned if a client token was provided in the request.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_monitor::builders::CreateMonitorFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_monitor::builders::CreateMonitorFluentBuilder::set_tags):<br>required: **false**<br><p>The list of key-value pairs created and assigned to the monitor.</p><br>
    /// - On success, responds with [`CreateMonitorOutput`](crate::operation::create_monitor::CreateMonitorOutput) with field(s):
    ///   - [`monitor_arn(String)`](crate::operation::create_monitor::CreateMonitorOutput::monitor_arn): <p>The ARN of the monitor.</p>
    ///   - [`monitor_name(String)`](crate::operation::create_monitor::CreateMonitorOutput::monitor_name): <p>The name of the monitor.</p>
    ///   - [`state(MonitorState)`](crate::operation::create_monitor::CreateMonitorOutput::state): <p>The state of the monitor.</p>
    ///   - [`aggregation_period(Option<i64>)`](crate::operation::create_monitor::CreateMonitorOutput::aggregation_period): <p>The number of seconds that metrics are aggregated by and sent to Amazon CloudWatch. This will be either <code>30</code> or <code>60</code>.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::create_monitor::CreateMonitorOutput::tags): <p>The list of key-value pairs assigned to the monitor.</p>
    /// - On failure, responds with [`SdkError<CreateMonitorError>`](crate::operation::create_monitor::CreateMonitorError)
    pub fn create_monitor(&self) -> crate::operation::create_monitor::builders::CreateMonitorFluentBuilder {
        crate::operation::create_monitor::builders::CreateMonitorFluentBuilder::new(self.handle.clone())
    }
}
