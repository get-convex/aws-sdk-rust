// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetProbe`](crate::operation::get_probe::builders::GetProbeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`monitor_name(impl Into<String>)`](crate::operation::get_probe::builders::GetProbeFluentBuilder::monitor_name) / [`set_monitor_name(Option<String>)`](crate::operation::get_probe::builders::GetProbeFluentBuilder::set_monitor_name):<br>required: **true**<br><p>The name of the monitor associated with the probe. Run <code>ListMonitors</code> to get a list of monitor names.</p><br>
    ///   - [`probe_id(impl Into<String>)`](crate::operation::get_probe::builders::GetProbeFluentBuilder::probe_id) / [`set_probe_id(Option<String>)`](crate::operation::get_probe::builders::GetProbeFluentBuilder::set_probe_id):<br>required: **true**<br><p>The ID of the probe to get information about. Run <code>GetMonitor</code> action to get a list of probes and probe IDs for the monitor.</p><br>
    /// - On success, responds with [`GetProbeOutput`](crate::operation::get_probe::GetProbeOutput) with field(s):
    ///   - [`probe_id(Option<String>)`](crate::operation::get_probe::GetProbeOutput::probe_id): <p>The ID of the probe for which details are returned.</p>
    ///   - [`probe_arn(Option<String>)`](crate::operation::get_probe::GetProbeOutput::probe_arn): <p>The ARN of the probe.</p>
    ///   - [`source_arn(String)`](crate::operation::get_probe::GetProbeOutput::source_arn): <p>The ARN of the probe.</p>
    ///   - [`destination(String)`](crate::operation::get_probe::GetProbeOutput::destination): <p>The destination IP address for the monitor. This will be either an IPv4 or IPv6 address.</p>
    ///   - [`destination_port(Option<i32>)`](crate::operation::get_probe::GetProbeOutput::destination_port): <p>The port associated with the <code>destination</code>. This is required only if the <code>protocol</code> is <code>TCP</code> and must be a number between <code>1</code> and <code>65536</code>.</p>
    ///   - [`protocol(Protocol)`](crate::operation::get_probe::GetProbeOutput::protocol): <p>The protocol used for the network traffic between the <code>source</code> and <code>destination</code>. This will be either <code>TCP</code> or <code>ICMP</code>.</p>
    ///   - [`packet_size(Option<i32>)`](crate::operation::get_probe::GetProbeOutput::packet_size): <p>The size of the packets sent between the source and destination. This will be a number between <code>56</code> and <code>8500</code>.</p>
    ///   - [`address_family(Option<AddressFamily>)`](crate::operation::get_probe::GetProbeOutput::address_family): <p>Indicates whether the IP address is <code>IPV4</code> or <code>IPV6</code>.</p>
    ///   - [`vpc_id(Option<String>)`](crate::operation::get_probe::GetProbeOutput::vpc_id): <p>The ID of the source VPC or subnet.</p>
    ///   - [`state(Option<ProbeState>)`](crate::operation::get_probe::GetProbeOutput::state): <p>The state of the probe.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::get_probe::GetProbeOutput::created_at): <p>The time and date that the probe was created.</p>
    ///   - [`modified_at(Option<DateTime>)`](crate::operation::get_probe::GetProbeOutput::modified_at): <p>The time and date that the probe was last modified.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::get_probe::GetProbeOutput::tags): <p>The list of key-value pairs assigned to the probe.</p>
    /// - On failure, responds with [`SdkError<GetProbeError>`](crate::operation::get_probe::GetProbeError)
    pub fn get_probe(&self) -> crate::operation::get_probe::builders::GetProbeFluentBuilder {
        crate::operation::get_probe::builders::GetProbeFluentBuilder::new(self.handle.clone())
    }
}
