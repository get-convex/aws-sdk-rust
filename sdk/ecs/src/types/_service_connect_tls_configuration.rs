// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents the configuration for Service Connect TLS.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ServiceConnectTlsConfiguration {
    /// <p>The signer certificate authority.</p>
    pub issuer_certificate_authority: ::std::option::Option<crate::types::ServiceConnectTlsCertificateAuthority>,
    /// <p>The Amazon Web Services Key Management Service key.</p>
    pub kms_key: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
}
impl ServiceConnectTlsConfiguration {
    /// <p>The signer certificate authority.</p>
    pub fn issuer_certificate_authority(&self) -> ::std::option::Option<&crate::types::ServiceConnectTlsCertificateAuthority> {
        self.issuer_certificate_authority.as_ref()
    }
    /// <p>The Amazon Web Services Key Management Service key.</p>
    pub fn kms_key(&self) -> ::std::option::Option<&str> {
        self.kms_key.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
}
impl ServiceConnectTlsConfiguration {
    /// Creates a new builder-style object to manufacture [`ServiceConnectTlsConfiguration`](crate::types::ServiceConnectTlsConfiguration).
    pub fn builder() -> crate::types::builders::ServiceConnectTlsConfigurationBuilder {
        crate::types::builders::ServiceConnectTlsConfigurationBuilder::default()
    }
}

/// A builder for [`ServiceConnectTlsConfiguration`](crate::types::ServiceConnectTlsConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ServiceConnectTlsConfigurationBuilder {
    pub(crate) issuer_certificate_authority: ::std::option::Option<crate::types::ServiceConnectTlsCertificateAuthority>,
    pub(crate) kms_key: ::std::option::Option<::std::string::String>,
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
}
impl ServiceConnectTlsConfigurationBuilder {
    /// <p>The signer certificate authority.</p>
    /// This field is required.
    pub fn issuer_certificate_authority(mut self, input: crate::types::ServiceConnectTlsCertificateAuthority) -> Self {
        self.issuer_certificate_authority = ::std::option::Option::Some(input);
        self
    }
    /// <p>The signer certificate authority.</p>
    pub fn set_issuer_certificate_authority(mut self, input: ::std::option::Option<crate::types::ServiceConnectTlsCertificateAuthority>) -> Self {
        self.issuer_certificate_authority = input;
        self
    }
    /// <p>The signer certificate authority.</p>
    pub fn get_issuer_certificate_authority(&self) -> &::std::option::Option<crate::types::ServiceConnectTlsCertificateAuthority> {
        &self.issuer_certificate_authority
    }
    /// <p>The Amazon Web Services Key Management Service key.</p>
    pub fn kms_key(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.kms_key = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Key Management Service key.</p>
    pub fn set_kms_key(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.kms_key = input;
        self
    }
    /// <p>The Amazon Web Services Key Management Service key.</p>
    pub fn get_kms_key(&self) -> &::std::option::Option<::std::string::String> {
        &self.kms_key
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.</p>
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// Consumes the builder and constructs a [`ServiceConnectTlsConfiguration`](crate::types::ServiceConnectTlsConfiguration).
    pub fn build(self) -> crate::types::ServiceConnectTlsConfiguration {
        crate::types::ServiceConnectTlsConfiguration {
            issuer_certificate_authority: self.issuer_certificate_authority,
            kms_key: self.kms_key,
            role_arn: self.role_arn,
        }
    }
}
