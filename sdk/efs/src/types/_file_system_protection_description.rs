// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the protection on a file system.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FileSystemProtectionDescription {
    /// <p>The status of the file system's replication overwrite protection.</p>
    /// <ul>
    /// <li>
    /// <p><code>ENABLED</code> – The file system cannot be used as the destination file system in a replication configuration. The file system is writeable. Replication overwrite protection is <code>ENABLED</code> by default.</p></li>
    /// <li>
    /// <p><code>DISABLED</code> – The file system can be used as the destination file system in a replication configuration. The file system is read-only and can only be modified by EFS replication.</p></li>
    /// <li>
    /// <p><code>REPLICATING</code> – The file system is being used as the destination file system in a replication configuration. The file system is read-only and is only modified only by EFS replication.</p></li>
    /// </ul>
    /// <p>If the replication configuration is deleted, the file system's replication overwrite protection is re-enabled, the file system becomes writeable.</p>
    pub replication_overwrite_protection: ::std::option::Option<crate::types::ReplicationOverwriteProtection>,
}
impl FileSystemProtectionDescription {
    /// <p>The status of the file system's replication overwrite protection.</p>
    /// <ul>
    /// <li>
    /// <p><code>ENABLED</code> – The file system cannot be used as the destination file system in a replication configuration. The file system is writeable. Replication overwrite protection is <code>ENABLED</code> by default.</p></li>
    /// <li>
    /// <p><code>DISABLED</code> – The file system can be used as the destination file system in a replication configuration. The file system is read-only and can only be modified by EFS replication.</p></li>
    /// <li>
    /// <p><code>REPLICATING</code> – The file system is being used as the destination file system in a replication configuration. The file system is read-only and is only modified only by EFS replication.</p></li>
    /// </ul>
    /// <p>If the replication configuration is deleted, the file system's replication overwrite protection is re-enabled, the file system becomes writeable.</p>
    pub fn replication_overwrite_protection(&self) -> ::std::option::Option<&crate::types::ReplicationOverwriteProtection> {
        self.replication_overwrite_protection.as_ref()
    }
}
impl FileSystemProtectionDescription {
    /// Creates a new builder-style object to manufacture [`FileSystemProtectionDescription`](crate::types::FileSystemProtectionDescription).
    pub fn builder() -> crate::types::builders::FileSystemProtectionDescriptionBuilder {
        crate::types::builders::FileSystemProtectionDescriptionBuilder::default()
    }
}

/// A builder for [`FileSystemProtectionDescription`](crate::types::FileSystemProtectionDescription).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct FileSystemProtectionDescriptionBuilder {
    pub(crate) replication_overwrite_protection: ::std::option::Option<crate::types::ReplicationOverwriteProtection>,
}
impl FileSystemProtectionDescriptionBuilder {
    /// <p>The status of the file system's replication overwrite protection.</p>
    /// <ul>
    /// <li>
    /// <p><code>ENABLED</code> – The file system cannot be used as the destination file system in a replication configuration. The file system is writeable. Replication overwrite protection is <code>ENABLED</code> by default.</p></li>
    /// <li>
    /// <p><code>DISABLED</code> – The file system can be used as the destination file system in a replication configuration. The file system is read-only and can only be modified by EFS replication.</p></li>
    /// <li>
    /// <p><code>REPLICATING</code> – The file system is being used as the destination file system in a replication configuration. The file system is read-only and is only modified only by EFS replication.</p></li>
    /// </ul>
    /// <p>If the replication configuration is deleted, the file system's replication overwrite protection is re-enabled, the file system becomes writeable.</p>
    pub fn replication_overwrite_protection(mut self, input: crate::types::ReplicationOverwriteProtection) -> Self {
        self.replication_overwrite_protection = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the file system's replication overwrite protection.</p>
    /// <ul>
    /// <li>
    /// <p><code>ENABLED</code> – The file system cannot be used as the destination file system in a replication configuration. The file system is writeable. Replication overwrite protection is <code>ENABLED</code> by default.</p></li>
    /// <li>
    /// <p><code>DISABLED</code> – The file system can be used as the destination file system in a replication configuration. The file system is read-only and can only be modified by EFS replication.</p></li>
    /// <li>
    /// <p><code>REPLICATING</code> – The file system is being used as the destination file system in a replication configuration. The file system is read-only and is only modified only by EFS replication.</p></li>
    /// </ul>
    /// <p>If the replication configuration is deleted, the file system's replication overwrite protection is re-enabled, the file system becomes writeable.</p>
    pub fn set_replication_overwrite_protection(mut self, input: ::std::option::Option<crate::types::ReplicationOverwriteProtection>) -> Self {
        self.replication_overwrite_protection = input;
        self
    }
    /// <p>The status of the file system's replication overwrite protection.</p>
    /// <ul>
    /// <li>
    /// <p><code>ENABLED</code> – The file system cannot be used as the destination file system in a replication configuration. The file system is writeable. Replication overwrite protection is <code>ENABLED</code> by default.</p></li>
    /// <li>
    /// <p><code>DISABLED</code> – The file system can be used as the destination file system in a replication configuration. The file system is read-only and can only be modified by EFS replication.</p></li>
    /// <li>
    /// <p><code>REPLICATING</code> – The file system is being used as the destination file system in a replication configuration. The file system is read-only and is only modified only by EFS replication.</p></li>
    /// </ul>
    /// <p>If the replication configuration is deleted, the file system's replication overwrite protection is re-enabled, the file system becomes writeable.</p>
    pub fn get_replication_overwrite_protection(&self) -> &::std::option::Option<crate::types::ReplicationOverwriteProtection> {
        &self.replication_overwrite_protection
    }
    /// Consumes the builder and constructs a [`FileSystemProtectionDescription`](crate::types::FileSystemProtectionDescription).
    pub fn build(self) -> crate::types::FileSystemProtectionDescription {
        crate::types::FileSystemProtectionDescription {
            replication_overwrite_protection: self.replication_overwrite_protection,
        }
    }
}
