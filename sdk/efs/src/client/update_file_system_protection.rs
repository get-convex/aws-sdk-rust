// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateFileSystemProtection`](crate::operation::update_file_system_protection::builders::UpdateFileSystemProtectionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`file_system_id(impl Into<String>)`](crate::operation::update_file_system_protection::builders::UpdateFileSystemProtectionFluentBuilder::file_system_id) / [`set_file_system_id(Option<String>)`](crate::operation::update_file_system_protection::builders::UpdateFileSystemProtectionFluentBuilder::set_file_system_id):<br>required: **true**<br><p>The ID of the file system to update.</p><br>
    ///   - [`replication_overwrite_protection(ReplicationOverwriteProtection)`](crate::operation::update_file_system_protection::builders::UpdateFileSystemProtectionFluentBuilder::replication_overwrite_protection) / [`set_replication_overwrite_protection(Option<ReplicationOverwriteProtection>)`](crate::operation::update_file_system_protection::builders::UpdateFileSystemProtectionFluentBuilder::set_replication_overwrite_protection):<br>required: **false**<br><p>The status of the file system's replication overwrite protection.</p> <ul>  <li>   <p><code>ENABLED</code> – The file system cannot be used as the destination file system in a replication configuration. The file system is writeable. Replication overwrite protection is <code>ENABLED</code> by default.</p></li>  <li>   <p><code>DISABLED</code> – The file system can be used as the destination file system in a replication configuration. The file system is read-only and can only be modified by EFS replication.</p></li>  <li>   <p><code>REPLICATING</code> – The file system is being used as the destination file system in a replication configuration. The file system is read-only and is only modified only by EFS replication.</p></li> </ul> <p>If the replication configuration is deleted, the file system's replication overwrite protection is re-enabled, the file system becomes writeable.</p><br>
    /// - On success, responds with [`UpdateFileSystemProtectionOutput`](crate::operation::update_file_system_protection::UpdateFileSystemProtectionOutput) with field(s):
    ///   - [`replication_overwrite_protection(Option<ReplicationOverwriteProtection>)`](crate::operation::update_file_system_protection::UpdateFileSystemProtectionOutput::replication_overwrite_protection): <p>The status of the file system's replication overwrite protection.</p> <ul>  <li>   <p><code>ENABLED</code> – The file system cannot be used as the destination file system in a replication configuration. The file system is writeable. Replication overwrite protection is <code>ENABLED</code> by default.</p></li>  <li>   <p><code>DISABLED</code> – The file system can be used as the destination file system in a replication configuration. The file system is read-only and can only be modified by EFS replication.</p></li>  <li>   <p><code>REPLICATING</code> – The file system is being used as the destination file system in a replication configuration. The file system is read-only and is only modified only by EFS replication.</p></li> </ul> <p>If the replication configuration is deleted, the file system's replication overwrite protection is re-enabled, the file system becomes writeable.</p>
    /// - On failure, responds with [`SdkError<UpdateFileSystemProtectionError>`](crate::operation::update_file_system_protection::UpdateFileSystemProtectionError)
    pub fn update_file_system_protection(
        &self,
    ) -> crate::operation::update_file_system_protection::builders::UpdateFileSystemProtectionFluentBuilder {
        crate::operation::update_file_system_protection::builders::UpdateFileSystemProtectionFluentBuilder::new(self.handle.clone())
    }
}
