// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The status of the data export.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExportStatus {
    /// <p>The status code for the request.</p>
    pub status_code: ::std::option::Option<crate::types::ExportStatusCode>,
    /// <p>The description for the status code.</p>
    pub status_reason: ::std::option::Option<crate::types::ExecutionStatusReason>,
    /// <p>The timestamp of when the export was created.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The timestamp of when the export was updated.</p>
    pub last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The timestamp of when the export was last generated.</p>
    pub last_refreshed_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ExportStatus {
    /// <p>The status code for the request.</p>
    pub fn status_code(&self) -> ::std::option::Option<&crate::types::ExportStatusCode> {
        self.status_code.as_ref()
    }
    /// <p>The description for the status code.</p>
    pub fn status_reason(&self) -> ::std::option::Option<&crate::types::ExecutionStatusReason> {
        self.status_reason.as_ref()
    }
    /// <p>The timestamp of when the export was created.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The timestamp of when the export was updated.</p>
    pub fn last_updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_at.as_ref()
    }
    /// <p>The timestamp of when the export was last generated.</p>
    pub fn last_refreshed_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_refreshed_at.as_ref()
    }
}
impl ExportStatus {
    /// Creates a new builder-style object to manufacture [`ExportStatus`](crate::types::ExportStatus).
    pub fn builder() -> crate::types::builders::ExportStatusBuilder {
        crate::types::builders::ExportStatusBuilder::default()
    }
}

/// A builder for [`ExportStatus`](crate::types::ExportStatus).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExportStatusBuilder {
    pub(crate) status_code: ::std::option::Option<crate::types::ExportStatusCode>,
    pub(crate) status_reason: ::std::option::Option<crate::types::ExecutionStatusReason>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_refreshed_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ExportStatusBuilder {
    /// <p>The status code for the request.</p>
    pub fn status_code(mut self, input: crate::types::ExportStatusCode) -> Self {
        self.status_code = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status code for the request.</p>
    pub fn set_status_code(mut self, input: ::std::option::Option<crate::types::ExportStatusCode>) -> Self {
        self.status_code = input;
        self
    }
    /// <p>The status code for the request.</p>
    pub fn get_status_code(&self) -> &::std::option::Option<crate::types::ExportStatusCode> {
        &self.status_code
    }
    /// <p>The description for the status code.</p>
    pub fn status_reason(mut self, input: crate::types::ExecutionStatusReason) -> Self {
        self.status_reason = ::std::option::Option::Some(input);
        self
    }
    /// <p>The description for the status code.</p>
    pub fn set_status_reason(mut self, input: ::std::option::Option<crate::types::ExecutionStatusReason>) -> Self {
        self.status_reason = input;
        self
    }
    /// <p>The description for the status code.</p>
    pub fn get_status_reason(&self) -> &::std::option::Option<crate::types::ExecutionStatusReason> {
        &self.status_reason
    }
    /// <p>The timestamp of when the export was created.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of when the export was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp of when the export was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The timestamp of when the export was updated.</p>
    pub fn last_updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of when the export was updated.</p>
    pub fn set_last_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_at = input;
        self
    }
    /// <p>The timestamp of when the export was updated.</p>
    pub fn get_last_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_at
    }
    /// <p>The timestamp of when the export was last generated.</p>
    pub fn last_refreshed_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_refreshed_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of when the export was last generated.</p>
    pub fn set_last_refreshed_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_refreshed_at = input;
        self
    }
    /// <p>The timestamp of when the export was last generated.</p>
    pub fn get_last_refreshed_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_refreshed_at
    }
    /// Consumes the builder and constructs a [`ExportStatus`](crate::types::ExportStatus).
    pub fn build(self) -> crate::types::ExportStatus {
        crate::types::ExportStatus {
            status_code: self.status_code,
            status_reason: self.status_reason,
            created_at: self.created_at,
            last_updated_at: self.last_updated_at,
            last_refreshed_at: self.last_refreshed_at,
        }
    }
}
