// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The status of the execution.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExecutionStatus {
    /// <p>The code for the status of the execution.</p>
    pub status_code: ::std::option::Option<crate::types::ExecutionStatusCode>,
    /// <p>The reason for the failed status.</p>
    pub status_reason: ::std::option::Option<crate::types::ExecutionStatusReason>,
    /// <p>The time when the execution was created.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The time when the execution was completed.</p>
    pub completed_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The time when the execution was last updated.</p>
    pub last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ExecutionStatus {
    /// <p>The code for the status of the execution.</p>
    pub fn status_code(&self) -> ::std::option::Option<&crate::types::ExecutionStatusCode> {
        self.status_code.as_ref()
    }
    /// <p>The reason for the failed status.</p>
    pub fn status_reason(&self) -> ::std::option::Option<&crate::types::ExecutionStatusReason> {
        self.status_reason.as_ref()
    }
    /// <p>The time when the execution was created.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The time when the execution was completed.</p>
    pub fn completed_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.completed_at.as_ref()
    }
    /// <p>The time when the execution was last updated.</p>
    pub fn last_updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_at.as_ref()
    }
}
impl ExecutionStatus {
    /// Creates a new builder-style object to manufacture [`ExecutionStatus`](crate::types::ExecutionStatus).
    pub fn builder() -> crate::types::builders::ExecutionStatusBuilder {
        crate::types::builders::ExecutionStatusBuilder::default()
    }
}

/// A builder for [`ExecutionStatus`](crate::types::ExecutionStatus).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExecutionStatusBuilder {
    pub(crate) status_code: ::std::option::Option<crate::types::ExecutionStatusCode>,
    pub(crate) status_reason: ::std::option::Option<crate::types::ExecutionStatusReason>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) completed_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ExecutionStatusBuilder {
    /// <p>The code for the status of the execution.</p>
    pub fn status_code(mut self, input: crate::types::ExecutionStatusCode) -> Self {
        self.status_code = ::std::option::Option::Some(input);
        self
    }
    /// <p>The code for the status of the execution.</p>
    pub fn set_status_code(mut self, input: ::std::option::Option<crate::types::ExecutionStatusCode>) -> Self {
        self.status_code = input;
        self
    }
    /// <p>The code for the status of the execution.</p>
    pub fn get_status_code(&self) -> &::std::option::Option<crate::types::ExecutionStatusCode> {
        &self.status_code
    }
    /// <p>The reason for the failed status.</p>
    pub fn status_reason(mut self, input: crate::types::ExecutionStatusReason) -> Self {
        self.status_reason = ::std::option::Option::Some(input);
        self
    }
    /// <p>The reason for the failed status.</p>
    pub fn set_status_reason(mut self, input: ::std::option::Option<crate::types::ExecutionStatusReason>) -> Self {
        self.status_reason = input;
        self
    }
    /// <p>The reason for the failed status.</p>
    pub fn get_status_reason(&self) -> &::std::option::Option<crate::types::ExecutionStatusReason> {
        &self.status_reason
    }
    /// <p>The time when the execution was created.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the execution was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The time when the execution was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The time when the execution was completed.</p>
    pub fn completed_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.completed_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the execution was completed.</p>
    pub fn set_completed_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.completed_at = input;
        self
    }
    /// <p>The time when the execution was completed.</p>
    pub fn get_completed_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.completed_at
    }
    /// <p>The time when the execution was last updated.</p>
    pub fn last_updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the execution was last updated.</p>
    pub fn set_last_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_at = input;
        self
    }
    /// <p>The time when the execution was last updated.</p>
    pub fn get_last_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_at
    }
    /// Consumes the builder and constructs a [`ExecutionStatus`](crate::types::ExecutionStatus).
    pub fn build(self) -> crate::types::ExecutionStatus {
        crate::types::ExecutionStatus {
            status_code: self.status_code,
            status_reason: self.status_reason,
            created_at: self.created_at,
            completed_at: self.completed_at,
            last_updated_at: self.last_updated_at,
        }
    }
}
