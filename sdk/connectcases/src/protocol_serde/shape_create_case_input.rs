// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_case_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_case::CreateCaseInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("clientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.fields {
        let mut array_3 = object.key("fields").start_array();
        for item_4 in var_2 {
            {
                #[allow(unused_mut)]
                let mut object_5 = array_3.value().start_object();
                crate::protocol_serde::shape_field_value::ser_field_value(&mut object_5, item_4)?;
                object_5.finish();
            }
        }
        array_3.finish();
    }
    if let Some(var_6) = &input.performed_by {
        #[allow(unused_mut)]
        let mut object_7 = object.key("performedBy").start_object();
        crate::protocol_serde::shape_user_union::ser_user_union(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.template_id {
        object.key("templateId").string(var_8.as_str());
    }
    Ok(())
}
