// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetKxScalingGroup`](crate::operation::get_kx_scaling_group::builders::GetKxScalingGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`environment_id(impl Into<String>)`](crate::operation::get_kx_scaling_group::builders::GetKxScalingGroupFluentBuilder::environment_id) / [`set_environment_id(Option<String>)`](crate::operation::get_kx_scaling_group::builders::GetKxScalingGroupFluentBuilder::set_environment_id):<br>required: **true**<br><p>A unique identifier for the kdb environment.</p><br>
    ///   - [`scaling_group_name(impl Into<String>)`](crate::operation::get_kx_scaling_group::builders::GetKxScalingGroupFluentBuilder::scaling_group_name) / [`set_scaling_group_name(Option<String>)`](crate::operation::get_kx_scaling_group::builders::GetKxScalingGroupFluentBuilder::set_scaling_group_name):<br>required: **true**<br><p>A unique identifier for the kdb scaling group.</p><br>
    /// - On success, responds with [`GetKxScalingGroupOutput`](crate::operation::get_kx_scaling_group::GetKxScalingGroupOutput) with field(s):
    ///   - [`scaling_group_name(Option<String>)`](crate::operation::get_kx_scaling_group::GetKxScalingGroupOutput::scaling_group_name): <p>A unique identifier for the kdb scaling group.</p>
    ///   - [`scaling_group_arn(Option<String>)`](crate::operation::get_kx_scaling_group::GetKxScalingGroupOutput::scaling_group_arn): <p>The ARN identifier for the scaling group.</p>
    ///   - [`host_type(Option<String>)`](crate::operation::get_kx_scaling_group::GetKxScalingGroupOutput::host_type): <p>The memory and CPU capabilities of the scaling group host on which FinSpace Managed kdb clusters will be placed.</p>
    ///   - [`clusters(Option<Vec::<String>>)`](crate::operation::get_kx_scaling_group::GetKxScalingGroupOutput::clusters): <p>The list of Managed kdb clusters that are currently active in the given scaling group.</p>
    ///   - [`availability_zone_id(Option<String>)`](crate::operation::get_kx_scaling_group::GetKxScalingGroupOutput::availability_zone_id): <p>The identifier of the availability zones.</p>
    ///   - [`status(Option<KxScalingGroupStatus>)`](crate::operation::get_kx_scaling_group::GetKxScalingGroupOutput::status): <p>The status of scaling group.</p> <ul>  <li>   <p>CREATING – The scaling group creation is in progress.</p></li>  <li>   <p>CREATE_FAILED – The scaling group creation has failed.</p></li>  <li>   <p>ACTIVE – The scaling group is active.</p></li>  <li>   <p>UPDATING – The scaling group is in the process of being updated.</p></li>  <li>   <p>UPDATE_FAILED – The update action failed.</p></li>  <li>   <p>DELETING – The scaling group is in the process of being deleted.</p></li>  <li>   <p>DELETE_FAILED – The system failed to delete the scaling group.</p></li>  <li>   <p>DELETED – The scaling group is successfully deleted.</p></li> </ul>
    ///   - [`status_reason(Option<String>)`](crate::operation::get_kx_scaling_group::GetKxScalingGroupOutput::status_reason): <p>The error message when a failed state occurs.</p>
    ///   - [`last_modified_timestamp(Option<DateTime>)`](crate::operation::get_kx_scaling_group::GetKxScalingGroupOutput::last_modified_timestamp): <p>The last time that the scaling group was updated in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::operation::get_kx_scaling_group::GetKxScalingGroupOutput::created_timestamp): <p>The timestamp at which the scaling group was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    /// - On failure, responds with [`SdkError<GetKxScalingGroupError>`](crate::operation::get_kx_scaling_group::GetKxScalingGroupError)
    pub fn get_kx_scaling_group(&self) -> crate::operation::get_kx_scaling_group::builders::GetKxScalingGroupFluentBuilder {
        crate::operation::get_kx_scaling_group::builders::GetKxScalingGroupFluentBuilder::new(self.handle.clone())
    }
}
