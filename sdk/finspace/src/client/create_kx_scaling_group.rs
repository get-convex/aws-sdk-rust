// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateKxScalingGroup`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::set_client_token):<br>required: **true**<br><p>A token that ensures idempotency. This token expires in 10 minutes.</p><br>
    ///   - [`environment_id(impl Into<String>)`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::environment_id) / [`set_environment_id(Option<String>)`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::set_environment_id):<br>required: **true**<br><p>A unique identifier for the kdb environment, where you want to create the scaling group.</p><br>
    ///   - [`scaling_group_name(impl Into<String>)`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::scaling_group_name) / [`set_scaling_group_name(Option<String>)`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::set_scaling_group_name):<br>required: **true**<br><p>A unique identifier for the kdb scaling group.</p><br>
    ///   - [`host_type(impl Into<String>)`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::host_type) / [`set_host_type(Option<String>)`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::set_host_type):<br>required: **true**<br><p>The memory and CPU capabilities of the scaling group host on which FinSpace Managed kdb clusters will be placed.</p><br>
    ///   - [`availability_zone_id(impl Into<String>)`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::availability_zone_id) / [`set_availability_zone_id(Option<String>)`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::set_availability_zone_id):<br>required: **true**<br><p>The identifier of the availability zones.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::set_tags):<br>required: **false**<br><p>A list of key-value pairs to label the scaling group. You can add up to 50 tags to a scaling group.</p><br>
    /// - On success, responds with [`CreateKxScalingGroupOutput`](crate::operation::create_kx_scaling_group::CreateKxScalingGroupOutput) with field(s):
    ///   - [`environment_id(Option<String>)`](crate::operation::create_kx_scaling_group::CreateKxScalingGroupOutput::environment_id): <p>A unique identifier for the kdb environment, where you create the scaling group.</p>
    ///   - [`scaling_group_name(Option<String>)`](crate::operation::create_kx_scaling_group::CreateKxScalingGroupOutput::scaling_group_name): <p>A unique identifier for the kdb scaling group.</p>
    ///   - [`host_type(Option<String>)`](crate::operation::create_kx_scaling_group::CreateKxScalingGroupOutput::host_type): <p>The memory and CPU capabilities of the scaling group host on which FinSpace Managed kdb clusters will be placed.</p>
    ///   - [`availability_zone_id(Option<String>)`](crate::operation::create_kx_scaling_group::CreateKxScalingGroupOutput::availability_zone_id): <p>The identifier of the availability zones.</p>
    ///   - [`status(Option<KxScalingGroupStatus>)`](crate::operation::create_kx_scaling_group::CreateKxScalingGroupOutput::status): <p>The status of scaling group.</p> <ul>  <li>   <p>CREATING – The scaling group creation is in progress.</p></li>  <li>   <p>CREATE_FAILED – The scaling group creation has failed.</p></li>  <li>   <p>ACTIVE – The scaling group is active.</p></li>  <li>   <p>UPDATING – The scaling group is in the process of being updated.</p></li>  <li>   <p>UPDATE_FAILED – The update action failed.</p></li>  <li>   <p>DELETING – The scaling group is in the process of being deleted.</p></li>  <li>   <p>DELETE_FAILED – The system failed to delete the scaling group.</p></li>  <li>   <p>DELETED – The scaling group is successfully deleted.</p></li> </ul>
    ///   - [`last_modified_timestamp(Option<DateTime>)`](crate::operation::create_kx_scaling_group::CreateKxScalingGroupOutput::last_modified_timestamp): <p>The last time that the scaling group was updated in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::operation::create_kx_scaling_group::CreateKxScalingGroupOutput::created_timestamp): <p>The timestamp at which the scaling group was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    /// - On failure, responds with [`SdkError<CreateKxScalingGroupError>`](crate::operation::create_kx_scaling_group::CreateKxScalingGroupError)
    pub fn create_kx_scaling_group(&self) -> crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder {
        crate::operation::create_kx_scaling_group::builders::CreateKxScalingGroupFluentBuilder::new(self.handle.clone())
    }
}
