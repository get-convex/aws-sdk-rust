// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteKxDataview`](crate::operation::delete_kx_dataview::builders::DeleteKxDataviewFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`environment_id(impl Into<String>)`](crate::operation::delete_kx_dataview::builders::DeleteKxDataviewFluentBuilder::environment_id) / [`set_environment_id(Option<String>)`](crate::operation::delete_kx_dataview::builders::DeleteKxDataviewFluentBuilder::set_environment_id):<br>required: **true**<br><p>A unique identifier for the kdb environment, from where you want to delete the dataview.</p><br>
    ///   - [`database_name(impl Into<String>)`](crate::operation::delete_kx_dataview::builders::DeleteKxDataviewFluentBuilder::database_name) / [`set_database_name(Option<String>)`](crate::operation::delete_kx_dataview::builders::DeleteKxDataviewFluentBuilder::set_database_name):<br>required: **true**<br><p>The name of the database whose dataview you want to delete.</p><br>
    ///   - [`dataview_name(impl Into<String>)`](crate::operation::delete_kx_dataview::builders::DeleteKxDataviewFluentBuilder::dataview_name) / [`set_dataview_name(Option<String>)`](crate::operation::delete_kx_dataview::builders::DeleteKxDataviewFluentBuilder::set_dataview_name):<br>required: **true**<br><p>The name of the dataview that you want to delete.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_kx_dataview::builders::DeleteKxDataviewFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_kx_dataview::builders::DeleteKxDataviewFluentBuilder::set_client_token):<br>required: **true**<br><p>A token that ensures idempotency. This token expires in 10 minutes.</p><br>
    /// - On success, responds with [`DeleteKxDataviewOutput`](crate::operation::delete_kx_dataview::DeleteKxDataviewOutput)
    /// - On failure, responds with [`SdkError<DeleteKxDataviewError>`](crate::operation::delete_kx_dataview::DeleteKxDataviewError)
    pub fn delete_kx_dataview(&self) -> crate::operation::delete_kx_dataview::builders::DeleteKxDataviewFluentBuilder {
        crate::operation::delete_kx_dataview::builders::DeleteKxDataviewFluentBuilder::new(self.handle.clone())
    }
}
