// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteKxScalingGroup`](crate::operation::delete_kx_scaling_group::builders::DeleteKxScalingGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`environment_id(impl Into<String>)`](crate::operation::delete_kx_scaling_group::builders::DeleteKxScalingGroupFluentBuilder::environment_id) / [`set_environment_id(Option<String>)`](crate::operation::delete_kx_scaling_group::builders::DeleteKxScalingGroupFluentBuilder::set_environment_id):<br>required: **true**<br><p>A unique identifier for the kdb environment, from where you want to delete the dataview.</p><br>
    ///   - [`scaling_group_name(impl Into<String>)`](crate::operation::delete_kx_scaling_group::builders::DeleteKxScalingGroupFluentBuilder::scaling_group_name) / [`set_scaling_group_name(Option<String>)`](crate::operation::delete_kx_scaling_group::builders::DeleteKxScalingGroupFluentBuilder::set_scaling_group_name):<br>required: **true**<br><p>A unique identifier for the kdb scaling group.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_kx_scaling_group::builders::DeleteKxScalingGroupFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_kx_scaling_group::builders::DeleteKxScalingGroupFluentBuilder::set_client_token):<br>required: **false**<br><p>A token that ensures idempotency. This token expires in 10 minutes.</p><br>
    /// - On success, responds with [`DeleteKxScalingGroupOutput`](crate::operation::delete_kx_scaling_group::DeleteKxScalingGroupOutput)
    /// - On failure, responds with [`SdkError<DeleteKxScalingGroupError>`](crate::operation::delete_kx_scaling_group::DeleteKxScalingGroupError)
    pub fn delete_kx_scaling_group(&self) -> crate::operation::delete_kx_scaling_group::builders::DeleteKxScalingGroupFluentBuilder {
        crate::operation::delete_kx_scaling_group::builders::DeleteKxScalingGroupFluentBuilder::new(self.handle.clone())
    }
}
