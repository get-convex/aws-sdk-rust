// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AdminDeleteUser`](crate::operation::admin_delete_user::builders::AdminDeleteUserFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_pool_id(impl Into<String>)`](crate::operation::admin_delete_user::builders::AdminDeleteUserFluentBuilder::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::operation::admin_delete_user::builders::AdminDeleteUserFluentBuilder::set_user_pool_id):<br>required: **true**<br><p>The user pool ID for the user pool where you want to delete the user.</p><br>
    ///   - [`username(impl Into<String>)`](crate::operation::admin_delete_user::builders::AdminDeleteUserFluentBuilder::username) / [`set_username(Option<String>)`](crate::operation::admin_delete_user::builders::AdminDeleteUserFluentBuilder::set_username):<br>required: **true**<br><p>The username of the user that you want to query or modify. The value of this parameter is typically your user's username, but it can be any of their alias attributes. If <code>username</code> isn't an alias attribute in your user pool, you can also use their <code>sub</code> in this request.</p><br>
    /// - On success, responds with [`AdminDeleteUserOutput`](crate::operation::admin_delete_user::AdminDeleteUserOutput)
    /// - On failure, responds with [`SdkError<AdminDeleteUserError>`](crate::operation::admin_delete_user::AdminDeleteUserError)
    pub fn admin_delete_user(&self) -> crate::operation::admin_delete_user::builders::AdminDeleteUserFluentBuilder {
        crate::operation::admin_delete_user::builders::AdminDeleteUserFluentBuilder::new(self.handle.clone())
    }
}
