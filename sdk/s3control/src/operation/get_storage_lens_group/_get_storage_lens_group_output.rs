// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetStorageLensGroupOutput {
    /// <p>The name of the Storage Lens group that you're trying to retrieve the configuration details for.</p>
    pub storage_lens_group: ::std::option::Option<crate::types::StorageLensGroup>,
    _request_id: Option<String>,
}
impl GetStorageLensGroupOutput {
    /// <p>The name of the Storage Lens group that you're trying to retrieve the configuration details for.</p>
    pub fn storage_lens_group(&self) -> ::std::option::Option<&crate::types::StorageLensGroup> {
        self.storage_lens_group.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetStorageLensGroupOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetStorageLensGroupOutput {
    /// Creates a new builder-style object to manufacture [`GetStorageLensGroupOutput`](crate::operation::get_storage_lens_group::GetStorageLensGroupOutput).
    pub fn builder() -> crate::operation::get_storage_lens_group::builders::GetStorageLensGroupOutputBuilder {
        crate::operation::get_storage_lens_group::builders::GetStorageLensGroupOutputBuilder::default()
    }
}

/// A builder for [`GetStorageLensGroupOutput`](crate::operation::get_storage_lens_group::GetStorageLensGroupOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetStorageLensGroupOutputBuilder {
    pub(crate) storage_lens_group: ::std::option::Option<crate::types::StorageLensGroup>,
    _request_id: Option<String>,
}
impl GetStorageLensGroupOutputBuilder {
    /// <p>The name of the Storage Lens group that you're trying to retrieve the configuration details for.</p>
    pub fn storage_lens_group(mut self, input: crate::types::StorageLensGroup) -> Self {
        self.storage_lens_group = ::std::option::Option::Some(input);
        self
    }
    /// <p>The name of the Storage Lens group that you're trying to retrieve the configuration details for.</p>
    pub fn set_storage_lens_group(mut self, input: ::std::option::Option<crate::types::StorageLensGroup>) -> Self {
        self.storage_lens_group = input;
        self
    }
    /// <p>The name of the Storage Lens group that you're trying to retrieve the configuration details for.</p>
    pub fn get_storage_lens_group(&self) -> &::std::option::Option<crate::types::StorageLensGroup> {
        &self.storage_lens_group
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetStorageLensGroupOutput`](crate::operation::get_storage_lens_group::GetStorageLensGroupOutput).
    pub fn build(self) -> crate::operation::get_storage_lens_group::GetStorageLensGroupOutput {
        crate::operation::get_storage_lens_group::GetStorageLensGroupOutput {
            storage_lens_group: self.storage_lens_group,
            _request_id: self._request_id,
        }
    }
}
