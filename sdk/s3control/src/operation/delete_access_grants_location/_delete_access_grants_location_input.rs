// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteAccessGrantsLocationInput {
    /// <p>The ID of the Amazon Web Services account that is making this request.</p>
    pub account_id: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the registered location that you are deregistering from your S3 Access Grants instance. S3 Access Grants assigned this ID when you registered the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.</p>
    pub access_grants_location_id: ::std::option::Option<::std::string::String>,
}
impl DeleteAccessGrantsLocationInput {
    /// <p>The ID of the Amazon Web Services account that is making this request.</p>
    pub fn account_id(&self) -> ::std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The ID of the registered location that you are deregistering from your S3 Access Grants instance. S3 Access Grants assigned this ID when you registered the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.</p>
    pub fn access_grants_location_id(&self) -> ::std::option::Option<&str> {
        self.access_grants_location_id.as_deref()
    }
}
impl DeleteAccessGrantsLocationInput {
    /// Creates a new builder-style object to manufacture [`DeleteAccessGrantsLocationInput`](crate::operation::delete_access_grants_location::DeleteAccessGrantsLocationInput).
    pub fn builder() -> crate::operation::delete_access_grants_location::builders::DeleteAccessGrantsLocationInputBuilder {
        crate::operation::delete_access_grants_location::builders::DeleteAccessGrantsLocationInputBuilder::default()
    }
}

/// A builder for [`DeleteAccessGrantsLocationInput`](crate::operation::delete_access_grants_location::DeleteAccessGrantsLocationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteAccessGrantsLocationInputBuilder {
    pub(crate) account_id: ::std::option::Option<::std::string::String>,
    pub(crate) access_grants_location_id: ::std::option::Option<::std::string::String>,
}
impl DeleteAccessGrantsLocationInputBuilder {
    /// <p>The ID of the Amazon Web Services account that is making this request.</p>
    /// This field is required.
    pub fn account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account that is making this request.</p>
    pub fn set_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The ID of the Amazon Web Services account that is making this request.</p>
    pub fn get_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.account_id
    }
    /// <p>The ID of the registered location that you are deregistering from your S3 Access Grants instance. S3 Access Grants assigned this ID when you registered the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.</p>
    /// This field is required.
    pub fn access_grants_location_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.access_grants_location_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the registered location that you are deregistering from your S3 Access Grants instance. S3 Access Grants assigned this ID when you registered the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.</p>
    pub fn set_access_grants_location_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.access_grants_location_id = input;
        self
    }
    /// <p>The ID of the registered location that you are deregistering from your S3 Access Grants instance. S3 Access Grants assigned this ID when you registered the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.</p>
    pub fn get_access_grants_location_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.access_grants_location_id
    }
    /// Consumes the builder and constructs a [`DeleteAccessGrantsLocationInput`](crate::operation::delete_access_grants_location::DeleteAccessGrantsLocationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_access_grants_location::DeleteAccessGrantsLocationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_access_grants_location::DeleteAccessGrantsLocationInput {
            account_id: self.account_id,
            access_grants_location_id: self.access_grants_location_id,
        })
    }
}
