// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListStorageLensGroups`](crate::operation::list_storage_lens_groups::builders::ListStorageLensGroupsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_storage_lens_groups::builders::ListStorageLensGroupsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::operation::list_storage_lens_groups::builders::ListStorageLensGroupsFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::list_storage_lens_groups::builders::ListStorageLensGroupsFluentBuilder::set_account_id):<br>required: **true**<br><p>The Amazon Web Services account ID that owns the Storage Lens groups.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_storage_lens_groups::builders::ListStorageLensGroupsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_storage_lens_groups::builders::ListStorageLensGroupsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next set of results, or <code>null</code> if there are no more results.</p><br>
    /// - On success, responds with [`ListStorageLensGroupsOutput`](crate::operation::list_storage_lens_groups::ListStorageLensGroupsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::list_storage_lens_groups::ListStorageLensGroupsOutput::next_token): <p>If <code>NextToken</code> is returned, there are more Storage Lens groups results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours.</p>
    ///   - [`storage_lens_group_list(Option<Vec::<ListStorageLensGroupEntry>>)`](crate::operation::list_storage_lens_groups::ListStorageLensGroupsOutput::storage_lens_group_list): <p>The list of Storage Lens groups that exist in the specified home Region.</p>
    /// - On failure, responds with [`SdkError<ListStorageLensGroupsError>`](crate::operation::list_storage_lens_groups::ListStorageLensGroupsError)
    pub fn list_storage_lens_groups(&self) -> crate::operation::list_storage_lens_groups::builders::ListStorageLensGroupsFluentBuilder {
        crate::operation::list_storage_lens_groups::builders::ListStorageLensGroupsFluentBuilder::new(self.handle.clone())
    }
}
