// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateStorageLensGroup`](crate::operation::update_storage_lens_group::builders::UpdateStorageLensGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::update_storage_lens_group::builders::UpdateStorageLensGroupFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_storage_lens_group::builders::UpdateStorageLensGroupFluentBuilder::set_name):<br>required: **true**<br><p>The name of the Storage Lens group that you want to update.</p><br>
    ///   - [`account_id(impl Into<String>)`](crate::operation::update_storage_lens_group::builders::UpdateStorageLensGroupFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::update_storage_lens_group::builders::UpdateStorageLensGroupFluentBuilder::set_account_id):<br>required: **true**<br><p>The Amazon Web Services account ID of the Storage Lens group owner.</p><br>
    ///   - [`storage_lens_group(StorageLensGroup)`](crate::operation::update_storage_lens_group::builders::UpdateStorageLensGroupFluentBuilder::storage_lens_group) / [`set_storage_lens_group(Option<StorageLensGroup>)`](crate::operation::update_storage_lens_group::builders::UpdateStorageLensGroupFluentBuilder::set_storage_lens_group):<br>required: **true**<br><p>The JSON file that contains the Storage Lens group configuration.</p><br>
    /// - On success, responds with [`UpdateStorageLensGroupOutput`](crate::operation::update_storage_lens_group::UpdateStorageLensGroupOutput)
    /// - On failure, responds with [`SdkError<UpdateStorageLensGroupError>`](crate::operation::update_storage_lens_group::UpdateStorageLensGroupError)
    pub fn update_storage_lens_group(&self) -> crate::operation::update_storage_lens_group::builders::UpdateStorageLensGroupFluentBuilder {
        crate::operation::update_storage_lens_group::builders::UpdateStorageLensGroupFluentBuilder::new(self.handle.clone())
    }
}
