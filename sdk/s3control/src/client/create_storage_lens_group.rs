// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateStorageLensGroup`](crate::operation::create_storage_lens_group::builders::CreateStorageLensGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::operation::create_storage_lens_group::builders::CreateStorageLensGroupFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::create_storage_lens_group::builders::CreateStorageLensGroupFluentBuilder::set_account_id):<br>required: **true**<br><p>The Amazon Web Services account ID that the Storage Lens group is created from and associated with.</p><br>
    ///   - [`storage_lens_group(StorageLensGroup)`](crate::operation::create_storage_lens_group::builders::CreateStorageLensGroupFluentBuilder::storage_lens_group) / [`set_storage_lens_group(Option<StorageLensGroup>)`](crate::operation::create_storage_lens_group::builders::CreateStorageLensGroupFluentBuilder::set_storage_lens_group):<br>required: **true**<br><p>The Storage Lens group configuration.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_storage_lens_group::builders::CreateStorageLensGroupFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_storage_lens_group::builders::CreateStorageLensGroupFluentBuilder::set_tags):<br>required: **false**<br><p>The Amazon Web Services resource tags that you're adding to your Storage Lens group. This parameter is optional.</p><br>
    /// - On success, responds with [`CreateStorageLensGroupOutput`](crate::operation::create_storage_lens_group::CreateStorageLensGroupOutput)
    /// - On failure, responds with [`SdkError<CreateStorageLensGroupError>`](crate::operation::create_storage_lens_group::CreateStorageLensGroupError)
    pub fn create_storage_lens_group(&self) -> crate::operation::create_storage_lens_group::builders::CreateStorageLensGroupFluentBuilder {
        crate::operation::create_storage_lens_group::builders::CreateStorageLensGroupFluentBuilder::new(self.handle.clone())
    }
}
