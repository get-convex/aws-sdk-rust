// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteAccessGrantsLocation`](crate::operation::delete_access_grants_location::builders::DeleteAccessGrantsLocationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::operation::delete_access_grants_location::builders::DeleteAccessGrantsLocationFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::delete_access_grants_location::builders::DeleteAccessGrantsLocationFluentBuilder::set_account_id):<br>required: **true**<br><p>The ID of the Amazon Web Services account that is making this request.</p><br>
    ///   - [`access_grants_location_id(impl Into<String>)`](crate::operation::delete_access_grants_location::builders::DeleteAccessGrantsLocationFluentBuilder::access_grants_location_id) / [`set_access_grants_location_id(Option<String>)`](crate::operation::delete_access_grants_location::builders::DeleteAccessGrantsLocationFluentBuilder::set_access_grants_location_id):<br>required: **true**<br><p>The ID of the registered location that you are deregistering from your S3 Access Grants instance. S3 Access Grants assigned this ID when you registered the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.</p><br>
    /// - On success, responds with [`DeleteAccessGrantsLocationOutput`](crate::operation::delete_access_grants_location::DeleteAccessGrantsLocationOutput)
    /// - On failure, responds with [`SdkError<DeleteAccessGrantsLocationError>`](crate::operation::delete_access_grants_location::DeleteAccessGrantsLocationError)
    pub fn delete_access_grants_location(
        &self,
    ) -> crate::operation::delete_access_grants_location::builders::DeleteAccessGrantsLocationFluentBuilder {
        crate::operation::delete_access_grants_location::builders::DeleteAccessGrantsLocationFluentBuilder::new(self.handle.clone())
    }
}
