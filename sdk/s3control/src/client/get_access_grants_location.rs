// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetAccessGrantsLocation`](crate::operation::get_access_grants_location::builders::GetAccessGrantsLocationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::operation::get_access_grants_location::builders::GetAccessGrantsLocationFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::get_access_grants_location::builders::GetAccessGrantsLocationFluentBuilder::set_account_id):<br>required: **true**<br><p>The ID of the Amazon Web Services account that is making this request.</p><br>
    ///   - [`access_grants_location_id(impl Into<String>)`](crate::operation::get_access_grants_location::builders::GetAccessGrantsLocationFluentBuilder::access_grants_location_id) / [`set_access_grants_location_id(Option<String>)`](crate::operation::get_access_grants_location::builders::GetAccessGrantsLocationFluentBuilder::set_access_grants_location_id):<br>required: **true**<br><p>The ID of the registered location that you are retrieving. S3 Access Grants assigns this ID when you register the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.</p><br>
    /// - On success, responds with [`GetAccessGrantsLocationOutput`](crate::operation::get_access_grants_location::GetAccessGrantsLocationOutput) with field(s):
    ///   - [`created_at(Option<DateTime>)`](crate::operation::get_access_grants_location::GetAccessGrantsLocationOutput::created_at): <p>The date and time when you registered the location.</p>
    ///   - [`access_grants_location_id(Option<String>)`](crate::operation::get_access_grants_location::GetAccessGrantsLocationOutput::access_grants_location_id): <p>The ID of the registered location to which you are granting access. S3 Access Grants assigns this ID when you register the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.</p>
    ///   - [`access_grants_location_arn(Option<String>)`](crate::operation::get_access_grants_location::GetAccessGrantsLocationOutput::access_grants_location_arn): <p>The Amazon Resource Name (ARN) of the registered location.</p>
    ///   - [`location_scope(Option<String>)`](crate::operation::get_access_grants_location::GetAccessGrantsLocationOutput::location_scope): <p>The S3 URI path to the registered location. The location scope can be the default S3 location <code>s3://</code>, the S3 path to a bucket, or the S3 path to a bucket and prefix. A prefix in S3 is a string of characters at the beginning of an object key name used to organize the objects that you store in your S3 buckets. For example, object key names that start with the <code>engineering/</code> prefix or object key names that start with the <code>marketing/campaigns/</code> prefix.</p>
    ///   - [`iam_role_arn(Option<String>)`](crate::operation::get_access_grants_location::GetAccessGrantsLocationOutput::iam_role_arn): <p>The Amazon Resource Name (ARN) of the IAM role for the registered location. S3 Access Grants assumes this role to manage access to the registered location.</p>
    /// - On failure, responds with [`SdkError<GetAccessGrantsLocationError>`](crate::operation::get_access_grants_location::GetAccessGrantsLocationError)
    pub fn get_access_grants_location(&self) -> crate::operation::get_access_grants_location::builders::GetAccessGrantsLocationFluentBuilder {
        crate::operation::get_access_grants_location::builders::GetAccessGrantsLocationFluentBuilder::new(self.handle.clone())
    }
}
