// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_list_access_grant_entry(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::ListAccessGrantEntry, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::ListAccessGrantEntry::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("CreatedAt") /* CreatedAt com.amazonaws.s3control#ListAccessGrantEntry$CreatedAt */ =>  {
                let var_1 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.s3control#CreationTimestamp`)"))
                        ?
                    )
                ;
                builder = builder.set_created_at(var_1);
            }
            ,
            s if s.matches("AccessGrantId") /* AccessGrantId com.amazonaws.s3control#ListAccessGrantEntry$AccessGrantId */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_access_grant_id(var_2);
            }
            ,
            s if s.matches("AccessGrantArn") /* AccessGrantArn com.amazonaws.s3control#ListAccessGrantEntry$AccessGrantArn */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_access_grant_arn(var_3);
            }
            ,
            s if s.matches("Grantee") /* Grantee com.amazonaws.s3control#ListAccessGrantEntry$Grantee */ =>  {
                let var_4 =
                    Some(
                        crate::protocol_serde::shape_grantee::de_grantee(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_grantee(var_4);
            }
            ,
            s if s.matches("Permission") /* Permission com.amazonaws.s3control#ListAccessGrantEntry$Permission */ =>  {
                let var_5 =
                    Some(
                        Result::<crate::types::Permission, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::Permission::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_permission(var_5);
            }
            ,
            s if s.matches("AccessGrantsLocationId") /* AccessGrantsLocationId com.amazonaws.s3control#ListAccessGrantEntry$AccessGrantsLocationId */ =>  {
                let var_6 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_access_grants_location_id(var_6);
            }
            ,
            s if s.matches("AccessGrantsLocationConfiguration") /* AccessGrantsLocationConfiguration com.amazonaws.s3control#ListAccessGrantEntry$AccessGrantsLocationConfiguration */ =>  {
                let var_7 =
                    Some(
                        crate::protocol_serde::shape_access_grants_location_configuration::de_access_grants_location_configuration(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_access_grants_location_configuration(var_7);
            }
            ,
            s if s.matches("GrantScope") /* GrantScope com.amazonaws.s3control#ListAccessGrantEntry$GrantScope */ =>  {
                let var_8 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_grant_scope(var_8);
            }
            ,
            s if s.matches("ApplicationArn") /* ApplicationArn com.amazonaws.s3control#ListAccessGrantEntry$ApplicationArn */ =>  {
                let var_9 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_application_arn(var_9);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
