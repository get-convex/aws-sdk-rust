// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReleaseSenderIdInput {
    /// <p>The sender ID to release.</p>
    pub sender_id: ::std::option::Option<::std::string::String>,
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.</p>
    pub iso_country_code: ::std::option::Option<::std::string::String>,
}
impl ReleaseSenderIdInput {
    /// <p>The sender ID to release.</p>
    pub fn sender_id(&self) -> ::std::option::Option<&str> {
        self.sender_id.as_deref()
    }
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.</p>
    pub fn iso_country_code(&self) -> ::std::option::Option<&str> {
        self.iso_country_code.as_deref()
    }
}
impl ReleaseSenderIdInput {
    /// Creates a new builder-style object to manufacture [`ReleaseSenderIdInput`](crate::operation::release_sender_id::ReleaseSenderIdInput).
    pub fn builder() -> crate::operation::release_sender_id::builders::ReleaseSenderIdInputBuilder {
        crate::operation::release_sender_id::builders::ReleaseSenderIdInputBuilder::default()
    }
}

/// A builder for [`ReleaseSenderIdInput`](crate::operation::release_sender_id::ReleaseSenderIdInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ReleaseSenderIdInputBuilder {
    pub(crate) sender_id: ::std::option::Option<::std::string::String>,
    pub(crate) iso_country_code: ::std::option::Option<::std::string::String>,
}
impl ReleaseSenderIdInputBuilder {
    /// <p>The sender ID to release.</p>
    /// This field is required.
    pub fn sender_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sender_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The sender ID to release.</p>
    pub fn set_sender_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sender_id = input;
        self
    }
    /// <p>The sender ID to release.</p>
    pub fn get_sender_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.sender_id
    }
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.</p>
    /// This field is required.
    pub fn iso_country_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.iso_country_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.</p>
    pub fn set_iso_country_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.iso_country_code = input;
        self
    }
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.</p>
    pub fn get_iso_country_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.iso_country_code
    }
    /// Consumes the builder and constructs a [`ReleaseSenderIdInput`](crate::operation::release_sender_id::ReleaseSenderIdInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::release_sender_id::ReleaseSenderIdInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::release_sender_id::ReleaseSenderIdInput {
            sender_id: self.sender_id,
            iso_country_code: self.iso_country_code,
        })
    }
}
