// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A description of each select option.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SelectOptionDescription {
    /// <p>The value of the option.</p>
    pub option: ::std::string::String,
    /// <p>The title of the select option.</p>
    pub title: ::std::option::Option<::std::string::String>,
    /// <p>A description of the option meaning.</p>
    pub description: ::std::option::Option<::std::string::String>,
}
impl SelectOptionDescription {
    /// <p>The value of the option.</p>
    pub fn option(&self) -> &str {
        use std::ops::Deref;
        self.option.deref()
    }
    /// <p>The title of the select option.</p>
    pub fn title(&self) -> ::std::option::Option<&str> {
        self.title.as_deref()
    }
    /// <p>A description of the option meaning.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl SelectOptionDescription {
    /// Creates a new builder-style object to manufacture [`SelectOptionDescription`](crate::types::SelectOptionDescription).
    pub fn builder() -> crate::types::builders::SelectOptionDescriptionBuilder {
        crate::types::builders::SelectOptionDescriptionBuilder::default()
    }
}

/// A builder for [`SelectOptionDescription`](crate::types::SelectOptionDescription).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SelectOptionDescriptionBuilder {
    pub(crate) option: ::std::option::Option<::std::string::String>,
    pub(crate) title: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
}
impl SelectOptionDescriptionBuilder {
    /// <p>The value of the option.</p>
    /// This field is required.
    pub fn option(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.option = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The value of the option.</p>
    pub fn set_option(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.option = input;
        self
    }
    /// <p>The value of the option.</p>
    pub fn get_option(&self) -> &::std::option::Option<::std::string::String> {
        &self.option
    }
    /// <p>The title of the select option.</p>
    pub fn title(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.title = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The title of the select option.</p>
    pub fn set_title(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.title = input;
        self
    }
    /// <p>The title of the select option.</p>
    pub fn get_title(&self) -> &::std::option::Option<::std::string::String> {
        &self.title
    }
    /// <p>A description of the option meaning.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A description of the option meaning.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>A description of the option meaning.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Consumes the builder and constructs a [`SelectOptionDescription`](crate::types::SelectOptionDescription).
    /// This method will fail if any of the following fields are not set:
    /// - [`option`](crate::types::builders::SelectOptionDescriptionBuilder::option)
    pub fn build(self) -> ::std::result::Result<crate::types::SelectOptionDescription, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SelectOptionDescription {
            option: self.option.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "option",
                    "option was not specified but it is required when building SelectOptionDescription",
                )
            })?,
            title: self.title,
            description: self.description,
        })
    }
}
