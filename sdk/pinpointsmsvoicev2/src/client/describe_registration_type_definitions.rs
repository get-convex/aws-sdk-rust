// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeRegistrationTypeDefinitions`](crate::operation::describe_registration_type_definitions::builders::DescribeRegistrationTypeDefinitionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_registration_type_definitions::builders::DescribeRegistrationTypeDefinitionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`registration_types(impl Into<String>)`](crate::operation::describe_registration_type_definitions::builders::DescribeRegistrationTypeDefinitionsFluentBuilder::registration_types) / [`set_registration_types(Option<Vec::<String>>)`](crate::operation::describe_registration_type_definitions::builders::DescribeRegistrationTypeDefinitionsFluentBuilder::set_registration_types):<br>required: **false**<br><p>The type of registration form. The list of <b>RegistrationTypes</b> can be found using the <code>DescribeRegistrationTypeDefinitions</code> action.</p><br>
    ///   - [`filters(RegistrationTypeFilter)`](crate::operation::describe_registration_type_definitions::builders::DescribeRegistrationTypeDefinitionsFluentBuilder::filters) / [`set_filters(Option<Vec::<RegistrationTypeFilter>>)`](crate::operation::describe_registration_type_definitions::builders::DescribeRegistrationTypeDefinitionsFluentBuilder::set_filters):<br>required: **false**<br><p>An array of RegistrationFilter objects to filter the results.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_registration_type_definitions::builders::DescribeRegistrationTypeDefinitionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_registration_type_definitions::builders::DescribeRegistrationTypeDefinitionsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p><br>
    ///   - [`max_results(i32)`](crate::operation::describe_registration_type_definitions::builders::DescribeRegistrationTypeDefinitionsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_registration_type_definitions::builders::DescribeRegistrationTypeDefinitionsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return per each request.</p><br>
    /// - On success, responds with [`DescribeRegistrationTypeDefinitionsOutput`](crate::operation::describe_registration_type_definitions::DescribeRegistrationTypeDefinitionsOutput) with field(s):
    ///   - [`registration_type_definitions(Vec::<RegistrationTypeDefinition>)`](crate::operation::describe_registration_type_definitions::DescribeRegistrationTypeDefinitionsOutput::registration_type_definitions): <p>The type of registration form. The list of <b>RegistrationTypes</b> can be found using the <code>DescribeRegistrationTypeDefinitions</code> action.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_registration_type_definitions::DescribeRegistrationTypeDefinitionsOutput::next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    /// - On failure, responds with [`SdkError<DescribeRegistrationTypeDefinitionsError>`](crate::operation::describe_registration_type_definitions::DescribeRegistrationTypeDefinitionsError)
    pub fn describe_registration_type_definitions(
        &self,
    ) -> crate::operation::describe_registration_type_definitions::builders::DescribeRegistrationTypeDefinitionsFluentBuilder {
        crate::operation::describe_registration_type_definitions::builders::DescribeRegistrationTypeDefinitionsFluentBuilder::new(self.handle.clone())
    }
}
