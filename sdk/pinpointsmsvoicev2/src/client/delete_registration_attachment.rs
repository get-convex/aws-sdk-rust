// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteRegistrationAttachment`](crate::operation::delete_registration_attachment::builders::DeleteRegistrationAttachmentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`registration_attachment_id(impl Into<String>)`](crate::operation::delete_registration_attachment::builders::DeleteRegistrationAttachmentFluentBuilder::registration_attachment_id) / [`set_registration_attachment_id(Option<String>)`](crate::operation::delete_registration_attachment::builders::DeleteRegistrationAttachmentFluentBuilder::set_registration_attachment_id):<br>required: **true**<br><p>The unique identifier for the registration attachment.</p><br>
    /// - On success, responds with [`DeleteRegistrationAttachmentOutput`](crate::operation::delete_registration_attachment::DeleteRegistrationAttachmentOutput) with field(s):
    ///   - [`registration_attachment_arn(String)`](crate::operation::delete_registration_attachment::DeleteRegistrationAttachmentOutput::registration_attachment_arn): <p>The Amazon Resource Name (ARN) for the registration attachment.</p>
    ///   - [`registration_attachment_id(String)`](crate::operation::delete_registration_attachment::DeleteRegistrationAttachmentOutput::registration_attachment_id): <p>The unique identifier for the registration attachment.</p>
    ///   - [`attachment_status(AttachmentStatus)`](crate::operation::delete_registration_attachment::DeleteRegistrationAttachmentOutput::attachment_status): <p>The status of the registration attachment.</p> <ul>  <li>   <p><code>UPLOAD_IN_PROGRESS</code> The attachment is being uploaded.</p></li>  <li>   <p><code>UPLOAD_COMPLETE</code> The attachment has been uploaded.</p></li>  <li>   <p><code>UPLOAD_FAILED</code> The attachment failed to uploaded.</p></li>  <li>   <p><code>DELETED</code> The attachment has been deleted..</p></li> </ul>
    ///   - [`attachment_upload_error_reason(Option<AttachmentUploadErrorReason>)`](crate::operation::delete_registration_attachment::DeleteRegistrationAttachmentOutput::attachment_upload_error_reason): <p>The error message if the upload failed.</p>
    ///   - [`created_timestamp(DateTime)`](crate::operation::delete_registration_attachment::DeleteRegistrationAttachmentOutput::created_timestamp): <p>The time when the registration attachment was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// - On failure, responds with [`SdkError<DeleteRegistrationAttachmentError>`](crate::operation::delete_registration_attachment::DeleteRegistrationAttachmentError)
    pub fn delete_registration_attachment(
        &self,
    ) -> crate::operation::delete_registration_attachment::builders::DeleteRegistrationAttachmentFluentBuilder {
        crate::operation::delete_registration_attachment::builders::DeleteRegistrationAttachmentFluentBuilder::new(self.handle.clone())
    }
}
