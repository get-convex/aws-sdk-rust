// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteRegistration`](crate::operation::delete_registration::builders::DeleteRegistrationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`registration_id(impl Into<String>)`](crate::operation::delete_registration::builders::DeleteRegistrationFluentBuilder::registration_id) / [`set_registration_id(Option<String>)`](crate::operation::delete_registration::builders::DeleteRegistrationFluentBuilder::set_registration_id):<br>required: **true**<br><p>The unique identifier for the registration.</p><br>
    /// - On success, responds with [`DeleteRegistrationOutput`](crate::operation::delete_registration::DeleteRegistrationOutput) with field(s):
    ///   - [`registration_arn(String)`](crate::operation::delete_registration::DeleteRegistrationOutput::registration_arn): <p>The Amazon Resource Name (ARN) for the registration.</p>
    ///   - [`registration_id(String)`](crate::operation::delete_registration::DeleteRegistrationOutput::registration_id): <p>The unique identifier for the registration.</p>
    ///   - [`registration_type(String)`](crate::operation::delete_registration::DeleteRegistrationOutput::registration_type): <p>The type of registration form. The list of <b>RegistrationTypes</b> can be found using the <code>DescribeRegistrationTypeDefinitions</code> action.</p>
    ///   - [`registration_status(RegistrationStatus)`](crate::operation::delete_registration::DeleteRegistrationOutput::registration_status): <p>The status of the registration.</p> <ul>  <li>   <p><code>CREATED</code>: Your registration is created but not submitted.</p></li>  <li>   <p><code>SUBMITTED</code>: Your registration has been submitted and is awaiting review.</p></li>  <li>   <p><code>REVIEWING</code>: Your registration has been accepted and is being reviewed.</p></li>  <li>   <p><code>PROVISIONING</code>: Your registration has been approved and your origination identity is being created.</p></li>  <li>   <p><code>COMPLETE</code>: Your registration has been approved and and your origination identity has been created.</p></li>  <li>   <p><code>REQUIRES_UPDATES</code>: You must fix your registration and resubmit it.</p></li>  <li>   <p><code>CLOSED</code>: The phone number or sender ID has been deleted and you must also delete the registration for the number.</p></li>  <li>   <p><code>DELETED</code>: The registration has been deleted.</p></li> </ul>
    ///   - [`current_version_number(i64)`](crate::operation::delete_registration::DeleteRegistrationOutput::current_version_number): <p>The current version number of the registration.</p>
    ///   - [`approved_version_number(Option<i64>)`](crate::operation::delete_registration::DeleteRegistrationOutput::approved_version_number): <p>The version number of the registration that was approved.</p>
    ///   - [`latest_denied_version_number(Option<i64>)`](crate::operation::delete_registration::DeleteRegistrationOutput::latest_denied_version_number): <p>The latest version number of the registration that was denied.</p>
    ///   - [`additional_attributes(Option<HashMap::<String, String>>)`](crate::operation::delete_registration::DeleteRegistrationOutput::additional_attributes): <p>Metadata about a given registration which is specific to that registration type.</p>
    ///   - [`created_timestamp(DateTime)`](crate::operation::delete_registration::DeleteRegistrationOutput::created_timestamp): <p>The time when the registration was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// - On failure, responds with [`SdkError<DeleteRegistrationError>`](crate::operation::delete_registration::DeleteRegistrationError)
    pub fn delete_registration(&self) -> crate::operation::delete_registration::builders::DeleteRegistrationFluentBuilder {
        crate::operation::delete_registration::builders::DeleteRegistrationFluentBuilder::new(self.handle.clone())
    }
}
