// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateInvestigationStateInput {
    /// <p>The ARN of the behavior graph.</p>
    pub graph_arn: ::std::option::Option<::std::string::String>,
    /// <p>The investigation ID of the investigation report.</p>
    pub investigation_id: ::std::option::Option<::std::string::String>,
    /// <p>The current state of the investigation. An archived investigation indicates you have completed reviewing the investigation.</p>
    pub state: ::std::option::Option<crate::types::State>,
}
impl UpdateInvestigationStateInput {
    /// <p>The ARN of the behavior graph.</p>
    pub fn graph_arn(&self) -> ::std::option::Option<&str> {
        self.graph_arn.as_deref()
    }
    /// <p>The investigation ID of the investigation report.</p>
    pub fn investigation_id(&self) -> ::std::option::Option<&str> {
        self.investigation_id.as_deref()
    }
    /// <p>The current state of the investigation. An archived investigation indicates you have completed reviewing the investigation.</p>
    pub fn state(&self) -> ::std::option::Option<&crate::types::State> {
        self.state.as_ref()
    }
}
impl UpdateInvestigationStateInput {
    /// Creates a new builder-style object to manufacture [`UpdateInvestigationStateInput`](crate::operation::update_investigation_state::UpdateInvestigationStateInput).
    pub fn builder() -> crate::operation::update_investigation_state::builders::UpdateInvestigationStateInputBuilder {
        crate::operation::update_investigation_state::builders::UpdateInvestigationStateInputBuilder::default()
    }
}

/// A builder for [`UpdateInvestigationStateInput`](crate::operation::update_investigation_state::UpdateInvestigationStateInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateInvestigationStateInputBuilder {
    pub(crate) graph_arn: ::std::option::Option<::std::string::String>,
    pub(crate) investigation_id: ::std::option::Option<::std::string::String>,
    pub(crate) state: ::std::option::Option<crate::types::State>,
}
impl UpdateInvestigationStateInputBuilder {
    /// <p>The ARN of the behavior graph.</p>
    /// This field is required.
    pub fn graph_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.graph_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the behavior graph.</p>
    pub fn set_graph_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.graph_arn = input;
        self
    }
    /// <p>The ARN of the behavior graph.</p>
    pub fn get_graph_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.graph_arn
    }
    /// <p>The investigation ID of the investigation report.</p>
    /// This field is required.
    pub fn investigation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.investigation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The investigation ID of the investigation report.</p>
    pub fn set_investigation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.investigation_id = input;
        self
    }
    /// <p>The investigation ID of the investigation report.</p>
    pub fn get_investigation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.investigation_id
    }
    /// <p>The current state of the investigation. An archived investigation indicates you have completed reviewing the investigation.</p>
    /// This field is required.
    pub fn state(mut self, input: crate::types::State) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current state of the investigation. An archived investigation indicates you have completed reviewing the investigation.</p>
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::State>) -> Self {
        self.state = input;
        self
    }
    /// <p>The current state of the investigation. An archived investigation indicates you have completed reviewing the investigation.</p>
    pub fn get_state(&self) -> &::std::option::Option<crate::types::State> {
        &self.state
    }
    /// Consumes the builder and constructs a [`UpdateInvestigationStateInput`](crate::operation::update_investigation_state::UpdateInvestigationStateInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_investigation_state::UpdateInvestigationStateInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_investigation_state::UpdateInvestigationStateInput {
            graph_arn: self.graph_arn,
            investigation_id: self.investigation_id,
            state: self.state,
        })
    }
}
