// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details new Autonomous System Organizations (ASOs) used either at the resource or account level.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NewAsoDetail {
    /// <p>Details about the new Autonomous System Organization (ASO).</p>
    pub aso: ::std::option::Option<::std::string::String>,
    /// <p>Checks if the ASO is for new for the entire account.</p>
    pub is_new_for_entire_account: bool,
}
impl NewAsoDetail {
    /// <p>Details about the new Autonomous System Organization (ASO).</p>
    pub fn aso(&self) -> ::std::option::Option<&str> {
        self.aso.as_deref()
    }
    /// <p>Checks if the ASO is for new for the entire account.</p>
    pub fn is_new_for_entire_account(&self) -> bool {
        self.is_new_for_entire_account
    }
}
impl NewAsoDetail {
    /// Creates a new builder-style object to manufacture [`NewAsoDetail`](crate::types::NewAsoDetail).
    pub fn builder() -> crate::types::builders::NewAsoDetailBuilder {
        crate::types::builders::NewAsoDetailBuilder::default()
    }
}

/// A builder for [`NewAsoDetail`](crate::types::NewAsoDetail).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct NewAsoDetailBuilder {
    pub(crate) aso: ::std::option::Option<::std::string::String>,
    pub(crate) is_new_for_entire_account: ::std::option::Option<bool>,
}
impl NewAsoDetailBuilder {
    /// <p>Details about the new Autonomous System Organization (ASO).</p>
    pub fn aso(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.aso = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Details about the new Autonomous System Organization (ASO).</p>
    pub fn set_aso(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.aso = input;
        self
    }
    /// <p>Details about the new Autonomous System Organization (ASO).</p>
    pub fn get_aso(&self) -> &::std::option::Option<::std::string::String> {
        &self.aso
    }
    /// <p>Checks if the ASO is for new for the entire account.</p>
    pub fn is_new_for_entire_account(mut self, input: bool) -> Self {
        self.is_new_for_entire_account = ::std::option::Option::Some(input);
        self
    }
    /// <p>Checks if the ASO is for new for the entire account.</p>
    pub fn set_is_new_for_entire_account(mut self, input: ::std::option::Option<bool>) -> Self {
        self.is_new_for_entire_account = input;
        self
    }
    /// <p>Checks if the ASO is for new for the entire account.</p>
    pub fn get_is_new_for_entire_account(&self) -> &::std::option::Option<bool> {
        &self.is_new_for_entire_account
    }
    /// Consumes the builder and constructs a [`NewAsoDetail`](crate::types::NewAsoDetail).
    pub fn build(self) -> crate::types::NewAsoDetail {
        crate::types::NewAsoDetail {
            aso: self.aso,
            is_new_for_entire_account: self.is_new_for_entire_account.unwrap_or_default(),
        }
    }
}
