// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details new user agents used either at the resource or account level.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NewUserAgentDetail {
    /// <p>New user agent which accessed the resource.</p>
    pub user_agent: ::std::option::Option<::std::string::String>,
    /// <p>Checks if the user agent is new for the entire account.</p>
    pub is_new_for_entire_account: bool,
}
impl NewUserAgentDetail {
    /// <p>New user agent which accessed the resource.</p>
    pub fn user_agent(&self) -> ::std::option::Option<&str> {
        self.user_agent.as_deref()
    }
    /// <p>Checks if the user agent is new for the entire account.</p>
    pub fn is_new_for_entire_account(&self) -> bool {
        self.is_new_for_entire_account
    }
}
impl NewUserAgentDetail {
    /// Creates a new builder-style object to manufacture [`NewUserAgentDetail`](crate::types::NewUserAgentDetail).
    pub fn builder() -> crate::types::builders::NewUserAgentDetailBuilder {
        crate::types::builders::NewUserAgentDetailBuilder::default()
    }
}

/// A builder for [`NewUserAgentDetail`](crate::types::NewUserAgentDetail).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct NewUserAgentDetailBuilder {
    pub(crate) user_agent: ::std::option::Option<::std::string::String>,
    pub(crate) is_new_for_entire_account: ::std::option::Option<bool>,
}
impl NewUserAgentDetailBuilder {
    /// <p>New user agent which accessed the resource.</p>
    pub fn user_agent(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.user_agent = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>New user agent which accessed the resource.</p>
    pub fn set_user_agent(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.user_agent = input;
        self
    }
    /// <p>New user agent which accessed the resource.</p>
    pub fn get_user_agent(&self) -> &::std::option::Option<::std::string::String> {
        &self.user_agent
    }
    /// <p>Checks if the user agent is new for the entire account.</p>
    pub fn is_new_for_entire_account(mut self, input: bool) -> Self {
        self.is_new_for_entire_account = ::std::option::Option::Some(input);
        self
    }
    /// <p>Checks if the user agent is new for the entire account.</p>
    pub fn set_is_new_for_entire_account(mut self, input: ::std::option::Option<bool>) -> Self {
        self.is_new_for_entire_account = input;
        self
    }
    /// <p>Checks if the user agent is new for the entire account.</p>
    pub fn get_is_new_for_entire_account(&self) -> &::std::option::Option<bool> {
        &self.is_new_for_entire_account
    }
    /// Consumes the builder and constructs a [`NewUserAgentDetail`](crate::types::NewUserAgentDetail).
    pub fn build(self) -> crate::types::NewUserAgentDetail {
        crate::types::NewUserAgentDetail {
            user_agent: self.user_agent,
            is_new_for_entire_account: self.is_new_for_entire_account.unwrap_or_default(),
        }
    }
}
