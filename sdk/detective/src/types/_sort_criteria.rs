// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the criteria used for sorting investigations.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SortCriteria {
    /// <p>Represents the <code>Field</code> attribute to sort investigations.</p>
    pub field: ::std::option::Option<crate::types::Field>,
    /// <p>The order by which the sorted findings are displayed.</p>
    pub sort_order: ::std::option::Option<crate::types::SortOrder>,
}
impl SortCriteria {
    /// <p>Represents the <code>Field</code> attribute to sort investigations.</p>
    pub fn field(&self) -> ::std::option::Option<&crate::types::Field> {
        self.field.as_ref()
    }
    /// <p>The order by which the sorted findings are displayed.</p>
    pub fn sort_order(&self) -> ::std::option::Option<&crate::types::SortOrder> {
        self.sort_order.as_ref()
    }
}
impl SortCriteria {
    /// Creates a new builder-style object to manufacture [`SortCriteria`](crate::types::SortCriteria).
    pub fn builder() -> crate::types::builders::SortCriteriaBuilder {
        crate::types::builders::SortCriteriaBuilder::default()
    }
}

/// A builder for [`SortCriteria`](crate::types::SortCriteria).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SortCriteriaBuilder {
    pub(crate) field: ::std::option::Option<crate::types::Field>,
    pub(crate) sort_order: ::std::option::Option<crate::types::SortOrder>,
}
impl SortCriteriaBuilder {
    /// <p>Represents the <code>Field</code> attribute to sort investigations.</p>
    pub fn field(mut self, input: crate::types::Field) -> Self {
        self.field = ::std::option::Option::Some(input);
        self
    }
    /// <p>Represents the <code>Field</code> attribute to sort investigations.</p>
    pub fn set_field(mut self, input: ::std::option::Option<crate::types::Field>) -> Self {
        self.field = input;
        self
    }
    /// <p>Represents the <code>Field</code> attribute to sort investigations.</p>
    pub fn get_field(&self) -> &::std::option::Option<crate::types::Field> {
        &self.field
    }
    /// <p>The order by which the sorted findings are displayed.</p>
    pub fn sort_order(mut self, input: crate::types::SortOrder) -> Self {
        self.sort_order = ::std::option::Option::Some(input);
        self
    }
    /// <p>The order by which the sorted findings are displayed.</p>
    pub fn set_sort_order(mut self, input: ::std::option::Option<crate::types::SortOrder>) -> Self {
        self.sort_order = input;
        self
    }
    /// <p>The order by which the sorted findings are displayed.</p>
    pub fn get_sort_order(&self) -> &::std::option::Option<crate::types::SortOrder> {
        &self.sort_order
    }
    /// Consumes the builder and constructs a [`SortCriteria`](crate::types::SortCriteria).
    pub fn build(self) -> crate::types::SortCriteria {
        crate::types::SortCriteria {
            field: self.field,
            sort_order: self.sort_order,
        }
    }
}
