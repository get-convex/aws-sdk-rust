// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateEnvironment`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_id):<br>required: **true**<br><p>The ID of the environment to update.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_name):<br>required: **false**<br><p>The name of the environment to update.</p><br>
    ///   - [`desktop_arn(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::desktop_arn) / [`set_desktop_arn(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_desktop_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the desktop to stream from Amazon WorkSpaces, WorkSpaces Web, or AppStream 2.0.</p><br>
    ///   - [`desktop_endpoint(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::desktop_endpoint) / [`set_desktop_endpoint(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_desktop_endpoint):<br>required: **false**<br><p>The URL for the identity provider login (only for environments that use AppStream 2.0).</p><br>
    ///   - [`software_set_update_schedule(SoftwareSetUpdateSchedule)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::software_set_update_schedule) / [`set_software_set_update_schedule(Option<SoftwareSetUpdateSchedule>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_software_set_update_schedule):<br>required: **false**<br><p>An option to define if software updates should be applied within a maintenance window.</p><br>
    ///   - [`maintenance_window(MaintenanceWindow)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::maintenance_window) / [`set_maintenance_window(Option<MaintenanceWindow>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_maintenance_window):<br>required: **false**<br><p>A specification for a time window to apply software updates.</p><br>
    ///   - [`software_set_update_mode(SoftwareSetUpdateMode)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::software_set_update_mode) / [`set_software_set_update_mode(Option<SoftwareSetUpdateMode>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_software_set_update_mode):<br>required: **false**<br><p>An option to define which software updates to apply.</p><br>
    ///   - [`desired_software_set_id(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::desired_software_set_id) / [`set_desired_software_set_id(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_desired_software_set_id):<br>required: **false**<br><p>The ID of the software set to apply.</p><br>
    /// - On success, responds with [`UpdateEnvironmentOutput`](crate::operation::update_environment::UpdateEnvironmentOutput) with field(s):
    ///   - [`environment(Option<EnvironmentSummary>)`](crate::operation::update_environment::UpdateEnvironmentOutput::environment): <p>Describes an environment.</p>
    /// - On failure, responds with [`SdkError<UpdateEnvironmentError>`](crate::operation::update_environment::UpdateEnvironmentError)
    pub fn update_environment(&self) -> crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder {
        crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::new(self.handle.clone())
    }
}
