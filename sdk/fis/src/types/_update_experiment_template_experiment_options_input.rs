// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies an experiment option for an experiment template.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateExperimentTemplateExperimentOptionsInput {
    /// <p>The empty target resolution mode of the experiment template.</p>
    pub empty_target_resolution_mode: ::std::option::Option<crate::types::EmptyTargetResolutionMode>,
}
impl UpdateExperimentTemplateExperimentOptionsInput {
    /// <p>The empty target resolution mode of the experiment template.</p>
    pub fn empty_target_resolution_mode(&self) -> ::std::option::Option<&crate::types::EmptyTargetResolutionMode> {
        self.empty_target_resolution_mode.as_ref()
    }
}
impl UpdateExperimentTemplateExperimentOptionsInput {
    /// Creates a new builder-style object to manufacture [`UpdateExperimentTemplateExperimentOptionsInput`](crate::types::UpdateExperimentTemplateExperimentOptionsInput).
    pub fn builder() -> crate::types::builders::UpdateExperimentTemplateExperimentOptionsInputBuilder {
        crate::types::builders::UpdateExperimentTemplateExperimentOptionsInputBuilder::default()
    }
}

/// A builder for [`UpdateExperimentTemplateExperimentOptionsInput`](crate::types::UpdateExperimentTemplateExperimentOptionsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateExperimentTemplateExperimentOptionsInputBuilder {
    pub(crate) empty_target_resolution_mode: ::std::option::Option<crate::types::EmptyTargetResolutionMode>,
}
impl UpdateExperimentTemplateExperimentOptionsInputBuilder {
    /// <p>The empty target resolution mode of the experiment template.</p>
    pub fn empty_target_resolution_mode(mut self, input: crate::types::EmptyTargetResolutionMode) -> Self {
        self.empty_target_resolution_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>The empty target resolution mode of the experiment template.</p>
    pub fn set_empty_target_resolution_mode(mut self, input: ::std::option::Option<crate::types::EmptyTargetResolutionMode>) -> Self {
        self.empty_target_resolution_mode = input;
        self
    }
    /// <p>The empty target resolution mode of the experiment template.</p>
    pub fn get_empty_target_resolution_mode(&self) -> &::std::option::Option<crate::types::EmptyTargetResolutionMode> {
        &self.empty_target_resolution_mode
    }
    /// Consumes the builder and constructs a [`UpdateExperimentTemplateExperimentOptionsInput`](crate::types::UpdateExperimentTemplateExperimentOptionsInput).
    pub fn build(self) -> crate::types::UpdateExperimentTemplateExperimentOptionsInput {
        crate::types::UpdateExperimentTemplateExperimentOptionsInput {
            empty_target_resolution_mode: self.empty_target_resolution_mode,
        }
    }
}
