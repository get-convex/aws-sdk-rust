// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAnomalies`](crate::operation::list_anomalies::builders::ListAnomaliesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_anomalies::builders::ListAnomaliesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::operation::list_anomalies::builders::ListAnomaliesFluentBuilder::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::operation::list_anomalies::builders::ListAnomaliesFluentBuilder::set_anomaly_detector_arn):<br>required: **false**<br><p>Use this to optionally limit the results to only the anomalies found by a certain anomaly detector.</p><br>
    ///   - [`suppression_state(SuppressionState)`](crate::operation::list_anomalies::builders::ListAnomaliesFluentBuilder::suppression_state) / [`set_suppression_state(Option<SuppressionState>)`](crate::operation::list_anomalies::builders::ListAnomaliesFluentBuilder::set_suppression_state):<br>required: **false**<br><p>You can specify this parameter if you want to the operation to return only anomalies that are currently either suppressed or unsuppressed.</p><br>
    ///   - [`limit(i32)`](crate::operation::list_anomalies::builders::ListAnomaliesFluentBuilder::limit) / [`set_limit(Option<i32>)`](crate::operation::list_anomalies::builders::ListAnomaliesFluentBuilder::set_limit):<br>required: **false**<br><p>The maximum number of items to return. If you don't specify a value, the default maximum value of 50 items is used.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_anomalies::builders::ListAnomaliesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_anomalies::builders::ListAnomaliesFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next set of items to return. The token expires after 24 hours.</p><br>
    /// - On success, responds with [`ListAnomaliesOutput`](crate::operation::list_anomalies::ListAnomaliesOutput) with field(s):
    ///   - [`anomalies(Option<Vec::<Anomaly>>)`](crate::operation::list_anomalies::ListAnomaliesOutput::anomalies): <p>An array of structures, where each structure contains information about one anomaly that a log anomaly detector has found.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_anomalies::ListAnomaliesOutput::next_token): <p>The token for the next set of items to return. The token expires after 24 hours.</p>
    /// - On failure, responds with [`SdkError<ListAnomaliesError>`](crate::operation::list_anomalies::ListAnomaliesError)
    pub fn list_anomalies(&self) -> crate::operation::list_anomalies::builders::ListAnomaliesFluentBuilder {
        crate::operation::list_anomalies::builders::ListAnomaliesFluentBuilder::new(self.handle.clone())
    }
}
