// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>If you are suppressing an anomaly temporariliy, this structure defines how long the suppression period is to be.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SuppressionPeriod {
    /// <p>Specifies the number of seconds, minutes or hours to suppress this anomaly. There is no maximum.</p>
    pub value: i32,
    /// <p>Specifies whether the value of <code>value</code> is in seconds, minutes, or hours.</p>
    pub suppression_unit: ::std::option::Option<crate::types::SuppressionUnit>,
}
impl SuppressionPeriod {
    /// <p>Specifies the number of seconds, minutes or hours to suppress this anomaly. There is no maximum.</p>
    pub fn value(&self) -> i32 {
        self.value
    }
    /// <p>Specifies whether the value of <code>value</code> is in seconds, minutes, or hours.</p>
    pub fn suppression_unit(&self) -> ::std::option::Option<&crate::types::SuppressionUnit> {
        self.suppression_unit.as_ref()
    }
}
impl SuppressionPeriod {
    /// Creates a new builder-style object to manufacture [`SuppressionPeriod`](crate::types::SuppressionPeriod).
    pub fn builder() -> crate::types::builders::SuppressionPeriodBuilder {
        crate::types::builders::SuppressionPeriodBuilder::default()
    }
}

/// A builder for [`SuppressionPeriod`](crate::types::SuppressionPeriod).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SuppressionPeriodBuilder {
    pub(crate) value: ::std::option::Option<i32>,
    pub(crate) suppression_unit: ::std::option::Option<crate::types::SuppressionUnit>,
}
impl SuppressionPeriodBuilder {
    /// <p>Specifies the number of seconds, minutes or hours to suppress this anomaly. There is no maximum.</p>
    pub fn value(mut self, input: i32) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the number of seconds, minutes or hours to suppress this anomaly. There is no maximum.</p>
    pub fn set_value(mut self, input: ::std::option::Option<i32>) -> Self {
        self.value = input;
        self
    }
    /// <p>Specifies the number of seconds, minutes or hours to suppress this anomaly. There is no maximum.</p>
    pub fn get_value(&self) -> &::std::option::Option<i32> {
        &self.value
    }
    /// <p>Specifies whether the value of <code>value</code> is in seconds, minutes, or hours.</p>
    pub fn suppression_unit(mut self, input: crate::types::SuppressionUnit) -> Self {
        self.suppression_unit = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether the value of <code>value</code> is in seconds, minutes, or hours.</p>
    pub fn set_suppression_unit(mut self, input: ::std::option::Option<crate::types::SuppressionUnit>) -> Self {
        self.suppression_unit = input;
        self
    }
    /// <p>Specifies whether the value of <code>value</code> is in seconds, minutes, or hours.</p>
    pub fn get_suppression_unit(&self) -> &::std::option::Option<crate::types::SuppressionUnit> {
        &self.suppression_unit
    }
    /// Consumes the builder and constructs a [`SuppressionPeriod`](crate::types::SuppressionPeriod).
    pub fn build(self) -> crate::types::SuppressionPeriod {
        crate::types::SuppressionPeriod {
            value: self.value.unwrap_or_default(),
            suppression_unit: self.suppression_unit,
        }
    }
}
