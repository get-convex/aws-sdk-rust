// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Object containing information about the model versions of selected features in a given job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MediaAnalysisModelVersions {
    /// <p>The Moderation base model version.</p>
    pub moderation: ::std::option::Option<::std::string::String>,
}
impl MediaAnalysisModelVersions {
    /// <p>The Moderation base model version.</p>
    pub fn moderation(&self) -> ::std::option::Option<&str> {
        self.moderation.as_deref()
    }
}
impl MediaAnalysisModelVersions {
    /// Creates a new builder-style object to manufacture [`MediaAnalysisModelVersions`](crate::types::MediaAnalysisModelVersions).
    pub fn builder() -> crate::types::builders::MediaAnalysisModelVersionsBuilder {
        crate::types::builders::MediaAnalysisModelVersionsBuilder::default()
    }
}

/// A builder for [`MediaAnalysisModelVersions`](crate::types::MediaAnalysisModelVersions).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MediaAnalysisModelVersionsBuilder {
    pub(crate) moderation: ::std::option::Option<::std::string::String>,
}
impl MediaAnalysisModelVersionsBuilder {
    /// <p>The Moderation base model version.</p>
    pub fn moderation(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.moderation = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Moderation base model version.</p>
    pub fn set_moderation(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.moderation = input;
        self
    }
    /// <p>The Moderation base model version.</p>
    pub fn get_moderation(&self) -> &::std::option::Option<::std::string::String> {
        &self.moderation
    }
    /// Consumes the builder and constructs a [`MediaAnalysisModelVersions`](crate::types::MediaAnalysisModelVersions).
    pub fn build(self) -> crate::types::MediaAnalysisModelVersions {
        crate::types::MediaAnalysisModelVersions { moderation: self.moderation }
    }
}
