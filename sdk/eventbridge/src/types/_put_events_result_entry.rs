// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the results of an event submitted to an event bus.</p>
/// <p>If the submission was successful, the entry has the event ID in it. Otherwise, you can use the error code and error message to identify the problem with the entry.</p>
/// <p>For information about the errors that are common to all actions, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">Common Errors</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutEventsResultEntry {
    /// <p>The ID of the event.</p>
    pub event_id: ::std::option::Option<::std::string::String>,
    /// <p>The error code that indicates why the event submission failed.</p>
    /// <p>Retryable errors include:</p>
    /// <ul>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">InternalFailure</a> </code></p>
    /// <p>The request processing has failed because of an unknown error, exception or failure.</p></li>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">ThrottlingException</a> </code></p>
    /// <p>The request was denied due to request throttling.</p></li>
    /// </ul>
    /// <p>Non-retryable errors include:</p>
    /// <ul>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">AccessDeniedException</a> </code></p>
    /// <p>You do not have sufficient access to perform this action.</p></li>
    /// <li>
    /// <p><code>InvalidAccountIdException</code></p>
    /// <p>The account ID provided is not valid.</p></li>
    /// <li>
    /// <p><code>InvalidArgument</code></p>
    /// <p>A specified parameter is not valid.</p></li>
    /// <li>
    /// <p><code>MalformedDetail</code></p>
    /// <p>The JSON provided is not valid.</p></li>
    /// <li>
    /// <p><code>RedactionFailure</code></p>
    /// <p>Redacting the CloudTrail event failed.</p></li>
    /// <li>
    /// <p><code>NotAuthorizedForSourceException</code></p>
    /// <p>You do not have permissions to publish events with this source onto this event bus.</p></li>
    /// <li>
    /// <p><code>NotAuthorizedForDetailTypeException</code></p>
    /// <p>You do not have permissions to publish events with this detail type onto this event bus.</p></li>
    /// </ul>
    pub error_code: ::std::option::Option<::std::string::String>,
    /// <p>The error message that explains why the event submission failed.</p>
    pub error_message: ::std::option::Option<::std::string::String>,
}
impl PutEventsResultEntry {
    /// <p>The ID of the event.</p>
    pub fn event_id(&self) -> ::std::option::Option<&str> {
        self.event_id.as_deref()
    }
    /// <p>The error code that indicates why the event submission failed.</p>
    /// <p>Retryable errors include:</p>
    /// <ul>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">InternalFailure</a> </code></p>
    /// <p>The request processing has failed because of an unknown error, exception or failure.</p></li>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">ThrottlingException</a> </code></p>
    /// <p>The request was denied due to request throttling.</p></li>
    /// </ul>
    /// <p>Non-retryable errors include:</p>
    /// <ul>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">AccessDeniedException</a> </code></p>
    /// <p>You do not have sufficient access to perform this action.</p></li>
    /// <li>
    /// <p><code>InvalidAccountIdException</code></p>
    /// <p>The account ID provided is not valid.</p></li>
    /// <li>
    /// <p><code>InvalidArgument</code></p>
    /// <p>A specified parameter is not valid.</p></li>
    /// <li>
    /// <p><code>MalformedDetail</code></p>
    /// <p>The JSON provided is not valid.</p></li>
    /// <li>
    /// <p><code>RedactionFailure</code></p>
    /// <p>Redacting the CloudTrail event failed.</p></li>
    /// <li>
    /// <p><code>NotAuthorizedForSourceException</code></p>
    /// <p>You do not have permissions to publish events with this source onto this event bus.</p></li>
    /// <li>
    /// <p><code>NotAuthorizedForDetailTypeException</code></p>
    /// <p>You do not have permissions to publish events with this detail type onto this event bus.</p></li>
    /// </ul>
    pub fn error_code(&self) -> ::std::option::Option<&str> {
        self.error_code.as_deref()
    }
    /// <p>The error message that explains why the event submission failed.</p>
    pub fn error_message(&self) -> ::std::option::Option<&str> {
        self.error_message.as_deref()
    }
}
impl PutEventsResultEntry {
    /// Creates a new builder-style object to manufacture [`PutEventsResultEntry`](crate::types::PutEventsResultEntry).
    pub fn builder() -> crate::types::builders::PutEventsResultEntryBuilder {
        crate::types::builders::PutEventsResultEntryBuilder::default()
    }
}

/// A builder for [`PutEventsResultEntry`](crate::types::PutEventsResultEntry).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutEventsResultEntryBuilder {
    pub(crate) event_id: ::std::option::Option<::std::string::String>,
    pub(crate) error_code: ::std::option::Option<::std::string::String>,
    pub(crate) error_message: ::std::option::Option<::std::string::String>,
}
impl PutEventsResultEntryBuilder {
    /// <p>The ID of the event.</p>
    pub fn event_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.event_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the event.</p>
    pub fn set_event_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.event_id = input;
        self
    }
    /// <p>The ID of the event.</p>
    pub fn get_event_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.event_id
    }
    /// <p>The error code that indicates why the event submission failed.</p>
    /// <p>Retryable errors include:</p>
    /// <ul>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">InternalFailure</a> </code></p>
    /// <p>The request processing has failed because of an unknown error, exception or failure.</p></li>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">ThrottlingException</a> </code></p>
    /// <p>The request was denied due to request throttling.</p></li>
    /// </ul>
    /// <p>Non-retryable errors include:</p>
    /// <ul>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">AccessDeniedException</a> </code></p>
    /// <p>You do not have sufficient access to perform this action.</p></li>
    /// <li>
    /// <p><code>InvalidAccountIdException</code></p>
    /// <p>The account ID provided is not valid.</p></li>
    /// <li>
    /// <p><code>InvalidArgument</code></p>
    /// <p>A specified parameter is not valid.</p></li>
    /// <li>
    /// <p><code>MalformedDetail</code></p>
    /// <p>The JSON provided is not valid.</p></li>
    /// <li>
    /// <p><code>RedactionFailure</code></p>
    /// <p>Redacting the CloudTrail event failed.</p></li>
    /// <li>
    /// <p><code>NotAuthorizedForSourceException</code></p>
    /// <p>You do not have permissions to publish events with this source onto this event bus.</p></li>
    /// <li>
    /// <p><code>NotAuthorizedForDetailTypeException</code></p>
    /// <p>You do not have permissions to publish events with this detail type onto this event bus.</p></li>
    /// </ul>
    pub fn error_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The error code that indicates why the event submission failed.</p>
    /// <p>Retryable errors include:</p>
    /// <ul>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">InternalFailure</a> </code></p>
    /// <p>The request processing has failed because of an unknown error, exception or failure.</p></li>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">ThrottlingException</a> </code></p>
    /// <p>The request was denied due to request throttling.</p></li>
    /// </ul>
    /// <p>Non-retryable errors include:</p>
    /// <ul>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">AccessDeniedException</a> </code></p>
    /// <p>You do not have sufficient access to perform this action.</p></li>
    /// <li>
    /// <p><code>InvalidAccountIdException</code></p>
    /// <p>The account ID provided is not valid.</p></li>
    /// <li>
    /// <p><code>InvalidArgument</code></p>
    /// <p>A specified parameter is not valid.</p></li>
    /// <li>
    /// <p><code>MalformedDetail</code></p>
    /// <p>The JSON provided is not valid.</p></li>
    /// <li>
    /// <p><code>RedactionFailure</code></p>
    /// <p>Redacting the CloudTrail event failed.</p></li>
    /// <li>
    /// <p><code>NotAuthorizedForSourceException</code></p>
    /// <p>You do not have permissions to publish events with this source onto this event bus.</p></li>
    /// <li>
    /// <p><code>NotAuthorizedForDetailTypeException</code></p>
    /// <p>You do not have permissions to publish events with this detail type onto this event bus.</p></li>
    /// </ul>
    pub fn set_error_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_code = input;
        self
    }
    /// <p>The error code that indicates why the event submission failed.</p>
    /// <p>Retryable errors include:</p>
    /// <ul>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">InternalFailure</a> </code></p>
    /// <p>The request processing has failed because of an unknown error, exception or failure.</p></li>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">ThrottlingException</a> </code></p>
    /// <p>The request was denied due to request throttling.</p></li>
    /// </ul>
    /// <p>Non-retryable errors include:</p>
    /// <ul>
    /// <li>
    /// <p><code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html">AccessDeniedException</a> </code></p>
    /// <p>You do not have sufficient access to perform this action.</p></li>
    /// <li>
    /// <p><code>InvalidAccountIdException</code></p>
    /// <p>The account ID provided is not valid.</p></li>
    /// <li>
    /// <p><code>InvalidArgument</code></p>
    /// <p>A specified parameter is not valid.</p></li>
    /// <li>
    /// <p><code>MalformedDetail</code></p>
    /// <p>The JSON provided is not valid.</p></li>
    /// <li>
    /// <p><code>RedactionFailure</code></p>
    /// <p>Redacting the CloudTrail event failed.</p></li>
    /// <li>
    /// <p><code>NotAuthorizedForSourceException</code></p>
    /// <p>You do not have permissions to publish events with this source onto this event bus.</p></li>
    /// <li>
    /// <p><code>NotAuthorizedForDetailTypeException</code></p>
    /// <p>You do not have permissions to publish events with this detail type onto this event bus.</p></li>
    /// </ul>
    pub fn get_error_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_code
    }
    /// <p>The error message that explains why the event submission failed.</p>
    pub fn error_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The error message that explains why the event submission failed.</p>
    pub fn set_error_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// <p>The error message that explains why the event submission failed.</p>
    pub fn get_error_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_message
    }
    /// Consumes the builder and constructs a [`PutEventsResultEntry`](crate::types::PutEventsResultEntry).
    pub fn build(self) -> crate::types::PutEventsResultEntry {
        crate::types::PutEventsResultEntry {
            event_id: self.event_id,
            error_code: self.error_code,
            error_message: self.error_message,
        }
    }
}
