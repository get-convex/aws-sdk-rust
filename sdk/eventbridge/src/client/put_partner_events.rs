// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutPartnerEvents`](crate::operation::put_partner_events::builders::PutPartnerEventsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`entries(PutPartnerEventsRequestEntry)`](crate::operation::put_partner_events::builders::PutPartnerEventsFluentBuilder::entries) / [`set_entries(Option<Vec::<PutPartnerEventsRequestEntry>>)`](crate::operation::put_partner_events::builders::PutPartnerEventsFluentBuilder::set_entries):<br>required: **true**<br><p>The list of events to write to the event bus.</p><br>
    /// - On success, responds with [`PutPartnerEventsOutput`](crate::operation::put_partner_events::PutPartnerEventsOutput) with field(s):
    ///   - [`failed_entry_count(i32)`](crate::operation::put_partner_events::PutPartnerEventsOutput::failed_entry_count): <p>The number of events from this operation that could not be written to the partner event bus.</p>
    ///   - [`entries(Option<Vec::<PutPartnerEventsResultEntry>>)`](crate::operation::put_partner_events::PutPartnerEventsOutput::entries): <p>The results for each event entry the partner submitted in this request. If the event was successfully submitted, the entry has the event ID in it. Otherwise, you can use the error code and error message to identify the problem with the entry.</p> <p>For each record, the index of the response element is the same as the index in the request array.</p>
    /// - On failure, responds with [`SdkError<PutPartnerEventsError>`](crate::operation::put_partner_events::PutPartnerEventsError)
    pub fn put_partner_events(&self) -> crate::operation::put_partner_events::builders::PutPartnerEventsFluentBuilder {
        crate::operation::put_partner_events::builders::PutPartnerEventsFluentBuilder::new(self.handle.clone())
    }
}
