// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ModifyRedshiftIdcApplicationOutput {
    /// <p>Contains properties for the Redshift IDC application.</p>
    pub redshift_idc_application: ::std::option::Option<crate::types::RedshiftIdcApplication>,
    _request_id: Option<String>,
}
impl ModifyRedshiftIdcApplicationOutput {
    /// <p>Contains properties for the Redshift IDC application.</p>
    pub fn redshift_idc_application(&self) -> ::std::option::Option<&crate::types::RedshiftIdcApplication> {
        self.redshift_idc_application.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for ModifyRedshiftIdcApplicationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ModifyRedshiftIdcApplicationOutput {
    /// Creates a new builder-style object to manufacture [`ModifyRedshiftIdcApplicationOutput`](crate::operation::modify_redshift_idc_application::ModifyRedshiftIdcApplicationOutput).
    pub fn builder() -> crate::operation::modify_redshift_idc_application::builders::ModifyRedshiftIdcApplicationOutputBuilder {
        crate::operation::modify_redshift_idc_application::builders::ModifyRedshiftIdcApplicationOutputBuilder::default()
    }
}

/// A builder for [`ModifyRedshiftIdcApplicationOutput`](crate::operation::modify_redshift_idc_application::ModifyRedshiftIdcApplicationOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ModifyRedshiftIdcApplicationOutputBuilder {
    pub(crate) redshift_idc_application: ::std::option::Option<crate::types::RedshiftIdcApplication>,
    _request_id: Option<String>,
}
impl ModifyRedshiftIdcApplicationOutputBuilder {
    /// <p>Contains properties for the Redshift IDC application.</p>
    pub fn redshift_idc_application(mut self, input: crate::types::RedshiftIdcApplication) -> Self {
        self.redshift_idc_application = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains properties for the Redshift IDC application.</p>
    pub fn set_redshift_idc_application(mut self, input: ::std::option::Option<crate::types::RedshiftIdcApplication>) -> Self {
        self.redshift_idc_application = input;
        self
    }
    /// <p>Contains properties for the Redshift IDC application.</p>
    pub fn get_redshift_idc_application(&self) -> &::std::option::Option<crate::types::RedshiftIdcApplication> {
        &self.redshift_idc_application
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ModifyRedshiftIdcApplicationOutput`](crate::operation::modify_redshift_idc_application::ModifyRedshiftIdcApplicationOutput).
    pub fn build(self) -> crate::operation::modify_redshift_idc_application::ModifyRedshiftIdcApplicationOutput {
        crate::operation::modify_redshift_idc_application::ModifyRedshiftIdcApplicationOutput {
            redshift_idc_application: self.redshift_idc_application,
            _request_id: self._request_id,
        }
    }
}
