// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the IAM Identity Center instance.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InstanceMetadata {
    /// <p>The ARN of the Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub instance_arn: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the identity store that is connected to the Identity Center instance.</p>
    pub identity_store_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Web Services account ID number of the owner of the Identity Center instance.</p>
    pub owner_account_id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the Identity Center instance.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The date and time that the Identity Center instance was created.</p>
    pub created_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The current status of this Identity Center instance.</p>
    pub status: ::std::option::Option<crate::types::InstanceStatus>,
}
impl InstanceMetadata {
    /// <p>The ARN of the Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn instance_arn(&self) -> ::std::option::Option<&str> {
        self.instance_arn.as_deref()
    }
    /// <p>The identifier of the identity store that is connected to the Identity Center instance.</p>
    pub fn identity_store_id(&self) -> ::std::option::Option<&str> {
        self.identity_store_id.as_deref()
    }
    /// <p>The Amazon Web Services account ID number of the owner of the Identity Center instance.</p>
    pub fn owner_account_id(&self) -> ::std::option::Option<&str> {
        self.owner_account_id.as_deref()
    }
    /// <p>The name of the Identity Center instance.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The date and time that the Identity Center instance was created.</p>
    pub fn created_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_date.as_ref()
    }
    /// <p>The current status of this Identity Center instance.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::InstanceStatus> {
        self.status.as_ref()
    }
}
impl InstanceMetadata {
    /// Creates a new builder-style object to manufacture [`InstanceMetadata`](crate::types::InstanceMetadata).
    pub fn builder() -> crate::types::builders::InstanceMetadataBuilder {
        crate::types::builders::InstanceMetadataBuilder::default()
    }
}

/// A builder for [`InstanceMetadata`](crate::types::InstanceMetadata).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InstanceMetadataBuilder {
    pub(crate) instance_arn: ::std::option::Option<::std::string::String>,
    pub(crate) identity_store_id: ::std::option::Option<::std::string::String>,
    pub(crate) owner_account_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) created_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::InstanceStatus>,
}
impl InstanceMetadataBuilder {
    /// <p>The ARN of the Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn instance_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn set_instance_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_arn = input;
        self
    }
    /// <p>The ARN of the Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn get_instance_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_arn
    }
    /// <p>The identifier of the identity store that is connected to the Identity Center instance.</p>
    pub fn identity_store_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identity_store_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the identity store that is connected to the Identity Center instance.</p>
    pub fn set_identity_store_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identity_store_id = input;
        self
    }
    /// <p>The identifier of the identity store that is connected to the Identity Center instance.</p>
    pub fn get_identity_store_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.identity_store_id
    }
    /// <p>The Amazon Web Services account ID number of the owner of the Identity Center instance.</p>
    pub fn owner_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.owner_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID number of the owner of the Identity Center instance.</p>
    pub fn set_owner_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.owner_account_id = input;
        self
    }
    /// <p>The Amazon Web Services account ID number of the owner of the Identity Center instance.</p>
    pub fn get_owner_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.owner_account_id
    }
    /// <p>The name of the Identity Center instance.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Identity Center instance.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the Identity Center instance.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The date and time that the Identity Center instance was created.</p>
    pub fn created_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that the Identity Center instance was created.</p>
    pub fn set_created_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_date = input;
        self
    }
    /// <p>The date and time that the Identity Center instance was created.</p>
    pub fn get_created_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_date
    }
    /// <p>The current status of this Identity Center instance.</p>
    pub fn status(mut self, input: crate::types::InstanceStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of this Identity Center instance.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::InstanceStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of this Identity Center instance.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::InstanceStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`InstanceMetadata`](crate::types::InstanceMetadata).
    pub fn build(self) -> crate::types::InstanceMetadata {
        crate::types::InstanceMetadata {
            instance_arn: self.instance_arn,
            identity_store_id: self.identity_store_id,
            owner_account_id: self.owner_account_id,
            name: self.name,
            created_date: self.created_date,
            status: self.status,
        }
    }
}
