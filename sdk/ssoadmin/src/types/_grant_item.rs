// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that defines a single grant and its configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GrantItem {
    /// <p>The type of the selected grant.</p>
    pub grant_type: crate::types::GrantType,
    /// <p>The configuration structure for the selected grant.</p>
    pub grant: ::std::option::Option<crate::types::Grant>,
}
impl GrantItem {
    /// <p>The type of the selected grant.</p>
    pub fn grant_type(&self) -> &crate::types::GrantType {
        &self.grant_type
    }
    /// <p>The configuration structure for the selected grant.</p>
    pub fn grant(&self) -> ::std::option::Option<&crate::types::Grant> {
        self.grant.as_ref()
    }
}
impl GrantItem {
    /// Creates a new builder-style object to manufacture [`GrantItem`](crate::types::GrantItem).
    pub fn builder() -> crate::types::builders::GrantItemBuilder {
        crate::types::builders::GrantItemBuilder::default()
    }
}

/// A builder for [`GrantItem`](crate::types::GrantItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GrantItemBuilder {
    pub(crate) grant_type: ::std::option::Option<crate::types::GrantType>,
    pub(crate) grant: ::std::option::Option<crate::types::Grant>,
}
impl GrantItemBuilder {
    /// <p>The type of the selected grant.</p>
    /// This field is required.
    pub fn grant_type(mut self, input: crate::types::GrantType) -> Self {
        self.grant_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of the selected grant.</p>
    pub fn set_grant_type(mut self, input: ::std::option::Option<crate::types::GrantType>) -> Self {
        self.grant_type = input;
        self
    }
    /// <p>The type of the selected grant.</p>
    pub fn get_grant_type(&self) -> &::std::option::Option<crate::types::GrantType> {
        &self.grant_type
    }
    /// <p>The configuration structure for the selected grant.</p>
    /// This field is required.
    pub fn grant(mut self, input: crate::types::Grant) -> Self {
        self.grant = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration structure for the selected grant.</p>
    pub fn set_grant(mut self, input: ::std::option::Option<crate::types::Grant>) -> Self {
        self.grant = input;
        self
    }
    /// <p>The configuration structure for the selected grant.</p>
    pub fn get_grant(&self) -> &::std::option::Option<crate::types::Grant> {
        &self.grant
    }
    /// Consumes the builder and constructs a [`GrantItem`](crate::types::GrantItem).
    /// This method will fail if any of the following fields are not set:
    /// - [`grant_type`](crate::types::builders::GrantItemBuilder::grant_type)
    pub fn build(self) -> ::std::result::Result<crate::types::GrantItem, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::GrantItem {
            grant_type: self.grant_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "grant_type",
                    "grant_type was not specified but it is required when building GrantItem",
                )
            })?,
            grant: self.grant,
        })
    }
}
