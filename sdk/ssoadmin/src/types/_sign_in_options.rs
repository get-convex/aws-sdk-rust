// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that describes the sign-in options for an application portal.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SignInOptions {
    /// <p>This determines how IAM Identity Center navigates the user to the target application. It can be one of the following values:</p>
    /// <ul>
    /// <li>
    /// <p><code>APPLICATION</code>: IAM Identity Center redirects the customer to the configured <code>ApplicationUrl</code>.</p></li>
    /// <li>
    /// <p><code>IDENTITY_CENTER</code>: IAM Identity Center uses SAML identity-provider initiated authentication to sign the customer directly into a SAML-based application.</p></li>
    /// </ul>
    pub origin: crate::types::SignInOrigin,
    /// <p>The URL that accepts authentication requests for an application. This is a required parameter if the <code>Origin</code> parameter is <code>APPLICATION</code>.</p>
    pub application_url: ::std::option::Option<::std::string::String>,
}
impl SignInOptions {
    /// <p>This determines how IAM Identity Center navigates the user to the target application. It can be one of the following values:</p>
    /// <ul>
    /// <li>
    /// <p><code>APPLICATION</code>: IAM Identity Center redirects the customer to the configured <code>ApplicationUrl</code>.</p></li>
    /// <li>
    /// <p><code>IDENTITY_CENTER</code>: IAM Identity Center uses SAML identity-provider initiated authentication to sign the customer directly into a SAML-based application.</p></li>
    /// </ul>
    pub fn origin(&self) -> &crate::types::SignInOrigin {
        &self.origin
    }
    /// <p>The URL that accepts authentication requests for an application. This is a required parameter if the <code>Origin</code> parameter is <code>APPLICATION</code>.</p>
    pub fn application_url(&self) -> ::std::option::Option<&str> {
        self.application_url.as_deref()
    }
}
impl SignInOptions {
    /// Creates a new builder-style object to manufacture [`SignInOptions`](crate::types::SignInOptions).
    pub fn builder() -> crate::types::builders::SignInOptionsBuilder {
        crate::types::builders::SignInOptionsBuilder::default()
    }
}

/// A builder for [`SignInOptions`](crate::types::SignInOptions).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SignInOptionsBuilder {
    pub(crate) origin: ::std::option::Option<crate::types::SignInOrigin>,
    pub(crate) application_url: ::std::option::Option<::std::string::String>,
}
impl SignInOptionsBuilder {
    /// <p>This determines how IAM Identity Center navigates the user to the target application. It can be one of the following values:</p>
    /// <ul>
    /// <li>
    /// <p><code>APPLICATION</code>: IAM Identity Center redirects the customer to the configured <code>ApplicationUrl</code>.</p></li>
    /// <li>
    /// <p><code>IDENTITY_CENTER</code>: IAM Identity Center uses SAML identity-provider initiated authentication to sign the customer directly into a SAML-based application.</p></li>
    /// </ul>
    /// This field is required.
    pub fn origin(mut self, input: crate::types::SignInOrigin) -> Self {
        self.origin = ::std::option::Option::Some(input);
        self
    }
    /// <p>This determines how IAM Identity Center navigates the user to the target application. It can be one of the following values:</p>
    /// <ul>
    /// <li>
    /// <p><code>APPLICATION</code>: IAM Identity Center redirects the customer to the configured <code>ApplicationUrl</code>.</p></li>
    /// <li>
    /// <p><code>IDENTITY_CENTER</code>: IAM Identity Center uses SAML identity-provider initiated authentication to sign the customer directly into a SAML-based application.</p></li>
    /// </ul>
    pub fn set_origin(mut self, input: ::std::option::Option<crate::types::SignInOrigin>) -> Self {
        self.origin = input;
        self
    }
    /// <p>This determines how IAM Identity Center navigates the user to the target application. It can be one of the following values:</p>
    /// <ul>
    /// <li>
    /// <p><code>APPLICATION</code>: IAM Identity Center redirects the customer to the configured <code>ApplicationUrl</code>.</p></li>
    /// <li>
    /// <p><code>IDENTITY_CENTER</code>: IAM Identity Center uses SAML identity-provider initiated authentication to sign the customer directly into a SAML-based application.</p></li>
    /// </ul>
    pub fn get_origin(&self) -> &::std::option::Option<crate::types::SignInOrigin> {
        &self.origin
    }
    /// <p>The URL that accepts authentication requests for an application. This is a required parameter if the <code>Origin</code> parameter is <code>APPLICATION</code>.</p>
    pub fn application_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.application_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The URL that accepts authentication requests for an application. This is a required parameter if the <code>Origin</code> parameter is <code>APPLICATION</code>.</p>
    pub fn set_application_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.application_url = input;
        self
    }
    /// <p>The URL that accepts authentication requests for an application. This is a required parameter if the <code>Origin</code> parameter is <code>APPLICATION</code>.</p>
    pub fn get_application_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.application_url
    }
    /// Consumes the builder and constructs a [`SignInOptions`](crate::types::SignInOptions).
    /// This method will fail if any of the following fields are not set:
    /// - [`origin`](crate::types::builders::SignInOptionsBuilder::origin)
    pub fn build(self) -> ::std::result::Result<crate::types::SignInOptions, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SignInOptions {
            origin: self.origin.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "origin",
                    "origin was not specified but it is required when building SignInOptions",
                )
            })?,
            application_url: self.application_url,
        })
    }
}
