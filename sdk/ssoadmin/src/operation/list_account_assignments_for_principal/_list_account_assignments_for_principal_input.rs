// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListAccountAssignmentsForPrincipalInput {
    /// <p>Specifies the ARN of the instance of IAM Identity Center that contains the principal.</p>
    pub instance_arn: ::std::option::Option<::std::string::String>,
    /// <p>Specifies the principal for which you want to retrieve the list of account assignments.</p>
    pub principal_id: ::std::option::Option<::std::string::String>,
    /// <p>Specifies the type of the principal.</p>
    pub principal_type: ::std::option::Option<crate::types::PrincipalType>,
    /// <p>Specifies an Amazon Web Services account ID number. Results are filtered to only those that match this ID number.</p>
    pub filter: ::std::option::Option<crate::types::ListAccountAssignmentsFilter>,
    /// <p>Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>Specifies the total number of results that you want included in each response. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next set of results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.</p>
    pub max_results: ::std::option::Option<i32>,
}
impl ListAccountAssignmentsForPrincipalInput {
    /// <p>Specifies the ARN of the instance of IAM Identity Center that contains the principal.</p>
    pub fn instance_arn(&self) -> ::std::option::Option<&str> {
        self.instance_arn.as_deref()
    }
    /// <p>Specifies the principal for which you want to retrieve the list of account assignments.</p>
    pub fn principal_id(&self) -> ::std::option::Option<&str> {
        self.principal_id.as_deref()
    }
    /// <p>Specifies the type of the principal.</p>
    pub fn principal_type(&self) -> ::std::option::Option<&crate::types::PrincipalType> {
        self.principal_type.as_ref()
    }
    /// <p>Specifies an Amazon Web Services account ID number. Results are filtered to only those that match this ID number.</p>
    pub fn filter(&self) -> ::std::option::Option<&crate::types::ListAccountAssignmentsFilter> {
        self.filter.as_ref()
    }
    /// <p>Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>Specifies the total number of results that you want included in each response. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next set of results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
}
impl ListAccountAssignmentsForPrincipalInput {
    /// Creates a new builder-style object to manufacture [`ListAccountAssignmentsForPrincipalInput`](crate::operation::list_account_assignments_for_principal::ListAccountAssignmentsForPrincipalInput).
    pub fn builder() -> crate::operation::list_account_assignments_for_principal::builders::ListAccountAssignmentsForPrincipalInputBuilder {
        crate::operation::list_account_assignments_for_principal::builders::ListAccountAssignmentsForPrincipalInputBuilder::default()
    }
}

/// A builder for [`ListAccountAssignmentsForPrincipalInput`](crate::operation::list_account_assignments_for_principal::ListAccountAssignmentsForPrincipalInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListAccountAssignmentsForPrincipalInputBuilder {
    pub(crate) instance_arn: ::std::option::Option<::std::string::String>,
    pub(crate) principal_id: ::std::option::Option<::std::string::String>,
    pub(crate) principal_type: ::std::option::Option<crate::types::PrincipalType>,
    pub(crate) filter: ::std::option::Option<crate::types::ListAccountAssignmentsFilter>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
}
impl ListAccountAssignmentsForPrincipalInputBuilder {
    /// <p>Specifies the ARN of the instance of IAM Identity Center that contains the principal.</p>
    /// This field is required.
    pub fn instance_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the ARN of the instance of IAM Identity Center that contains the principal.</p>
    pub fn set_instance_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_arn = input;
        self
    }
    /// <p>Specifies the ARN of the instance of IAM Identity Center that contains the principal.</p>
    pub fn get_instance_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_arn
    }
    /// <p>Specifies the principal for which you want to retrieve the list of account assignments.</p>
    /// This field is required.
    pub fn principal_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.principal_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the principal for which you want to retrieve the list of account assignments.</p>
    pub fn set_principal_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.principal_id = input;
        self
    }
    /// <p>Specifies the principal for which you want to retrieve the list of account assignments.</p>
    pub fn get_principal_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.principal_id
    }
    /// <p>Specifies the type of the principal.</p>
    /// This field is required.
    pub fn principal_type(mut self, input: crate::types::PrincipalType) -> Self {
        self.principal_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the type of the principal.</p>
    pub fn set_principal_type(mut self, input: ::std::option::Option<crate::types::PrincipalType>) -> Self {
        self.principal_type = input;
        self
    }
    /// <p>Specifies the type of the principal.</p>
    pub fn get_principal_type(&self) -> &::std::option::Option<crate::types::PrincipalType> {
        &self.principal_type
    }
    /// <p>Specifies an Amazon Web Services account ID number. Results are filtered to only those that match this ID number.</p>
    pub fn filter(mut self, input: crate::types::ListAccountAssignmentsFilter) -> Self {
        self.filter = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies an Amazon Web Services account ID number. Results are filtered to only those that match this ID number.</p>
    pub fn set_filter(mut self, input: ::std::option::Option<crate::types::ListAccountAssignmentsFilter>) -> Self {
        self.filter = input;
        self
    }
    /// <p>Specifies an Amazon Web Services account ID number. Results are filtered to only those that match this ID number.</p>
    pub fn get_filter(&self) -> &::std::option::Option<crate::types::ListAccountAssignmentsFilter> {
        &self.filter
    }
    /// <p>Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>Specifies the total number of results that you want included in each response. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next set of results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the total number of results that you want included in each response. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next set of results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>Specifies the total number of results that you want included in each response. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next set of results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// Consumes the builder and constructs a [`ListAccountAssignmentsForPrincipalInput`](crate::operation::list_account_assignments_for_principal::ListAccountAssignmentsForPrincipalInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_account_assignments_for_principal::ListAccountAssignmentsForPrincipalInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::list_account_assignments_for_principal::ListAccountAssignmentsForPrincipalInput {
                instance_arn: self.instance_arn,
                principal_id: self.principal_id,
                principal_type: self.principal_type,
                filter: self.filter,
                next_token: self.next_token,
                max_results: self.max_results,
            },
        )
    }
}
