// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateTrustedTokenIssuerInput {
    /// <p>Specifies the ARN of the trusted token issuer configuration that you want to update.</p>
    pub trusted_token_issuer_arn: ::std::option::Option<::std::string::String>,
    /// <p>Specifies the updated name to be applied to the trusted token issuer configuration.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>Specifies a structure with settings to apply to the specified trusted token issuer. The settings that you can provide are determined by the type of the trusted token issuer that you are updating.</p>
    pub trusted_token_issuer_configuration: ::std::option::Option<crate::types::TrustedTokenIssuerUpdateConfiguration>,
}
impl UpdateTrustedTokenIssuerInput {
    /// <p>Specifies the ARN of the trusted token issuer configuration that you want to update.</p>
    pub fn trusted_token_issuer_arn(&self) -> ::std::option::Option<&str> {
        self.trusted_token_issuer_arn.as_deref()
    }
    /// <p>Specifies the updated name to be applied to the trusted token issuer configuration.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>Specifies a structure with settings to apply to the specified trusted token issuer. The settings that you can provide are determined by the type of the trusted token issuer that you are updating.</p>
    pub fn trusted_token_issuer_configuration(&self) -> ::std::option::Option<&crate::types::TrustedTokenIssuerUpdateConfiguration> {
        self.trusted_token_issuer_configuration.as_ref()
    }
}
impl UpdateTrustedTokenIssuerInput {
    /// Creates a new builder-style object to manufacture [`UpdateTrustedTokenIssuerInput`](crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerInput).
    pub fn builder() -> crate::operation::update_trusted_token_issuer::builders::UpdateTrustedTokenIssuerInputBuilder {
        crate::operation::update_trusted_token_issuer::builders::UpdateTrustedTokenIssuerInputBuilder::default()
    }
}

/// A builder for [`UpdateTrustedTokenIssuerInput`](crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateTrustedTokenIssuerInputBuilder {
    pub(crate) trusted_token_issuer_arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) trusted_token_issuer_configuration: ::std::option::Option<crate::types::TrustedTokenIssuerUpdateConfiguration>,
}
impl UpdateTrustedTokenIssuerInputBuilder {
    /// <p>Specifies the ARN of the trusted token issuer configuration that you want to update.</p>
    /// This field is required.
    pub fn trusted_token_issuer_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.trusted_token_issuer_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the ARN of the trusted token issuer configuration that you want to update.</p>
    pub fn set_trusted_token_issuer_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.trusted_token_issuer_arn = input;
        self
    }
    /// <p>Specifies the ARN of the trusted token issuer configuration that you want to update.</p>
    pub fn get_trusted_token_issuer_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.trusted_token_issuer_arn
    }
    /// <p>Specifies the updated name to be applied to the trusted token issuer configuration.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the updated name to be applied to the trusted token issuer configuration.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>Specifies the updated name to be applied to the trusted token issuer configuration.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>Specifies a structure with settings to apply to the specified trusted token issuer. The settings that you can provide are determined by the type of the trusted token issuer that you are updating.</p>
    pub fn trusted_token_issuer_configuration(mut self, input: crate::types::TrustedTokenIssuerUpdateConfiguration) -> Self {
        self.trusted_token_issuer_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies a structure with settings to apply to the specified trusted token issuer. The settings that you can provide are determined by the type of the trusted token issuer that you are updating.</p>
    pub fn set_trusted_token_issuer_configuration(
        mut self,
        input: ::std::option::Option<crate::types::TrustedTokenIssuerUpdateConfiguration>,
    ) -> Self {
        self.trusted_token_issuer_configuration = input;
        self
    }
    /// <p>Specifies a structure with settings to apply to the specified trusted token issuer. The settings that you can provide are determined by the type of the trusted token issuer that you are updating.</p>
    pub fn get_trusted_token_issuer_configuration(&self) -> &::std::option::Option<crate::types::TrustedTokenIssuerUpdateConfiguration> {
        &self.trusted_token_issuer_configuration
    }
    /// Consumes the builder and constructs a [`UpdateTrustedTokenIssuerInput`](crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerInput {
            trusted_token_issuer_arn: self.trusted_token_issuer_arn,
            name: self.name,
            trusted_token_issuer_configuration: self.trusted_token_issuer_configuration,
        })
    }
}
