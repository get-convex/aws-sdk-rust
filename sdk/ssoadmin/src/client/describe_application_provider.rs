// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeApplicationProvider`](crate::operation::describe_application_provider::builders::DescribeApplicationProviderFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_provider_arn(impl Into<String>)`](crate::operation::describe_application_provider::builders::DescribeApplicationProviderFluentBuilder::application_provider_arn) / [`set_application_provider_arn(Option<String>)`](crate::operation::describe_application_provider::builders::DescribeApplicationProviderFluentBuilder::set_application_provider_arn):<br>required: **true**<br><p>Specifies the ARN of the application provider for which you want details.</p><br>
    /// - On success, responds with [`DescribeApplicationProviderOutput`](crate::operation::describe_application_provider::DescribeApplicationProviderOutput) with field(s):
    ///   - [`application_provider_arn(String)`](crate::operation::describe_application_provider::DescribeApplicationProviderOutput::application_provider_arn): <p>The ARN of the application provider.</p>
    ///   - [`federation_protocol(Option<FederationProtocol>)`](crate::operation::describe_application_provider::DescribeApplicationProviderOutput::federation_protocol): <p>The protocol used to federate to the application provider.</p>
    ///   - [`display_data(Option<DisplayData>)`](crate::operation::describe_application_provider::DescribeApplicationProviderOutput::display_data): <p>A structure with details about the display data for the application provider.</p>
    ///   - [`resource_server_config(Option<ResourceServerConfig>)`](crate::operation::describe_application_provider::DescribeApplicationProviderOutput::resource_server_config): <p>A structure with details about the receiving application.</p>
    /// - On failure, responds with [`SdkError<DescribeApplicationProviderError>`](crate::operation::describe_application_provider::DescribeApplicationProviderError)
    pub fn describe_application_provider(
        &self,
    ) -> crate::operation::describe_application_provider::builders::DescribeApplicationProviderFluentBuilder {
        crate::operation::describe_application_provider::builders::DescribeApplicationProviderFluentBuilder::new(self.handle.clone())
    }
}
