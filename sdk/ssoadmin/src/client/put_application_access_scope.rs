// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutApplicationAccessScope`](crate::operation::put_application_access_scope::builders::PutApplicationAccessScopeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`scope(impl Into<String>)`](crate::operation::put_application_access_scope::builders::PutApplicationAccessScopeFluentBuilder::scope) / [`set_scope(Option<String>)`](crate::operation::put_application_access_scope::builders::PutApplicationAccessScopeFluentBuilder::set_scope):<br>required: **true**<br><p>Specifies the name of the access scope to be associated with the specified targets.</p><br>
    ///   - [`authorized_targets(impl Into<String>)`](crate::operation::put_application_access_scope::builders::PutApplicationAccessScopeFluentBuilder::authorized_targets) / [`set_authorized_targets(Option<Vec::<String>>)`](crate::operation::put_application_access_scope::builders::PutApplicationAccessScopeFluentBuilder::set_authorized_targets):<br>required: **false**<br><p>Specifies an array list of ARNs that represent the authorized targets for this access scope.</p><br>
    ///   - [`application_arn(impl Into<String>)`](crate::operation::put_application_access_scope::builders::PutApplicationAccessScopeFluentBuilder::application_arn) / [`set_application_arn(Option<String>)`](crate::operation::put_application_access_scope::builders::PutApplicationAccessScopeFluentBuilder::set_application_arn):<br>required: **true**<br><p>Specifies the ARN of the application with the access scope with the targets to add or update.</p><br>
    /// - On success, responds with [`PutApplicationAccessScopeOutput`](crate::operation::put_application_access_scope::PutApplicationAccessScopeOutput)
    /// - On failure, responds with [`SdkError<PutApplicationAccessScopeError>`](crate::operation::put_application_access_scope::PutApplicationAccessScopeError)
    pub fn put_application_access_scope(&self) -> crate::operation::put_application_access_scope::builders::PutApplicationAccessScopeFluentBuilder {
        crate::operation::put_application_access_scope::builders::PutApplicationAccessScopeFluentBuilder::new(self.handle.clone())
    }
}
