// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetApplicationAccessScope`](crate::operation::get_application_access_scope::builders::GetApplicationAccessScopeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_arn(impl Into<String>)`](crate::operation::get_application_access_scope::builders::GetApplicationAccessScopeFluentBuilder::application_arn) / [`set_application_arn(Option<String>)`](crate::operation::get_application_access_scope::builders::GetApplicationAccessScopeFluentBuilder::set_application_arn):<br>required: **true**<br><p>Specifies the ARN of the application with the access scope that you want to retrieve.</p><br>
    ///   - [`scope(impl Into<String>)`](crate::operation::get_application_access_scope::builders::GetApplicationAccessScopeFluentBuilder::scope) / [`set_scope(Option<String>)`](crate::operation::get_application_access_scope::builders::GetApplicationAccessScopeFluentBuilder::set_scope):<br>required: **true**<br><p>Specifies the name of the access scope for which you want the authorized targets.</p><br>
    /// - On success, responds with [`GetApplicationAccessScopeOutput`](crate::operation::get_application_access_scope::GetApplicationAccessScopeOutput) with field(s):
    ///   - [`scope(String)`](crate::operation::get_application_access_scope::GetApplicationAccessScopeOutput::scope): <p>The name of the access scope that can be used with the authorized targets.</p>
    ///   - [`authorized_targets(Option<Vec::<String>>)`](crate::operation::get_application_access_scope::GetApplicationAccessScopeOutput::authorized_targets): <p>An array of authorized targets associated with this access scope.</p>
    /// - On failure, responds with [`SdkError<GetApplicationAccessScopeError>`](crate::operation::get_application_access_scope::GetApplicationAccessScopeError)
    pub fn get_application_access_scope(&self) -> crate::operation::get_application_access_scope::builders::GetApplicationAccessScopeFluentBuilder {
        crate::operation::get_application_access_scope::builders::GetApplicationAccessScopeFluentBuilder::new(self.handle.clone())
    }
}
