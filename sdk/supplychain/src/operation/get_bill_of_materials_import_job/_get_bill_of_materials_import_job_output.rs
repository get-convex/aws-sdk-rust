// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The response parameters for GetBillOfMaterialsImportJob.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetBillOfMaterialsImportJobOutput {
    /// <p>The BillOfMaterialsImportJob.</p>
    pub job: ::std::option::Option<crate::types::BillOfMaterialsImportJob>,
    _request_id: Option<String>,
}
impl GetBillOfMaterialsImportJobOutput {
    /// <p>The BillOfMaterialsImportJob.</p>
    pub fn job(&self) -> ::std::option::Option<&crate::types::BillOfMaterialsImportJob> {
        self.job.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetBillOfMaterialsImportJobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetBillOfMaterialsImportJobOutput {
    /// Creates a new builder-style object to manufacture [`GetBillOfMaterialsImportJobOutput`](crate::operation::get_bill_of_materials_import_job::GetBillOfMaterialsImportJobOutput).
    pub fn builder() -> crate::operation::get_bill_of_materials_import_job::builders::GetBillOfMaterialsImportJobOutputBuilder {
        crate::operation::get_bill_of_materials_import_job::builders::GetBillOfMaterialsImportJobOutputBuilder::default()
    }
}

/// A builder for [`GetBillOfMaterialsImportJobOutput`](crate::operation::get_bill_of_materials_import_job::GetBillOfMaterialsImportJobOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetBillOfMaterialsImportJobOutputBuilder {
    pub(crate) job: ::std::option::Option<crate::types::BillOfMaterialsImportJob>,
    _request_id: Option<String>,
}
impl GetBillOfMaterialsImportJobOutputBuilder {
    /// <p>The BillOfMaterialsImportJob.</p>
    /// This field is required.
    pub fn job(mut self, input: crate::types::BillOfMaterialsImportJob) -> Self {
        self.job = ::std::option::Option::Some(input);
        self
    }
    /// <p>The BillOfMaterialsImportJob.</p>
    pub fn set_job(mut self, input: ::std::option::Option<crate::types::BillOfMaterialsImportJob>) -> Self {
        self.job = input;
        self
    }
    /// <p>The BillOfMaterialsImportJob.</p>
    pub fn get_job(&self) -> &::std::option::Option<crate::types::BillOfMaterialsImportJob> {
        &self.job
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetBillOfMaterialsImportJobOutput`](crate::operation::get_bill_of_materials_import_job::GetBillOfMaterialsImportJobOutput).
    pub fn build(self) -> crate::operation::get_bill_of_materials_import_job::GetBillOfMaterialsImportJobOutput {
        crate::operation::get_bill_of_materials_import_job::GetBillOfMaterialsImportJobOutput {
            job: self.job,
            _request_id: self._request_id,
        }
    }
}
