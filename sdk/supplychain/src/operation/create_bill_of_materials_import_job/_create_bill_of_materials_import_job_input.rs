// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The request parameters for CreateBillOfMaterialsImportJob.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateBillOfMaterialsImportJobInput {
    /// <p>The AWS Supply Chain instance identifier.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// <p>The S3 URI of the CSV file to be imported. The bucket must grant permissions for AWS Supply Chain to read the file.</p>
    pub s3_uri: ::std::option::Option<::std::string::String>,
    /// <p>An idempotency token.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl CreateBillOfMaterialsImportJobInput {
    /// <p>The AWS Supply Chain instance identifier.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The S3 URI of the CSV file to be imported. The bucket must grant permissions for AWS Supply Chain to read the file.</p>
    pub fn s3_uri(&self) -> ::std::option::Option<&str> {
        self.s3_uri.as_deref()
    }
    /// <p>An idempotency token.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl CreateBillOfMaterialsImportJobInput {
    /// Creates a new builder-style object to manufacture [`CreateBillOfMaterialsImportJobInput`](crate::operation::create_bill_of_materials_import_job::CreateBillOfMaterialsImportJobInput).
    pub fn builder() -> crate::operation::create_bill_of_materials_import_job::builders::CreateBillOfMaterialsImportJobInputBuilder {
        crate::operation::create_bill_of_materials_import_job::builders::CreateBillOfMaterialsImportJobInputBuilder::default()
    }
}

/// A builder for [`CreateBillOfMaterialsImportJobInput`](crate::operation::create_bill_of_materials_import_job::CreateBillOfMaterialsImportJobInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateBillOfMaterialsImportJobInputBuilder {
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) s3_uri: ::std::option::Option<::std::string::String>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl CreateBillOfMaterialsImportJobInputBuilder {
    /// <p>The AWS Supply Chain instance identifier.</p>
    /// This field is required.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The AWS Supply Chain instance identifier.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The AWS Supply Chain instance identifier.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// <p>The S3 URI of the CSV file to be imported. The bucket must grant permissions for AWS Supply Chain to read the file.</p>
    /// This field is required.
    pub fn s3_uri(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s3_uri = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The S3 URI of the CSV file to be imported. The bucket must grant permissions for AWS Supply Chain to read the file.</p>
    pub fn set_s3_uri(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s3_uri = input;
        self
    }
    /// <p>The S3 URI of the CSV file to be imported. The bucket must grant permissions for AWS Supply Chain to read the file.</p>
    pub fn get_s3_uri(&self) -> &::std::option::Option<::std::string::String> {
        &self.s3_uri
    }
    /// <p>An idempotency token.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An idempotency token.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>An idempotency token.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`CreateBillOfMaterialsImportJobInput`](crate::operation::create_bill_of_materials_import_job::CreateBillOfMaterialsImportJobInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_bill_of_materials_import_job::CreateBillOfMaterialsImportJobInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::create_bill_of_materials_import_job::CreateBillOfMaterialsImportJobInput {
                instance_id: self.instance_id,
                s3_uri: self.s3_uri,
                client_token: self.client_token,
            },
        )
    }
}
