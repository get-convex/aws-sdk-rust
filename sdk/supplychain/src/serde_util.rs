// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn create_bill_of_materials_import_job_output_output_correct_errors(
    mut builder: crate::operation::create_bill_of_materials_import_job::builders::CreateBillOfMaterialsImportJobOutputBuilder,
) -> crate::operation::create_bill_of_materials_import_job::builders::CreateBillOfMaterialsImportJobOutputBuilder {
    if builder.job_id.is_none() {
        builder.job_id = Some(Default::default())
    }
    builder
}

pub(crate) fn get_bill_of_materials_import_job_output_output_correct_errors(
    mut builder: crate::operation::get_bill_of_materials_import_job::builders::GetBillOfMaterialsImportJobOutputBuilder,
) -> crate::operation::get_bill_of_materials_import_job::builders::GetBillOfMaterialsImportJobOutputBuilder {
    if builder.job.is_none() {
        builder.job = {
            let builder = crate::types::builders::BillOfMaterialsImportJobBuilder::default();
            crate::serde_util::bill_of_materials_import_job_correct_errors(builder).build().ok()
        }
    }
    builder
}

pub(crate) fn bill_of_materials_import_job_correct_errors(
    mut builder: crate::types::builders::BillOfMaterialsImportJobBuilder,
) -> crate::types::builders::BillOfMaterialsImportJobBuilder {
    if builder.instance_id.is_none() {
        builder.instance_id = Some(Default::default())
    }
    if builder.job_id.is_none() {
        builder.job_id = Some(Default::default())
    }
    if builder.status.is_none() {
        builder.status = "no value was set".parse::<crate::types::ConfigurationJobStatus>().ok()
    }
    if builder.s3_uri.is_none() {
        builder.s3_uri = Some(Default::default())
    }
    builder
}
