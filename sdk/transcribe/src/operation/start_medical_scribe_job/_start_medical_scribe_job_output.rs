// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartMedicalScribeJobOutput {
    /// <p>Provides detailed information about the current Medical Scribe job, including job status and, if applicable, failure reason.</p>
    pub medical_scribe_job: ::std::option::Option<crate::types::MedicalScribeJob>,
    _request_id: Option<String>,
}
impl StartMedicalScribeJobOutput {
    /// <p>Provides detailed information about the current Medical Scribe job, including job status and, if applicable, failure reason.</p>
    pub fn medical_scribe_job(&self) -> ::std::option::Option<&crate::types::MedicalScribeJob> {
        self.medical_scribe_job.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for StartMedicalScribeJobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl StartMedicalScribeJobOutput {
    /// Creates a new builder-style object to manufacture [`StartMedicalScribeJobOutput`](crate::operation::start_medical_scribe_job::StartMedicalScribeJobOutput).
    pub fn builder() -> crate::operation::start_medical_scribe_job::builders::StartMedicalScribeJobOutputBuilder {
        crate::operation::start_medical_scribe_job::builders::StartMedicalScribeJobOutputBuilder::default()
    }
}

/// A builder for [`StartMedicalScribeJobOutput`](crate::operation::start_medical_scribe_job::StartMedicalScribeJobOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StartMedicalScribeJobOutputBuilder {
    pub(crate) medical_scribe_job: ::std::option::Option<crate::types::MedicalScribeJob>,
    _request_id: Option<String>,
}
impl StartMedicalScribeJobOutputBuilder {
    /// <p>Provides detailed information about the current Medical Scribe job, including job status and, if applicable, failure reason.</p>
    pub fn medical_scribe_job(mut self, input: crate::types::MedicalScribeJob) -> Self {
        self.medical_scribe_job = ::std::option::Option::Some(input);
        self
    }
    /// <p>Provides detailed information about the current Medical Scribe job, including job status and, if applicable, failure reason.</p>
    pub fn set_medical_scribe_job(mut self, input: ::std::option::Option<crate::types::MedicalScribeJob>) -> Self {
        self.medical_scribe_job = input;
        self
    }
    /// <p>Provides detailed information about the current Medical Scribe job, including job status and, if applicable, failure reason.</p>
    pub fn get_medical_scribe_job(&self) -> &::std::option::Option<crate::types::MedicalScribeJob> {
        &self.medical_scribe_job
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`StartMedicalScribeJobOutput`](crate::operation::start_medical_scribe_job::StartMedicalScribeJobOutput).
    pub fn build(self) -> crate::operation::start_medical_scribe_job::StartMedicalScribeJobOutput {
        crate::operation::start_medical_scribe_job::StartMedicalScribeJobOutput {
            medical_scribe_job: self.medical_scribe_job,
            _request_id: self._request_id,
        }
    }
}
