// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_entity_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_entity::CreateEntityInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.components {
        #[allow(unused_mut)]
        let mut object_2 = object.key("components").start_object();
        for (key_3, value_4) in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_5 = object_2.key(key_3.as_str()).start_object();
                crate::protocol_serde::shape_component_request::ser_component_request(&mut object_5, value_4)?;
                object_5.finish();
            }
        }
        object_2.finish();
    }
    if let Some(var_6) = &input.composite_components {
        #[allow(unused_mut)]
        let mut object_7 = object.key("compositeComponents").start_object();
        for (key_8, value_9) in var_6 {
            {
                #[allow(unused_mut)]
                let mut object_10 = object_7.key(key_8.as_str()).start_object();
                crate::protocol_serde::shape_composite_component_request::ser_composite_component_request(&mut object_10, value_9)?;
                object_10.finish();
            }
        }
        object_7.finish();
    }
    if let Some(var_11) = &input.description {
        object.key("description").string(var_11.as_str());
    }
    if let Some(var_12) = &input.entity_id {
        object.key("entityId").string(var_12.as_str());
    }
    if let Some(var_13) = &input.entity_name {
        object.key("entityName").string(var_13.as_str());
    }
    if let Some(var_14) = &input.parent_entity_id {
        object.key("parentEntityId").string(var_14.as_str());
    }
    if let Some(var_15) = &input.tags {
        #[allow(unused_mut)]
        let mut object_16 = object.key("tags").start_object();
        for (key_17, value_18) in var_15 {
            {
                object_16.key(key_17.as_str()).string(value_18.as_str());
            }
        }
        object_16.finish();
    }
    Ok(())
}
