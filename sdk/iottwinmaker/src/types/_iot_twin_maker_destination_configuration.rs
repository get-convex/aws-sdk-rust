// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The metadata transfer job AWS IoT TwinMaker destination configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IotTwinMakerDestinationConfiguration {
    /// <p>The IoT TwinMaker workspace.</p>
    pub workspace: ::std::string::String,
}
impl IotTwinMakerDestinationConfiguration {
    /// <p>The IoT TwinMaker workspace.</p>
    pub fn workspace(&self) -> &str {
        use std::ops::Deref;
        self.workspace.deref()
    }
}
impl IotTwinMakerDestinationConfiguration {
    /// Creates a new builder-style object to manufacture [`IotTwinMakerDestinationConfiguration`](crate::types::IotTwinMakerDestinationConfiguration).
    pub fn builder() -> crate::types::builders::IotTwinMakerDestinationConfigurationBuilder {
        crate::types::builders::IotTwinMakerDestinationConfigurationBuilder::default()
    }
}

/// A builder for [`IotTwinMakerDestinationConfiguration`](crate::types::IotTwinMakerDestinationConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IotTwinMakerDestinationConfigurationBuilder {
    pub(crate) workspace: ::std::option::Option<::std::string::String>,
}
impl IotTwinMakerDestinationConfigurationBuilder {
    /// <p>The IoT TwinMaker workspace.</p>
    /// This field is required.
    pub fn workspace(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workspace = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The IoT TwinMaker workspace.</p>
    pub fn set_workspace(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workspace = input;
        self
    }
    /// <p>The IoT TwinMaker workspace.</p>
    pub fn get_workspace(&self) -> &::std::option::Option<::std::string::String> {
        &self.workspace
    }
    /// Consumes the builder and constructs a [`IotTwinMakerDestinationConfiguration`](crate::types::IotTwinMakerDestinationConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`workspace`](crate::types::builders::IotTwinMakerDestinationConfigurationBuilder::workspace)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::IotTwinMakerDestinationConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::IotTwinMakerDestinationConfiguration {
            workspace: self.workspace.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "workspace",
                    "workspace was not specified but it is required when building IotTwinMakerDestinationConfiguration",
                )
            })?,
        })
    }
}
