// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The S3 destination configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct S3DestinationConfiguration {
    /// <p>The S3 destination configuration location.</p>
    pub location: ::std::string::String,
}
impl S3DestinationConfiguration {
    /// <p>The S3 destination configuration location.</p>
    pub fn location(&self) -> &str {
        use std::ops::Deref;
        self.location.deref()
    }
}
impl S3DestinationConfiguration {
    /// Creates a new builder-style object to manufacture [`S3DestinationConfiguration`](crate::types::S3DestinationConfiguration).
    pub fn builder() -> crate::types::builders::S3DestinationConfigurationBuilder {
        crate::types::builders::S3DestinationConfigurationBuilder::default()
    }
}

/// A builder for [`S3DestinationConfiguration`](crate::types::S3DestinationConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct S3DestinationConfigurationBuilder {
    pub(crate) location: ::std::option::Option<::std::string::String>,
}
impl S3DestinationConfigurationBuilder {
    /// <p>The S3 destination configuration location.</p>
    /// This field is required.
    pub fn location(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.location = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The S3 destination configuration location.</p>
    pub fn set_location(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.location = input;
        self
    }
    /// <p>The S3 destination configuration location.</p>
    pub fn get_location(&self) -> &::std::option::Option<::std::string::String> {
        &self.location
    }
    /// Consumes the builder and constructs a [`S3DestinationConfiguration`](crate::types::S3DestinationConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`location`](crate::types::builders::S3DestinationConfigurationBuilder::location)
    pub fn build(self) -> ::std::result::Result<crate::types::S3DestinationConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::S3DestinationConfiguration {
            location: self.location.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "location",
                    "location was not specified but it is required when building S3DestinationConfiguration",
                )
            })?,
        })
    }
}
