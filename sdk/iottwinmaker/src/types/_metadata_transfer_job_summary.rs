// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The metadata transfer job summary.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MetadataTransferJobSummary {
    /// <p>The metadata transfer job summary Id.</p>
    pub metadata_transfer_job_id: ::std::string::String,
    /// <p>The metadata transfer job summary ARN.</p>
    pub arn: ::std::string::String,
    /// <p>The metadata transfer job summary creation DateTime object.</p>
    pub creation_date_time: ::aws_smithy_types::DateTime,
    /// <p>The metadata transfer job summary update DateTime object</p>
    pub update_date_time: ::aws_smithy_types::DateTime,
    /// <p>The metadata transfer job summary status.</p>
    pub status: ::std::option::Option<crate::types::MetadataTransferJobStatus>,
    /// <p>The metadata transfer job summary progess.</p>
    pub progress: ::std::option::Option<crate::types::MetadataTransferJobProgress>,
}
impl MetadataTransferJobSummary {
    /// <p>The metadata transfer job summary Id.</p>
    pub fn metadata_transfer_job_id(&self) -> &str {
        use std::ops::Deref;
        self.metadata_transfer_job_id.deref()
    }
    /// <p>The metadata transfer job summary ARN.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The metadata transfer job summary creation DateTime object.</p>
    pub fn creation_date_time(&self) -> &::aws_smithy_types::DateTime {
        &self.creation_date_time
    }
    /// <p>The metadata transfer job summary update DateTime object</p>
    pub fn update_date_time(&self) -> &::aws_smithy_types::DateTime {
        &self.update_date_time
    }
    /// <p>The metadata transfer job summary status.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::MetadataTransferJobStatus> {
        self.status.as_ref()
    }
    /// <p>The metadata transfer job summary progess.</p>
    pub fn progress(&self) -> ::std::option::Option<&crate::types::MetadataTransferJobProgress> {
        self.progress.as_ref()
    }
}
impl MetadataTransferJobSummary {
    /// Creates a new builder-style object to manufacture [`MetadataTransferJobSummary`](crate::types::MetadataTransferJobSummary).
    pub fn builder() -> crate::types::builders::MetadataTransferJobSummaryBuilder {
        crate::types::builders::MetadataTransferJobSummaryBuilder::default()
    }
}

/// A builder for [`MetadataTransferJobSummary`](crate::types::MetadataTransferJobSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MetadataTransferJobSummaryBuilder {
    pub(crate) metadata_transfer_job_id: ::std::option::Option<::std::string::String>,
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) creation_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) update_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::MetadataTransferJobStatus>,
    pub(crate) progress: ::std::option::Option<crate::types::MetadataTransferJobProgress>,
}
impl MetadataTransferJobSummaryBuilder {
    /// <p>The metadata transfer job summary Id.</p>
    /// This field is required.
    pub fn metadata_transfer_job_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.metadata_transfer_job_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The metadata transfer job summary Id.</p>
    pub fn set_metadata_transfer_job_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.metadata_transfer_job_id = input;
        self
    }
    /// <p>The metadata transfer job summary Id.</p>
    pub fn get_metadata_transfer_job_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.metadata_transfer_job_id
    }
    /// <p>The metadata transfer job summary ARN.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The metadata transfer job summary ARN.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The metadata transfer job summary ARN.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The metadata transfer job summary creation DateTime object.</p>
    /// This field is required.
    pub fn creation_date_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_date_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The metadata transfer job summary creation DateTime object.</p>
    pub fn set_creation_date_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_date_time = input;
        self
    }
    /// <p>The metadata transfer job summary creation DateTime object.</p>
    pub fn get_creation_date_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_date_time
    }
    /// <p>The metadata transfer job summary update DateTime object</p>
    /// This field is required.
    pub fn update_date_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.update_date_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The metadata transfer job summary update DateTime object</p>
    pub fn set_update_date_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.update_date_time = input;
        self
    }
    /// <p>The metadata transfer job summary update DateTime object</p>
    pub fn get_update_date_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.update_date_time
    }
    /// <p>The metadata transfer job summary status.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::MetadataTransferJobStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The metadata transfer job summary status.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::MetadataTransferJobStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The metadata transfer job summary status.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::MetadataTransferJobStatus> {
        &self.status
    }
    /// <p>The metadata transfer job summary progess.</p>
    pub fn progress(mut self, input: crate::types::MetadataTransferJobProgress) -> Self {
        self.progress = ::std::option::Option::Some(input);
        self
    }
    /// <p>The metadata transfer job summary progess.</p>
    pub fn set_progress(mut self, input: ::std::option::Option<crate::types::MetadataTransferJobProgress>) -> Self {
        self.progress = input;
        self
    }
    /// <p>The metadata transfer job summary progess.</p>
    pub fn get_progress(&self) -> &::std::option::Option<crate::types::MetadataTransferJobProgress> {
        &self.progress
    }
    /// Consumes the builder and constructs a [`MetadataTransferJobSummary`](crate::types::MetadataTransferJobSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`metadata_transfer_job_id`](crate::types::builders::MetadataTransferJobSummaryBuilder::metadata_transfer_job_id)
    /// - [`arn`](crate::types::builders::MetadataTransferJobSummaryBuilder::arn)
    /// - [`creation_date_time`](crate::types::builders::MetadataTransferJobSummaryBuilder::creation_date_time)
    /// - [`update_date_time`](crate::types::builders::MetadataTransferJobSummaryBuilder::update_date_time)
    pub fn build(self) -> ::std::result::Result<crate::types::MetadataTransferJobSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MetadataTransferJobSummary {
            metadata_transfer_job_id: self.metadata_transfer_job_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "metadata_transfer_job_id",
                    "metadata_transfer_job_id was not specified but it is required when building MetadataTransferJobSummary",
                )
            })?,
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building MetadataTransferJobSummary",
                )
            })?,
            creation_date_time: self.creation_date_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "creation_date_time",
                    "creation_date_time was not specified but it is required when building MetadataTransferJobSummary",
                )
            })?,
            update_date_time: self.update_date_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "update_date_time",
                    "update_date_time was not specified but it is required when building MetadataTransferJobSummary",
                )
            })?,
            status: self.status,
            progress: self.progress,
        })
    }
}
