// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains information about a property response.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PropertyResponse {
    /// <p>An object that specifies information about a property.</p>
    pub definition: ::std::option::Option<crate::types::PropertyDefinitionResponse>,
    /// <p>The value of the property.</p>
    pub value: ::std::option::Option<crate::types::DataValue>,
    /// <p>This flag notes whether all values of a list or map type property are returned in the API response. The maximum number of values per property returned is 50.</p>
    pub are_all_property_values_returned: ::std::option::Option<bool>,
}
impl PropertyResponse {
    /// <p>An object that specifies information about a property.</p>
    pub fn definition(&self) -> ::std::option::Option<&crate::types::PropertyDefinitionResponse> {
        self.definition.as_ref()
    }
    /// <p>The value of the property.</p>
    pub fn value(&self) -> ::std::option::Option<&crate::types::DataValue> {
        self.value.as_ref()
    }
    /// <p>This flag notes whether all values of a list or map type property are returned in the API response. The maximum number of values per property returned is 50.</p>
    pub fn are_all_property_values_returned(&self) -> ::std::option::Option<bool> {
        self.are_all_property_values_returned
    }
}
impl PropertyResponse {
    /// Creates a new builder-style object to manufacture [`PropertyResponse`](crate::types::PropertyResponse).
    pub fn builder() -> crate::types::builders::PropertyResponseBuilder {
        crate::types::builders::PropertyResponseBuilder::default()
    }
}

/// A builder for [`PropertyResponse`](crate::types::PropertyResponse).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PropertyResponseBuilder {
    pub(crate) definition: ::std::option::Option<crate::types::PropertyDefinitionResponse>,
    pub(crate) value: ::std::option::Option<crate::types::DataValue>,
    pub(crate) are_all_property_values_returned: ::std::option::Option<bool>,
}
impl PropertyResponseBuilder {
    /// <p>An object that specifies information about a property.</p>
    pub fn definition(mut self, input: crate::types::PropertyDefinitionResponse) -> Self {
        self.definition = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object that specifies information about a property.</p>
    pub fn set_definition(mut self, input: ::std::option::Option<crate::types::PropertyDefinitionResponse>) -> Self {
        self.definition = input;
        self
    }
    /// <p>An object that specifies information about a property.</p>
    pub fn get_definition(&self) -> &::std::option::Option<crate::types::PropertyDefinitionResponse> {
        &self.definition
    }
    /// <p>The value of the property.</p>
    pub fn value(mut self, input: crate::types::DataValue) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>The value of the property.</p>
    pub fn set_value(mut self, input: ::std::option::Option<crate::types::DataValue>) -> Self {
        self.value = input;
        self
    }
    /// <p>The value of the property.</p>
    pub fn get_value(&self) -> &::std::option::Option<crate::types::DataValue> {
        &self.value
    }
    /// <p>This flag notes whether all values of a list or map type property are returned in the API response. The maximum number of values per property returned is 50.</p>
    pub fn are_all_property_values_returned(mut self, input: bool) -> Self {
        self.are_all_property_values_returned = ::std::option::Option::Some(input);
        self
    }
    /// <p>This flag notes whether all values of a list or map type property are returned in the API response. The maximum number of values per property returned is 50.</p>
    pub fn set_are_all_property_values_returned(mut self, input: ::std::option::Option<bool>) -> Self {
        self.are_all_property_values_returned = input;
        self
    }
    /// <p>This flag notes whether all values of a list or map type property are returned in the API response. The maximum number of values per property returned is 50.</p>
    pub fn get_are_all_property_values_returned(&self) -> &::std::option::Option<bool> {
        &self.are_all_property_values_returned
    }
    /// Consumes the builder and constructs a [`PropertyResponse`](crate::types::PropertyResponse).
    pub fn build(self) -> crate::types::PropertyResponse {
        crate::types::PropertyResponse {
            definition: self.definition,
            value: self.value,
            are_all_property_values_returned: self.are_all_property_values_returned,
        }
    }
}
