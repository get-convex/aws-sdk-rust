// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_restore_testing_selection_for_update(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::RestoreTestingSelectionForUpdate,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.iam_role_arn {
        object.key("IamRoleArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.protected_resource_arns {
        let mut array_3 = object.key("ProtectedResourceArns").start_array();
        for item_4 in var_2 {
            {
                array_3.value().string(item_4.as_str());
            }
        }
        array_3.finish();
    }
    if let Some(var_5) = &input.protected_resource_conditions {
        #[allow(unused_mut)]
        let mut object_6 = object.key("ProtectedResourceConditions").start_object();
        crate::protocol_serde::shape_protected_resource_conditions::ser_protected_resource_conditions(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.restore_metadata_overrides {
        #[allow(unused_mut)]
        let mut object_8 = object.key("RestoreMetadataOverrides").start_object();
        for (key_9, value_10) in var_7 {
            {
                object_8.key(key_9.as_str()).string(value_10.as_str());
            }
        }
        object_8.finish();
    }
    if input.validation_window_hours != 0 {
        object.key("ValidationWindowHours").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((input.validation_window_hours).into()),
        );
    }
    Ok(())
}
