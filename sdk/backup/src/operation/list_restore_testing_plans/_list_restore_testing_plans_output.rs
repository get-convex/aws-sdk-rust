// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListRestoreTestingPlansOutput {
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>MaxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the nexttoken.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>This is a returned list of restore testing plans.</p>
    pub restore_testing_plans: ::std::vec::Vec<crate::types::RestoreTestingPlanForList>,
    _request_id: Option<String>,
}
impl ListRestoreTestingPlansOutput {
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>MaxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the nexttoken.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>This is a returned list of restore testing plans.</p>
    pub fn restore_testing_plans(&self) -> &[crate::types::RestoreTestingPlanForList] {
        use std::ops::Deref;
        self.restore_testing_plans.deref()
    }
}
impl ::aws_types::request_id::RequestId for ListRestoreTestingPlansOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListRestoreTestingPlansOutput {
    /// Creates a new builder-style object to manufacture [`ListRestoreTestingPlansOutput`](crate::operation::list_restore_testing_plans::ListRestoreTestingPlansOutput).
    pub fn builder() -> crate::operation::list_restore_testing_plans::builders::ListRestoreTestingPlansOutputBuilder {
        crate::operation::list_restore_testing_plans::builders::ListRestoreTestingPlansOutputBuilder::default()
    }
}

/// A builder for [`ListRestoreTestingPlansOutput`](crate::operation::list_restore_testing_plans::ListRestoreTestingPlansOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListRestoreTestingPlansOutputBuilder {
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) restore_testing_plans: ::std::option::Option<::std::vec::Vec<crate::types::RestoreTestingPlanForList>>,
    _request_id: Option<String>,
}
impl ListRestoreTestingPlansOutputBuilder {
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>MaxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the nexttoken.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>MaxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the nexttoken.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>MaxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the nexttoken.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Appends an item to `restore_testing_plans`.
    ///
    /// To override the contents of this collection use [`set_restore_testing_plans`](Self::set_restore_testing_plans).
    ///
    /// <p>This is a returned list of restore testing plans.</p>
    pub fn restore_testing_plans(mut self, input: crate::types::RestoreTestingPlanForList) -> Self {
        let mut v = self.restore_testing_plans.unwrap_or_default();
        v.push(input);
        self.restore_testing_plans = ::std::option::Option::Some(v);
        self
    }
    /// <p>This is a returned list of restore testing plans.</p>
    pub fn set_restore_testing_plans(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::RestoreTestingPlanForList>>) -> Self {
        self.restore_testing_plans = input;
        self
    }
    /// <p>This is a returned list of restore testing plans.</p>
    pub fn get_restore_testing_plans(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::RestoreTestingPlanForList>> {
        &self.restore_testing_plans
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListRestoreTestingPlansOutput`](crate::operation::list_restore_testing_plans::ListRestoreTestingPlansOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`restore_testing_plans`](crate::operation::list_restore_testing_plans::builders::ListRestoreTestingPlansOutputBuilder::restore_testing_plans)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_restore_testing_plans::ListRestoreTestingPlansOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_restore_testing_plans::ListRestoreTestingPlansOutput {
            next_token: self.next_token,
            restore_testing_plans: self.restore_testing_plans.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "restore_testing_plans",
                    "restore_testing_plans was not specified but it is required when building ListRestoreTestingPlansOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
