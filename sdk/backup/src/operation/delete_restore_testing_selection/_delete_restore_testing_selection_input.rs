// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteRestoreTestingSelectionInput {
    /// <p>Required unique name of the restore testing plan that contains the restore testing selection you wish to delete.</p>
    pub restore_testing_plan_name: ::std::option::Option<::std::string::String>,
    /// <p>Required unique name of the restore testing selection you wish to delete.</p>
    pub restore_testing_selection_name: ::std::option::Option<::std::string::String>,
}
impl DeleteRestoreTestingSelectionInput {
    /// <p>Required unique name of the restore testing plan that contains the restore testing selection you wish to delete.</p>
    pub fn restore_testing_plan_name(&self) -> ::std::option::Option<&str> {
        self.restore_testing_plan_name.as_deref()
    }
    /// <p>Required unique name of the restore testing selection you wish to delete.</p>
    pub fn restore_testing_selection_name(&self) -> ::std::option::Option<&str> {
        self.restore_testing_selection_name.as_deref()
    }
}
impl DeleteRestoreTestingSelectionInput {
    /// Creates a new builder-style object to manufacture [`DeleteRestoreTestingSelectionInput`](crate::operation::delete_restore_testing_selection::DeleteRestoreTestingSelectionInput).
    pub fn builder() -> crate::operation::delete_restore_testing_selection::builders::DeleteRestoreTestingSelectionInputBuilder {
        crate::operation::delete_restore_testing_selection::builders::DeleteRestoreTestingSelectionInputBuilder::default()
    }
}

/// A builder for [`DeleteRestoreTestingSelectionInput`](crate::operation::delete_restore_testing_selection::DeleteRestoreTestingSelectionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteRestoreTestingSelectionInputBuilder {
    pub(crate) restore_testing_plan_name: ::std::option::Option<::std::string::String>,
    pub(crate) restore_testing_selection_name: ::std::option::Option<::std::string::String>,
}
impl DeleteRestoreTestingSelectionInputBuilder {
    /// <p>Required unique name of the restore testing plan that contains the restore testing selection you wish to delete.</p>
    /// This field is required.
    pub fn restore_testing_plan_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.restore_testing_plan_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Required unique name of the restore testing plan that contains the restore testing selection you wish to delete.</p>
    pub fn set_restore_testing_plan_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.restore_testing_plan_name = input;
        self
    }
    /// <p>Required unique name of the restore testing plan that contains the restore testing selection you wish to delete.</p>
    pub fn get_restore_testing_plan_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.restore_testing_plan_name
    }
    /// <p>Required unique name of the restore testing selection you wish to delete.</p>
    /// This field is required.
    pub fn restore_testing_selection_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.restore_testing_selection_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Required unique name of the restore testing selection you wish to delete.</p>
    pub fn set_restore_testing_selection_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.restore_testing_selection_name = input;
        self
    }
    /// <p>Required unique name of the restore testing selection you wish to delete.</p>
    pub fn get_restore_testing_selection_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.restore_testing_selection_name
    }
    /// Consumes the builder and constructs a [`DeleteRestoreTestingSelectionInput`](crate::operation::delete_restore_testing_selection::DeleteRestoreTestingSelectionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_restore_testing_selection::DeleteRestoreTestingSelectionInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_restore_testing_selection::DeleteRestoreTestingSelectionInput {
            restore_testing_plan_name: self.restore_testing_plan_name,
            restore_testing_selection_name: self.restore_testing_selection_name,
        })
    }
}
