// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetDataSourceIntrospection`](crate::operation::get_data_source_introspection::builders::GetDataSourceIntrospectionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`introspection_id(impl Into<String>)`](crate::operation::get_data_source_introspection::builders::GetDataSourceIntrospectionFluentBuilder::introspection_id) / [`set_introspection_id(Option<String>)`](crate::operation::get_data_source_introspection::builders::GetDataSourceIntrospectionFluentBuilder::set_introspection_id):<br>required: **true**<br><p>The introspection ID. Each introspection contains a unique ID that can be used to reference the instrospection record.</p><br>
    ///   - [`include_models_sdl(bool)`](crate::operation::get_data_source_introspection::builders::GetDataSourceIntrospectionFluentBuilder::include_models_sdl) / [`set_include_models_sdl(Option<bool>)`](crate::operation::get_data_source_introspection::builders::GetDataSourceIntrospectionFluentBuilder::set_include_models_sdl):<br>required: **false**<br><p>A boolean flag that determines whether SDL should be generated for introspected types or not. If set to <code>true</code>, each model will contain an <code>sdl</code> property that contains the SDL for that type. The SDL only contains the type data and no additional metadata or directives.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_data_source_introspection::builders::GetDataSourceIntrospectionFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_data_source_introspection::builders::GetDataSourceIntrospectionFluentBuilder::set_next_token):<br>required: **false**<br><p>Determines the number of types to be returned in a single response before paginating. This value is typically taken from <code>nextToken</code> value from the previous response.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_data_source_introspection::builders::GetDataSourceIntrospectionFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_data_source_introspection::builders::GetDataSourceIntrospectionFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of introspected types that will be returned in a single response.</p><br>
    /// - On success, responds with [`GetDataSourceIntrospectionOutput`](crate::operation::get_data_source_introspection::GetDataSourceIntrospectionOutput) with field(s):
    ///   - [`introspection_id(Option<String>)`](crate::operation::get_data_source_introspection::GetDataSourceIntrospectionOutput::introspection_id): <p>The introspection ID. Each introspection contains a unique ID that can be used to reference the instrospection record.</p>
    ///   - [`introspection_status(Option<DataSourceIntrospectionStatus>)`](crate::operation::get_data_source_introspection::GetDataSourceIntrospectionOutput::introspection_status): <p>The status of the introspection during retrieval. By default, when a new instrospection is being retrieved, the status will be set to <code>PROCESSING</code>. Once the operation has been completed, the status will change to <code>SUCCESS</code> or <code>FAILED</code> depending on how the data was parsed. A <code>FAILED</code> operation will return an error and its details as an <code>introspectionStatusDetail</code>.</p>
    ///   - [`introspection_status_detail(Option<String>)`](crate::operation::get_data_source_introspection::GetDataSourceIntrospectionOutput::introspection_status_detail): <p>The error detail field. When a <code>FAILED</code> <code>introspectionStatus</code> is returned, the <code>introspectionStatusDetail</code> will also return the exact error that was generated during the operation.</p>
    ///   - [`introspection_result(Option<DataSourceIntrospectionResult>)`](crate::operation::get_data_source_introspection::GetDataSourceIntrospectionOutput::introspection_result): <p>The <code>DataSourceIntrospectionResult</code> object data.</p>
    /// - On failure, responds with [`SdkError<GetDataSourceIntrospectionError>`](crate::operation::get_data_source_introspection::GetDataSourceIntrospectionError)
    pub fn get_data_source_introspection(
        &self,
    ) -> crate::operation::get_data_source_introspection::builders::GetDataSourceIntrospectionFluentBuilder {
        crate::operation::get_data_source_introspection::builders::GetDataSourceIntrospectionFluentBuilder::new(self.handle.clone())
    }
}
