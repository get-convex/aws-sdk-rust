// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_quick_response_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_quick_response::UpdateQuickResponseInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.channels {
        let mut array_2 = object.key("channels").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.content {
        #[allow(unused_mut)]
        let mut object_5 = object.key("content").start_object();
        crate::protocol_serde::shape_quick_response_data_provider::ser_quick_response_data_provider(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.content_type {
        object.key("contentType").string(var_6.as_str());
    }
    if let Some(var_7) = &input.description {
        object.key("description").string(var_7.as_str());
    }
    if let Some(var_8) = &input.grouping_configuration {
        #[allow(unused_mut)]
        let mut object_9 = object.key("groupingConfiguration").start_object();
        crate::protocol_serde::shape_grouping_configuration::ser_grouping_configuration(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.is_active {
        object.key("isActive").boolean(*var_10);
    }
    if let Some(var_11) = &input.language {
        object.key("language").string(var_11.as_str());
    }
    if let Some(var_12) = &input.name {
        object.key("name").string(var_12.as_str());
    }
    if let Some(var_13) = &input.remove_description {
        object.key("removeDescription").boolean(*var_13);
    }
    if let Some(var_14) = &input.remove_grouping_configuration {
        object.key("removeGroupingConfiguration").boolean(*var_14);
    }
    if let Some(var_15) = &input.remove_shortcut_key {
        object.key("removeShortcutKey").boolean(*var_15);
    }
    if let Some(var_16) = &input.shortcut_key {
        object.key("shortcutKey").string(var_16.as_str());
    }
    Ok(())
}
