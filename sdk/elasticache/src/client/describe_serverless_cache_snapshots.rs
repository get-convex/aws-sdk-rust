// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeServerlessCacheSnapshots`](crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`serverless_cache_name(impl Into<String>)`](crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder::serverless_cache_name) / [`set_serverless_cache_name(Option<String>)`](crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder::set_serverless_cache_name):<br>required: **false**<br><p>The identifier of serverless cache. If this parameter is specified, only snapshots associated with that specific serverless cache are described. Available for Redis only.</p><br>
    ///   - [`serverless_cache_snapshot_name(impl Into<String>)`](crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder::serverless_cache_snapshot_name) / [`set_serverless_cache_snapshot_name(Option<String>)`](crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder::set_serverless_cache_snapshot_name):<br>required: **false**<br><p>The identifier of the serverless cacheâ€™s snapshot. If this parameter is specified, only this snapshot is described. Available for Redis only.</p><br>
    ///   - [`snapshot_type(impl Into<String>)`](crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder::snapshot_type) / [`set_snapshot_type(Option<String>)`](crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder::set_snapshot_type):<br>required: **false**<br><p>The type of snapshot that is being described. Available for Redis only.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder::set_next_token):<br>required: **false**<br><p>An optional marker returned from a prior request to support pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by max-results. Available for Redis only.</p><br>
    ///   - [`max_results(i32)`](crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of records to include in the response. If more records exist than the specified max-results value, a market is included in the response so that remaining results can be retrieved. Available for Redis only.The default is 50. The Validation Constraints are a maximum of 50.</p><br>
    /// - On success, responds with [`DescribeServerlessCacheSnapshotsOutput`](crate::operation::describe_serverless_cache_snapshots::DescribeServerlessCacheSnapshotsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::describe_serverless_cache_snapshots::DescribeServerlessCacheSnapshotsOutput::next_token): <p>An optional marker returned from a prior request to support pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by max-results. Available for Redis only.</p>
    ///   - [`serverless_cache_snapshots(Option<Vec::<ServerlessCacheSnapshot>>)`](crate::operation::describe_serverless_cache_snapshots::DescribeServerlessCacheSnapshotsOutput::serverless_cache_snapshots): <p>The serverless caches snapshots associated with a given description request. Available for Redis only.</p>
    /// - On failure, responds with [`SdkError<DescribeServerlessCacheSnapshotsError>`](crate::operation::describe_serverless_cache_snapshots::DescribeServerlessCacheSnapshotsError)
    pub fn describe_serverless_cache_snapshots(
        &self,
    ) -> crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder {
        crate::operation::describe_serverless_cache_snapshots::builders::DescribeServerlessCacheSnapshotsFluentBuilder::new(self.handle.clone())
    }
}
