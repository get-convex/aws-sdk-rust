// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_data_storage(
    mut writer: ::aws_smithy_query::QueryValueWriter,
    input: &crate::types::DataStorage,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("Maximum");
    if let Some(var_2) = &input.maximum {
        scope_1.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_2).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("Unit");
    if let Some(var_4) = &input.unit {
        scope_3.string(var_4.as_str());
    }
    Ok(())
}

#[allow(clippy::needless_question_mark)]
pub fn de_data_storage(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::DataStorage, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::DataStorage::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("Maximum") /* Maximum com.amazonaws.elasticache#DataStorage$Maximum */ =>  {
                let var_5 =
                    Some(
                         {
                            <i32 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.elasticache#IntegerOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_maximum(var_5);
            }
            ,
            s if s.matches("Unit") /* Unit com.amazonaws.elasticache#DataStorage$Unit */ =>  {
                let var_6 =
                    Some(
                        Result::<crate::types::DataStorageUnit, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::DataStorageUnit::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_unit(var_6);
            }
            ,
            _ => {}
        }
    }
    Ok(crate::serde_util::data_storage_correct_errors(builder).build())
}
