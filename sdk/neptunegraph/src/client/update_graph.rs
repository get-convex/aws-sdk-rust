// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateGraph`](crate::operation::update_graph::builders::UpdateGraphFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`graph_identifier(impl Into<String>)`](crate::operation::update_graph::builders::UpdateGraphFluentBuilder::graph_identifier) / [`set_graph_identifier(Option<String>)`](crate::operation::update_graph::builders::UpdateGraphFluentBuilder::set_graph_identifier):<br>required: **true**<br><p>The unique identifier of the Neptune Analytics graph.</p><br>
    ///   - [`public_connectivity(bool)`](crate::operation::update_graph::builders::UpdateGraphFluentBuilder::public_connectivity) / [`set_public_connectivity(Option<bool>)`](crate::operation::update_graph::builders::UpdateGraphFluentBuilder::set_public_connectivity):<br>required: **false**<br><p>Specifies whether or not the graph can be reachable over the internet. All access to graphs IAM authenticated. (<code>true</code> to enable, or <code>false</code> to disable.</p><br>
    ///   - [`provisioned_memory(i32)`](crate::operation::update_graph::builders::UpdateGraphFluentBuilder::provisioned_memory) / [`set_provisioned_memory(Option<i32>)`](crate::operation::update_graph::builders::UpdateGraphFluentBuilder::set_provisioned_memory):<br>required: **false**<br><p>The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph. Min = 128</p><br>
    ///   - [`deletion_protection(bool)`](crate::operation::update_graph::builders::UpdateGraphFluentBuilder::deletion_protection) / [`set_deletion_protection(Option<bool>)`](crate::operation::update_graph::builders::UpdateGraphFluentBuilder::set_deletion_protection):<br>required: **false**<br><p>A value that indicates whether the graph has deletion protection enabled. The graph can't be deleted when deletion protection is enabled.</p><br>
    /// - On success, responds with [`UpdateGraphOutput`](crate::operation::update_graph::UpdateGraphOutput) with field(s):
    ///   - [`id(String)`](crate::operation::update_graph::UpdateGraphOutput::id): <p>The unique identifier of the graph.</p>
    ///   - [`name(String)`](crate::operation::update_graph::UpdateGraphOutput::name): <p>The name of the graph.</p>
    ///   - [`arn(String)`](crate::operation::update_graph::UpdateGraphOutput::arn): <p>The ARN associated with the graph.</p>
    ///   - [`status(Option<GraphStatus>)`](crate::operation::update_graph::UpdateGraphOutput::status): <p>The status of the graph.</p>
    ///   - [`status_reason(Option<String>)`](crate::operation::update_graph::UpdateGraphOutput::status_reason): <p>The reason that the graph has this status.</p>
    ///   - [`create_time(Option<DateTime>)`](crate::operation::update_graph::UpdateGraphOutput::create_time): <p>The time at which the graph was created.</p>
    ///   - [`provisioned_memory(Option<i32>)`](crate::operation::update_graph::UpdateGraphOutput::provisioned_memory): <p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>
    ///   - [`endpoint(Option<String>)`](crate::operation::update_graph::UpdateGraphOutput::endpoint): <p>The graph endpoint.</p>
    ///   - [`public_connectivity(Option<bool>)`](crate::operation::update_graph::UpdateGraphOutput::public_connectivity): <p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>
    ///   - [`vector_search_configuration(Option<VectorSearchConfiguration>)`](crate::operation::update_graph::UpdateGraphOutput::vector_search_configuration): <p>Specifies the number of dimensions for vector embeddings loaded into the graph. Max = 65535</p>
    ///   - [`replica_count(Option<i32>)`](crate::operation::update_graph::UpdateGraphOutput::replica_count): <p>The number of replicas for the graph.</p>
    ///   - [`kms_key_identifier(Option<String>)`](crate::operation::update_graph::UpdateGraphOutput::kms_key_identifier): <p>The ID of the KMS key used to encrypt and decrypt graph data.</p>
    ///   - [`source_snapshot_id(Option<String>)`](crate::operation::update_graph::UpdateGraphOutput::source_snapshot_id): <p>The ID of the snapshot from which the graph was created, if any.</p>
    ///   - [`deletion_protection(Option<bool>)`](crate::operation::update_graph::UpdateGraphOutput::deletion_protection): <p>If <code>true</code>, deletion protection is enabled for the graph.</p>
    ///   - [`build_number(Option<String>)`](crate::operation::update_graph::UpdateGraphOutput::build_number): <p>The build number of the graph.</p>
    /// - On failure, responds with [`SdkError<UpdateGraphError>`](crate::operation::update_graph::UpdateGraphError)
    pub fn update_graph(&self) -> crate::operation::update_graph::builders::UpdateGraphFluentBuilder {
        crate::operation::update_graph::builders::UpdateGraphFluentBuilder::new(self.handle.clone())
    }
}
