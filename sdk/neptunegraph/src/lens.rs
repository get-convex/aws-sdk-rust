// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_graph_snapshots_output_output_next_token(
    input: &crate::operation::list_graph_snapshots::ListGraphSnapshotsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_graphs_output_output_next_token(
    input: &crate::operation::list_graphs::ListGraphsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_import_tasks_output_output_next_token(
    input: &crate::operation::list_import_tasks::ListImportTasksOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_private_graph_endpoints_output_output_next_token(
    input: &crate::operation::list_private_graph_endpoints::ListPrivateGraphEndpointsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_graph_snapshots_output_output_graph_snapshots(
    input: crate::operation::list_graph_snapshots::ListGraphSnapshotsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::GraphSnapshotSummary>> {
    let input = input.graph_snapshots;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_graphs_output_output_graphs(
    input: crate::operation::list_graphs::ListGraphsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::GraphSummary>> {
    let input = input.graphs;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_import_tasks_output_output_tasks(
    input: crate::operation::list_import_tasks::ListImportTasksOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::ImportTaskSummary>> {
    let input = input.tasks;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_private_graph_endpoints_output_output_private_graph_endpoints(
    input: crate::operation::list_private_graph_endpoints::ListPrivateGraphEndpointsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::PrivateGraphEndpointSummary>> {
    let input = input.private_graph_endpoints;
    ::std::option::Option::Some(input)
}
