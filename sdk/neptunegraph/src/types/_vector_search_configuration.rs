// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the number of dimensions for vector embeddings loaded into the graph. Max = 65535</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VectorSearchConfiguration {
    /// <p>The number of dimensions.</p>
    pub dimension: i32,
}
impl VectorSearchConfiguration {
    /// <p>The number of dimensions.</p>
    pub fn dimension(&self) -> i32 {
        self.dimension
    }
}
impl VectorSearchConfiguration {
    /// Creates a new builder-style object to manufacture [`VectorSearchConfiguration`](crate::types::VectorSearchConfiguration).
    pub fn builder() -> crate::types::builders::VectorSearchConfigurationBuilder {
        crate::types::builders::VectorSearchConfigurationBuilder::default()
    }
}

/// A builder for [`VectorSearchConfiguration`](crate::types::VectorSearchConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VectorSearchConfigurationBuilder {
    pub(crate) dimension: ::std::option::Option<i32>,
}
impl VectorSearchConfigurationBuilder {
    /// <p>The number of dimensions.</p>
    /// This field is required.
    pub fn dimension(mut self, input: i32) -> Self {
        self.dimension = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of dimensions.</p>
    pub fn set_dimension(mut self, input: ::std::option::Option<i32>) -> Self {
        self.dimension = input;
        self
    }
    /// <p>The number of dimensions.</p>
    pub fn get_dimension(&self) -> &::std::option::Option<i32> {
        &self.dimension
    }
    /// Consumes the builder and constructs a [`VectorSearchConfiguration`](crate::types::VectorSearchConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`dimension`](crate::types::builders::VectorSearchConfigurationBuilder::dimension)
    pub fn build(self) -> ::std::result::Result<crate::types::VectorSearchConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::VectorSearchConfiguration {
            dimension: self.dimension.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "dimension",
                    "dimension was not specified but it is required when building VectorSearchConfiguration",
                )
            })?,
        })
    }
}
