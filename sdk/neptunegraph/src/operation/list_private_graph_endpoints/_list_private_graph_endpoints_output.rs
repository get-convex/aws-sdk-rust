// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListPrivateGraphEndpointsOutput {
    /// <p>A list of private endpoints for the specified Neptune Analytics graph.</p>
    pub private_graph_endpoints: ::std::vec::Vec<crate::types::PrivateGraphEndpointSummary>,
    /// <p>Pagination token used to paginate output.</p>
    /// <p>When this value is provided as input, the service returns results from where the previous response left off. When this value is present in output, it indicates that there are more results to retrieve.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListPrivateGraphEndpointsOutput {
    /// <p>A list of private endpoints for the specified Neptune Analytics graph.</p>
    pub fn private_graph_endpoints(&self) -> &[crate::types::PrivateGraphEndpointSummary] {
        use std::ops::Deref;
        self.private_graph_endpoints.deref()
    }
    /// <p>Pagination token used to paginate output.</p>
    /// <p>When this value is provided as input, the service returns results from where the previous response left off. When this value is present in output, it indicates that there are more results to retrieve.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for ListPrivateGraphEndpointsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListPrivateGraphEndpointsOutput {
    /// Creates a new builder-style object to manufacture [`ListPrivateGraphEndpointsOutput`](crate::operation::list_private_graph_endpoints::ListPrivateGraphEndpointsOutput).
    pub fn builder() -> crate::operation::list_private_graph_endpoints::builders::ListPrivateGraphEndpointsOutputBuilder {
        crate::operation::list_private_graph_endpoints::builders::ListPrivateGraphEndpointsOutputBuilder::default()
    }
}

/// A builder for [`ListPrivateGraphEndpointsOutput`](crate::operation::list_private_graph_endpoints::ListPrivateGraphEndpointsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListPrivateGraphEndpointsOutputBuilder {
    pub(crate) private_graph_endpoints: ::std::option::Option<::std::vec::Vec<crate::types::PrivateGraphEndpointSummary>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListPrivateGraphEndpointsOutputBuilder {
    /// Appends an item to `private_graph_endpoints`.
    ///
    /// To override the contents of this collection use [`set_private_graph_endpoints`](Self::set_private_graph_endpoints).
    ///
    /// <p>A list of private endpoints for the specified Neptune Analytics graph.</p>
    pub fn private_graph_endpoints(mut self, input: crate::types::PrivateGraphEndpointSummary) -> Self {
        let mut v = self.private_graph_endpoints.unwrap_or_default();
        v.push(input);
        self.private_graph_endpoints = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of private endpoints for the specified Neptune Analytics graph.</p>
    pub fn set_private_graph_endpoints(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::PrivateGraphEndpointSummary>>) -> Self {
        self.private_graph_endpoints = input;
        self
    }
    /// <p>A list of private endpoints for the specified Neptune Analytics graph.</p>
    pub fn get_private_graph_endpoints(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::PrivateGraphEndpointSummary>> {
        &self.private_graph_endpoints
    }
    /// <p>Pagination token used to paginate output.</p>
    /// <p>When this value is provided as input, the service returns results from where the previous response left off. When this value is present in output, it indicates that there are more results to retrieve.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Pagination token used to paginate output.</p>
    /// <p>When this value is provided as input, the service returns results from where the previous response left off. When this value is present in output, it indicates that there are more results to retrieve.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>Pagination token used to paginate output.</p>
    /// <p>When this value is provided as input, the service returns results from where the previous response left off. When this value is present in output, it indicates that there are more results to retrieve.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListPrivateGraphEndpointsOutput`](crate::operation::list_private_graph_endpoints::ListPrivateGraphEndpointsOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`private_graph_endpoints`](crate::operation::list_private_graph_endpoints::builders::ListPrivateGraphEndpointsOutputBuilder::private_graph_endpoints)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_private_graph_endpoints::ListPrivateGraphEndpointsOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_private_graph_endpoints::ListPrivateGraphEndpointsOutput {
            private_graph_endpoints: self.private_graph_endpoints.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "private_graph_endpoints",
                    "private_graph_endpoints was not specified but it is required when building ListPrivateGraphEndpointsOutput",
                )
            })?,
            next_token: self.next_token,
            _request_id: self._request_id,
        })
    }
}
