// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListKeyValueStoresOutput {
    /// <p>The resulting Key Value Stores list.</p>
    pub key_value_store_list: ::std::option::Option<crate::types::KeyValueStoreList>,
    _request_id: Option<String>,
}
impl ListKeyValueStoresOutput {
    /// <p>The resulting Key Value Stores list.</p>
    pub fn key_value_store_list(&self) -> ::std::option::Option<&crate::types::KeyValueStoreList> {
        self.key_value_store_list.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for ListKeyValueStoresOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListKeyValueStoresOutput {
    /// Creates a new builder-style object to manufacture [`ListKeyValueStoresOutput`](crate::operation::list_key_value_stores::ListKeyValueStoresOutput).
    pub fn builder() -> crate::operation::list_key_value_stores::builders::ListKeyValueStoresOutputBuilder {
        crate::operation::list_key_value_stores::builders::ListKeyValueStoresOutputBuilder::default()
    }
}

/// A builder for [`ListKeyValueStoresOutput`](crate::operation::list_key_value_stores::ListKeyValueStoresOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListKeyValueStoresOutputBuilder {
    pub(crate) key_value_store_list: ::std::option::Option<crate::types::KeyValueStoreList>,
    _request_id: Option<String>,
}
impl ListKeyValueStoresOutputBuilder {
    /// <p>The resulting Key Value Stores list.</p>
    pub fn key_value_store_list(mut self, input: crate::types::KeyValueStoreList) -> Self {
        self.key_value_store_list = ::std::option::Option::Some(input);
        self
    }
    /// <p>The resulting Key Value Stores list.</p>
    pub fn set_key_value_store_list(mut self, input: ::std::option::Option<crate::types::KeyValueStoreList>) -> Self {
        self.key_value_store_list = input;
        self
    }
    /// <p>The resulting Key Value Stores list.</p>
    pub fn get_key_value_store_list(&self) -> &::std::option::Option<crate::types::KeyValueStoreList> {
        &self.key_value_store_list
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListKeyValueStoresOutput`](crate::operation::list_key_value_stores::ListKeyValueStoresOutput).
    pub fn build(self) -> crate::operation::list_key_value_stores::ListKeyValueStoresOutput {
        crate::operation::list_key_value_stores::ListKeyValueStoresOutput {
            key_value_store_list: self.key_value_store_list,
            _request_id: self._request_id,
        }
    }
}
