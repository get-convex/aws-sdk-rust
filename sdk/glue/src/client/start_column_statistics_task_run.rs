// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartColumnStatisticsTaskRun`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`database_name(impl Into<String>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::database_name) / [`set_database_name(Option<String>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::set_database_name):<br>required: **true**<br><p>The name of the database where the table resides.</p><br>
    ///   - [`table_name(impl Into<String>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::table_name) / [`set_table_name(Option<String>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::set_table_name):<br>required: **true**<br><p>The name of the table to generate statistics.</p><br>
    ///   - [`column_name_list(impl Into<String>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::column_name_list) / [`set_column_name_list(Option<Vec::<String>>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::set_column_name_list):<br>required: **false**<br><p>A list of the column names to generate statistics. If none is supplied, all column names for the table will be used by default.</p><br>
    ///   - [`role(impl Into<String>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::role) / [`set_role(Option<String>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::set_role):<br>required: **true**<br><p>The IAM role that the service assumes to generate statistics.</p><br>
    ///   - [`sample_size(f64)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::sample_size) / [`set_sample_size(Option<f64>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::set_sample_size):<br>required: **false**<br><p>The percentage of rows used to generate statistics. If none is supplied, the entire table will be used to generate stats.</p><br>
    ///   - [`catalog_id(impl Into<String>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::catalog_id) / [`set_catalog_id(Option<String>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::set_catalog_id):<br>required: **false**<br><p>The ID of the Data Catalog where the table reside. If none is supplied, the Amazon Web Services account ID is used by default.</p><br>
    ///   - [`security_configuration(impl Into<String>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::security_configuration) / [`set_security_configuration(Option<String>)`](crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::set_security_configuration):<br>required: **false**<br><p>Name of the security configuration that is used to encrypt CloudWatch logs for the column stats task run.</p><br>
    /// - On success, responds with [`StartColumnStatisticsTaskRunOutput`](crate::operation::start_column_statistics_task_run::StartColumnStatisticsTaskRunOutput) with field(s):
    ///   - [`column_statistics_task_run_id(Option<String>)`](crate::operation::start_column_statistics_task_run::StartColumnStatisticsTaskRunOutput::column_statistics_task_run_id): <p>The identifier for the column statistics task run.</p>
    /// - On failure, responds with [`SdkError<StartColumnStatisticsTaskRunError>`](crate::operation::start_column_statistics_task_run::StartColumnStatisticsTaskRunError)
    pub fn start_column_statistics_task_run(
        &self,
    ) -> crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder {
        crate::operation::start_column_statistics_task_run::builders::StartColumnStatisticsTaskRunFluentBuilder::new(self.handle.clone())
    }
}
