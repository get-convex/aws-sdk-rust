// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetColumnStatisticsTaskRunOutput {
    /// <p>A <code>ColumnStatisticsTaskRun</code> object representing the details of the column stats run.</p>
    pub column_statistics_task_run: ::std::option::Option<crate::types::ColumnStatisticsTaskRun>,
    _request_id: Option<String>,
}
impl GetColumnStatisticsTaskRunOutput {
    /// <p>A <code>ColumnStatisticsTaskRun</code> object representing the details of the column stats run.</p>
    pub fn column_statistics_task_run(&self) -> ::std::option::Option<&crate::types::ColumnStatisticsTaskRun> {
        self.column_statistics_task_run.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetColumnStatisticsTaskRunOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetColumnStatisticsTaskRunOutput {
    /// Creates a new builder-style object to manufacture [`GetColumnStatisticsTaskRunOutput`](crate::operation::get_column_statistics_task_run::GetColumnStatisticsTaskRunOutput).
    pub fn builder() -> crate::operation::get_column_statistics_task_run::builders::GetColumnStatisticsTaskRunOutputBuilder {
        crate::operation::get_column_statistics_task_run::builders::GetColumnStatisticsTaskRunOutputBuilder::default()
    }
}

/// A builder for [`GetColumnStatisticsTaskRunOutput`](crate::operation::get_column_statistics_task_run::GetColumnStatisticsTaskRunOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetColumnStatisticsTaskRunOutputBuilder {
    pub(crate) column_statistics_task_run: ::std::option::Option<crate::types::ColumnStatisticsTaskRun>,
    _request_id: Option<String>,
}
impl GetColumnStatisticsTaskRunOutputBuilder {
    /// <p>A <code>ColumnStatisticsTaskRun</code> object representing the details of the column stats run.</p>
    pub fn column_statistics_task_run(mut self, input: crate::types::ColumnStatisticsTaskRun) -> Self {
        self.column_statistics_task_run = ::std::option::Option::Some(input);
        self
    }
    /// <p>A <code>ColumnStatisticsTaskRun</code> object representing the details of the column stats run.</p>
    pub fn set_column_statistics_task_run(mut self, input: ::std::option::Option<crate::types::ColumnStatisticsTaskRun>) -> Self {
        self.column_statistics_task_run = input;
        self
    }
    /// <p>A <code>ColumnStatisticsTaskRun</code> object representing the details of the column stats run.</p>
    pub fn get_column_statistics_task_run(&self) -> &::std::option::Option<crate::types::ColumnStatisticsTaskRun> {
        &self.column_statistics_task_run
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetColumnStatisticsTaskRunOutput`](crate::operation::get_column_statistics_task_run::GetColumnStatisticsTaskRunOutput).
    pub fn build(self) -> crate::operation::get_column_statistics_task_run::GetColumnStatisticsTaskRunOutput {
        crate::operation::get_column_statistics_task_run::GetColumnStatisticsTaskRunOutput {
            column_statistics_task_run: self.column_statistics_task_run,
            _request_id: self._request_id,
        }
    }
}
