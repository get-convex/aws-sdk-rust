// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeBotResourceGenerationInput {
    /// <p>The unique identifier of the bot for which to return the generation details.</p>
    pub bot_id: ::std::option::Option<::std::string::String>,
    /// <p>The version of the bot for which to return the generation details.</p>
    pub bot_version: ::std::option::Option<::std::string::String>,
    /// <p>The locale of the bot for which to return the generation details.</p>
    pub locale_id: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the generation request for which to return the generation details.</p>
    pub generation_id: ::std::option::Option<::std::string::String>,
}
impl DescribeBotResourceGenerationInput {
    /// <p>The unique identifier of the bot for which to return the generation details.</p>
    pub fn bot_id(&self) -> ::std::option::Option<&str> {
        self.bot_id.as_deref()
    }
    /// <p>The version of the bot for which to return the generation details.</p>
    pub fn bot_version(&self) -> ::std::option::Option<&str> {
        self.bot_version.as_deref()
    }
    /// <p>The locale of the bot for which to return the generation details.</p>
    pub fn locale_id(&self) -> ::std::option::Option<&str> {
        self.locale_id.as_deref()
    }
    /// <p>The unique identifier of the generation request for which to return the generation details.</p>
    pub fn generation_id(&self) -> ::std::option::Option<&str> {
        self.generation_id.as_deref()
    }
}
impl DescribeBotResourceGenerationInput {
    /// Creates a new builder-style object to manufacture [`DescribeBotResourceGenerationInput`](crate::operation::describe_bot_resource_generation::DescribeBotResourceGenerationInput).
    pub fn builder() -> crate::operation::describe_bot_resource_generation::builders::DescribeBotResourceGenerationInputBuilder {
        crate::operation::describe_bot_resource_generation::builders::DescribeBotResourceGenerationInputBuilder::default()
    }
}

/// A builder for [`DescribeBotResourceGenerationInput`](crate::operation::describe_bot_resource_generation::DescribeBotResourceGenerationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeBotResourceGenerationInputBuilder {
    pub(crate) bot_id: ::std::option::Option<::std::string::String>,
    pub(crate) bot_version: ::std::option::Option<::std::string::String>,
    pub(crate) locale_id: ::std::option::Option<::std::string::String>,
    pub(crate) generation_id: ::std::option::Option<::std::string::String>,
}
impl DescribeBotResourceGenerationInputBuilder {
    /// <p>The unique identifier of the bot for which to return the generation details.</p>
    /// This field is required.
    pub fn bot_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.bot_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the bot for which to return the generation details.</p>
    pub fn set_bot_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.bot_id = input;
        self
    }
    /// <p>The unique identifier of the bot for which to return the generation details.</p>
    pub fn get_bot_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.bot_id
    }
    /// <p>The version of the bot for which to return the generation details.</p>
    /// This field is required.
    pub fn bot_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.bot_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the bot for which to return the generation details.</p>
    pub fn set_bot_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.bot_version = input;
        self
    }
    /// <p>The version of the bot for which to return the generation details.</p>
    pub fn get_bot_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.bot_version
    }
    /// <p>The locale of the bot for which to return the generation details.</p>
    /// This field is required.
    pub fn locale_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.locale_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The locale of the bot for which to return the generation details.</p>
    pub fn set_locale_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.locale_id = input;
        self
    }
    /// <p>The locale of the bot for which to return the generation details.</p>
    pub fn get_locale_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.locale_id
    }
    /// <p>The unique identifier of the generation request for which to return the generation details.</p>
    /// This field is required.
    pub fn generation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.generation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the generation request for which to return the generation details.</p>
    pub fn set_generation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.generation_id = input;
        self
    }
    /// <p>The unique identifier of the generation request for which to return the generation details.</p>
    pub fn get_generation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.generation_id
    }
    /// Consumes the builder and constructs a [`DescribeBotResourceGenerationInput`](crate::operation::describe_bot_resource_generation::DescribeBotResourceGenerationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_bot_resource_generation::DescribeBotResourceGenerationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::describe_bot_resource_generation::DescribeBotResourceGenerationInput {
            bot_id: self.bot_id,
            bot_version: self.bot_version,
            locale_id: self.locale_id,
            generation_id: self.generation_id,
        })
    }
}
