// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains specifications for the sample utterance generation feature.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SampleUtteranceGenerationSpecification {
    /// <p>Specifies whether to enable sample utterance generation or not.</p>
    pub enabled: bool,
    /// <p>Contains information about the Amazon Bedrock model used to interpret the prompt used in descriptive bot building.</p>
    pub bedrock_model_specification: ::std::option::Option<crate::types::BedrockModelSpecification>,
}
impl SampleUtteranceGenerationSpecification {
    /// <p>Specifies whether to enable sample utterance generation or not.</p>
    pub fn enabled(&self) -> bool {
        self.enabled
    }
    /// <p>Contains information about the Amazon Bedrock model used to interpret the prompt used in descriptive bot building.</p>
    pub fn bedrock_model_specification(&self) -> ::std::option::Option<&crate::types::BedrockModelSpecification> {
        self.bedrock_model_specification.as_ref()
    }
}
impl SampleUtteranceGenerationSpecification {
    /// Creates a new builder-style object to manufacture [`SampleUtteranceGenerationSpecification`](crate::types::SampleUtteranceGenerationSpecification).
    pub fn builder() -> crate::types::builders::SampleUtteranceGenerationSpecificationBuilder {
        crate::types::builders::SampleUtteranceGenerationSpecificationBuilder::default()
    }
}

/// A builder for [`SampleUtteranceGenerationSpecification`](crate::types::SampleUtteranceGenerationSpecification).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SampleUtteranceGenerationSpecificationBuilder {
    pub(crate) enabled: ::std::option::Option<bool>,
    pub(crate) bedrock_model_specification: ::std::option::Option<crate::types::BedrockModelSpecification>,
}
impl SampleUtteranceGenerationSpecificationBuilder {
    /// <p>Specifies whether to enable sample utterance generation or not.</p>
    /// This field is required.
    pub fn enabled(mut self, input: bool) -> Self {
        self.enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether to enable sample utterance generation or not.</p>
    pub fn set_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.enabled = input;
        self
    }
    /// <p>Specifies whether to enable sample utterance generation or not.</p>
    pub fn get_enabled(&self) -> &::std::option::Option<bool> {
        &self.enabled
    }
    /// <p>Contains information about the Amazon Bedrock model used to interpret the prompt used in descriptive bot building.</p>
    pub fn bedrock_model_specification(mut self, input: crate::types::BedrockModelSpecification) -> Self {
        self.bedrock_model_specification = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains information about the Amazon Bedrock model used to interpret the prompt used in descriptive bot building.</p>
    pub fn set_bedrock_model_specification(mut self, input: ::std::option::Option<crate::types::BedrockModelSpecification>) -> Self {
        self.bedrock_model_specification = input;
        self
    }
    /// <p>Contains information about the Amazon Bedrock model used to interpret the prompt used in descriptive bot building.</p>
    pub fn get_bedrock_model_specification(&self) -> &::std::option::Option<crate::types::BedrockModelSpecification> {
        &self.bedrock_model_specification
    }
    /// Consumes the builder and constructs a [`SampleUtteranceGenerationSpecification`](crate::types::SampleUtteranceGenerationSpecification).
    pub fn build(self) -> crate::types::SampleUtteranceGenerationSpecification {
        crate::types::SampleUtteranceGenerationSpecification {
            enabled: self.enabled.unwrap_or_default(),
            bedrock_model_specification: self.bedrock_model_specification,
        }
    }
}
