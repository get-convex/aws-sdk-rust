// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains specifications about the Amazon Lex build time generative AI capabilities from Amazon Bedrock that you can turn on for your bot.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BuildtimeSettings {
    /// <p>An object containing specifications for the descriptive bot building feature.</p>
    pub descriptive_bot_builder: ::std::option::Option<crate::types::DescriptiveBotBuilderSpecification>,
    /// <p>Contains specifications for the sample utterance generation feature.</p>
    pub sample_utterance_generation: ::std::option::Option<crate::types::SampleUtteranceGenerationSpecification>,
}
impl BuildtimeSettings {
    /// <p>An object containing specifications for the descriptive bot building feature.</p>
    pub fn descriptive_bot_builder(&self) -> ::std::option::Option<&crate::types::DescriptiveBotBuilderSpecification> {
        self.descriptive_bot_builder.as_ref()
    }
    /// <p>Contains specifications for the sample utterance generation feature.</p>
    pub fn sample_utterance_generation(&self) -> ::std::option::Option<&crate::types::SampleUtteranceGenerationSpecification> {
        self.sample_utterance_generation.as_ref()
    }
}
impl BuildtimeSettings {
    /// Creates a new builder-style object to manufacture [`BuildtimeSettings`](crate::types::BuildtimeSettings).
    pub fn builder() -> crate::types::builders::BuildtimeSettingsBuilder {
        crate::types::builders::BuildtimeSettingsBuilder::default()
    }
}

/// A builder for [`BuildtimeSettings`](crate::types::BuildtimeSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BuildtimeSettingsBuilder {
    pub(crate) descriptive_bot_builder: ::std::option::Option<crate::types::DescriptiveBotBuilderSpecification>,
    pub(crate) sample_utterance_generation: ::std::option::Option<crate::types::SampleUtteranceGenerationSpecification>,
}
impl BuildtimeSettingsBuilder {
    /// <p>An object containing specifications for the descriptive bot building feature.</p>
    pub fn descriptive_bot_builder(mut self, input: crate::types::DescriptiveBotBuilderSpecification) -> Self {
        self.descriptive_bot_builder = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object containing specifications for the descriptive bot building feature.</p>
    pub fn set_descriptive_bot_builder(mut self, input: ::std::option::Option<crate::types::DescriptiveBotBuilderSpecification>) -> Self {
        self.descriptive_bot_builder = input;
        self
    }
    /// <p>An object containing specifications for the descriptive bot building feature.</p>
    pub fn get_descriptive_bot_builder(&self) -> &::std::option::Option<crate::types::DescriptiveBotBuilderSpecification> {
        &self.descriptive_bot_builder
    }
    /// <p>Contains specifications for the sample utterance generation feature.</p>
    pub fn sample_utterance_generation(mut self, input: crate::types::SampleUtteranceGenerationSpecification) -> Self {
        self.sample_utterance_generation = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains specifications for the sample utterance generation feature.</p>
    pub fn set_sample_utterance_generation(mut self, input: ::std::option::Option<crate::types::SampleUtteranceGenerationSpecification>) -> Self {
        self.sample_utterance_generation = input;
        self
    }
    /// <p>Contains specifications for the sample utterance generation feature.</p>
    pub fn get_sample_utterance_generation(&self) -> &::std::option::Option<crate::types::SampleUtteranceGenerationSpecification> {
        &self.sample_utterance_generation
    }
    /// Consumes the builder and constructs a [`BuildtimeSettings`](crate::types::BuildtimeSettings).
    pub fn build(self) -> crate::types::BuildtimeSettings {
        crate::types::BuildtimeSettings {
            descriptive_bot_builder: self.descriptive_bot_builder,
            sample_utterance_generation: self.sample_utterance_generation,
        }
    }
}
