// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateImage`](crate::operation::create_image::builders::CreateImageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`image_recipe_arn(impl Into<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::image_recipe_arn) / [`set_image_recipe_arn(Option<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::set_image_recipe_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.</p><br>
    ///   - [`container_recipe_arn(impl Into<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::container_recipe_arn) / [`set_container_recipe_arn(Option<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::set_container_recipe_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.</p><br>
    ///   - [`distribution_configuration_arn(impl Into<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::distribution_configuration_arn) / [`set_distribution_configuration_arn(Option<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::set_distribution_configuration_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the distribution configuration that defines and configures the outputs of your pipeline.</p><br>
    ///   - [`infrastructure_configuration_arn(impl Into<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::infrastructure_configuration_arn) / [`set_infrastructure_configuration_arn(Option<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::set_infrastructure_configuration_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the infrastructure configuration that defines the environment in which your image will be built and tested.</p><br>
    ///   - [`image_tests_configuration(ImageTestsConfiguration)`](crate::operation::create_image::builders::CreateImageFluentBuilder::image_tests_configuration) / [`set_image_tests_configuration(Option<ImageTestsConfiguration>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::set_image_tests_configuration):<br>required: **false**<br><p>The image tests configuration of the image.</p><br>
    ///   - [`enhanced_image_metadata_enabled(bool)`](crate::operation::create_image::builders::CreateImageFluentBuilder::enhanced_image_metadata_enabled) / [`set_enhanced_image_metadata_enabled(Option<bool>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::set_enhanced_image_metadata_enabled):<br>required: **false**<br><p>Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::set_tags):<br>required: **false**<br><p>The tags of the image.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::set_client_token):<br>required: **true**<br><p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p><br>
    ///   - [`image_scanning_configuration(ImageScanningConfiguration)`](crate::operation::create_image::builders::CreateImageFluentBuilder::image_scanning_configuration) / [`set_image_scanning_configuration(Option<ImageScanningConfiguration>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::set_image_scanning_configuration):<br>required: **false**<br><p>Contains settings for vulnerability scans.</p><br>
    ///   - [`workflows(WorkflowConfiguration)`](crate::operation::create_image::builders::CreateImageFluentBuilder::workflows) / [`set_workflows(Option<Vec::<WorkflowConfiguration>>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::set_workflows):<br>required: **false**<br><p>Contains an array of workflow configuration objects.</p><br>
    ///   - [`execution_role(impl Into<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::execution_role) / [`set_execution_role(Option<String>)`](crate::operation::create_image::builders::CreateImageFluentBuilder::set_execution_role):<br>required: **false**<br><p>The name or Amazon Resource Name (ARN) for the IAM role you create that grants Image Builder access to perform workflow actions.</p><br>
    /// - On success, responds with [`CreateImageOutput`](crate::operation::create_image::CreateImageOutput) with field(s):
    ///   - [`request_id(Option<String>)`](crate::operation::create_image::CreateImageOutput::request_id): <p>The request ID that uniquely identifies this request.</p>
    ///   - [`client_token(Option<String>)`](crate::operation::create_image::CreateImageOutput::client_token): <p>The client token that uniquely identifies the request.</p>
    ///   - [`image_build_version_arn(Option<String>)`](crate::operation::create_image::CreateImageOutput::image_build_version_arn): <p>The Amazon Resource Name (ARN) of the image that the request created.</p>
    /// - On failure, responds with [`SdkError<CreateImageError>`](crate::operation::create_image::CreateImageError)
    pub fn create_image(&self) -> crate::operation::create_image::builders::CreateImageFluentBuilder {
        crate::operation::create_image::builders::CreateImageFluentBuilder::new(self.handle.clone())
    }
}
