// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details for an image resource that was identified for a lifecycle action.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LifecycleExecutionResourcesImpactedSummary {
    /// <p>Indicates whether an image resource that was identified for a lifecycle action has associated resources that are also impacted.</p>
    pub has_impacted_resources: bool,
}
impl LifecycleExecutionResourcesImpactedSummary {
    /// <p>Indicates whether an image resource that was identified for a lifecycle action has associated resources that are also impacted.</p>
    pub fn has_impacted_resources(&self) -> bool {
        self.has_impacted_resources
    }
}
impl LifecycleExecutionResourcesImpactedSummary {
    /// Creates a new builder-style object to manufacture [`LifecycleExecutionResourcesImpactedSummary`](crate::types::LifecycleExecutionResourcesImpactedSummary).
    pub fn builder() -> crate::types::builders::LifecycleExecutionResourcesImpactedSummaryBuilder {
        crate::types::builders::LifecycleExecutionResourcesImpactedSummaryBuilder::default()
    }
}

/// A builder for [`LifecycleExecutionResourcesImpactedSummary`](crate::types::LifecycleExecutionResourcesImpactedSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct LifecycleExecutionResourcesImpactedSummaryBuilder {
    pub(crate) has_impacted_resources: ::std::option::Option<bool>,
}
impl LifecycleExecutionResourcesImpactedSummaryBuilder {
    /// <p>Indicates whether an image resource that was identified for a lifecycle action has associated resources that are also impacted.</p>
    pub fn has_impacted_resources(mut self, input: bool) -> Self {
        self.has_impacted_resources = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates whether an image resource that was identified for a lifecycle action has associated resources that are also impacted.</p>
    pub fn set_has_impacted_resources(mut self, input: ::std::option::Option<bool>) -> Self {
        self.has_impacted_resources = input;
        self
    }
    /// <p>Indicates whether an image resource that was identified for a lifecycle action has associated resources that are also impacted.</p>
    pub fn get_has_impacted_resources(&self) -> &::std::option::Option<bool> {
        &self.has_impacted_resources
    }
    /// Consumes the builder and constructs a [`LifecycleExecutionResourcesImpactedSummary`](crate::types::LifecycleExecutionResourcesImpactedSummary).
    pub fn build(self) -> crate::types::LifecycleExecutionResourcesImpactedSummary {
        crate::types::LifecycleExecutionResourcesImpactedSummary {
            has_impacted_resources: self.has_impacted_resources.unwrap_or_default(),
        }
    }
}
