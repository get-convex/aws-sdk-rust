// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the state of an impacted snapshot resource that the runtime instance of the lifecycle policy identified for action.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LifecycleExecutionSnapshotResource {
    /// <p>Identifies the impacted snapshot resource.</p>
    pub snapshot_id: ::std::option::Option<::std::string::String>,
    /// <p>The runtime status of the lifecycle action taken for the snapshot.</p>
    pub state: ::std::option::Option<crate::types::LifecycleExecutionResourceState>,
}
impl LifecycleExecutionSnapshotResource {
    /// <p>Identifies the impacted snapshot resource.</p>
    pub fn snapshot_id(&self) -> ::std::option::Option<&str> {
        self.snapshot_id.as_deref()
    }
    /// <p>The runtime status of the lifecycle action taken for the snapshot.</p>
    pub fn state(&self) -> ::std::option::Option<&crate::types::LifecycleExecutionResourceState> {
        self.state.as_ref()
    }
}
impl LifecycleExecutionSnapshotResource {
    /// Creates a new builder-style object to manufacture [`LifecycleExecutionSnapshotResource`](crate::types::LifecycleExecutionSnapshotResource).
    pub fn builder() -> crate::types::builders::LifecycleExecutionSnapshotResourceBuilder {
        crate::types::builders::LifecycleExecutionSnapshotResourceBuilder::default()
    }
}

/// A builder for [`LifecycleExecutionSnapshotResource`](crate::types::LifecycleExecutionSnapshotResource).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct LifecycleExecutionSnapshotResourceBuilder {
    pub(crate) snapshot_id: ::std::option::Option<::std::string::String>,
    pub(crate) state: ::std::option::Option<crate::types::LifecycleExecutionResourceState>,
}
impl LifecycleExecutionSnapshotResourceBuilder {
    /// <p>Identifies the impacted snapshot resource.</p>
    pub fn snapshot_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.snapshot_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Identifies the impacted snapshot resource.</p>
    pub fn set_snapshot_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.snapshot_id = input;
        self
    }
    /// <p>Identifies the impacted snapshot resource.</p>
    pub fn get_snapshot_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.snapshot_id
    }
    /// <p>The runtime status of the lifecycle action taken for the snapshot.</p>
    pub fn state(mut self, input: crate::types::LifecycleExecutionResourceState) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// <p>The runtime status of the lifecycle action taken for the snapshot.</p>
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::LifecycleExecutionResourceState>) -> Self {
        self.state = input;
        self
    }
    /// <p>The runtime status of the lifecycle action taken for the snapshot.</p>
    pub fn get_state(&self) -> &::std::option::Option<crate::types::LifecycleExecutionResourceState> {
        &self.state
    }
    /// Consumes the builder and constructs a [`LifecycleExecutionSnapshotResource`](crate::types::LifecycleExecutionSnapshotResource).
    pub fn build(self) -> crate::types::LifecycleExecutionSnapshotResource {
        crate::types::LifecycleExecutionSnapshotResource {
            snapshot_id: self.snapshot_id,
            state: self.state,
        }
    }
}
