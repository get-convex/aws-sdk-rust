// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies an Image Builder recipe that the lifecycle policy uses for resource selection.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LifecyclePolicyResourceSelectionRecipe {
    /// <p>The name of an Image Builder recipe that the lifecycle policy uses for resource selection.</p>
    pub name: ::std::string::String,
    /// <p>The version of the Image Builder recipe specified by the <code>name</code> field.</p>
    pub semantic_version: ::std::string::String,
}
impl LifecyclePolicyResourceSelectionRecipe {
    /// <p>The name of an Image Builder recipe that the lifecycle policy uses for resource selection.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The version of the Image Builder recipe specified by the <code>name</code> field.</p>
    pub fn semantic_version(&self) -> &str {
        use std::ops::Deref;
        self.semantic_version.deref()
    }
}
impl LifecyclePolicyResourceSelectionRecipe {
    /// Creates a new builder-style object to manufacture [`LifecyclePolicyResourceSelectionRecipe`](crate::types::LifecyclePolicyResourceSelectionRecipe).
    pub fn builder() -> crate::types::builders::LifecyclePolicyResourceSelectionRecipeBuilder {
        crate::types::builders::LifecyclePolicyResourceSelectionRecipeBuilder::default()
    }
}

/// A builder for [`LifecyclePolicyResourceSelectionRecipe`](crate::types::LifecyclePolicyResourceSelectionRecipe).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct LifecyclePolicyResourceSelectionRecipeBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) semantic_version: ::std::option::Option<::std::string::String>,
}
impl LifecyclePolicyResourceSelectionRecipeBuilder {
    /// <p>The name of an Image Builder recipe that the lifecycle policy uses for resource selection.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of an Image Builder recipe that the lifecycle policy uses for resource selection.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of an Image Builder recipe that the lifecycle policy uses for resource selection.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The version of the Image Builder recipe specified by the <code>name</code> field.</p>
    /// This field is required.
    pub fn semantic_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.semantic_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the Image Builder recipe specified by the <code>name</code> field.</p>
    pub fn set_semantic_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.semantic_version = input;
        self
    }
    /// <p>The version of the Image Builder recipe specified by the <code>name</code> field.</p>
    pub fn get_semantic_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.semantic_version
    }
    /// Consumes the builder and constructs a [`LifecyclePolicyResourceSelectionRecipe`](crate::types::LifecyclePolicyResourceSelectionRecipe).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::LifecyclePolicyResourceSelectionRecipeBuilder::name)
    /// - [`semantic_version`](crate::types::builders::LifecyclePolicyResourceSelectionRecipeBuilder::semantic_version)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::LifecyclePolicyResourceSelectionRecipe, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::LifecyclePolicyResourceSelectionRecipe {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building LifecyclePolicyResourceSelectionRecipe",
                )
            })?,
            semantic_version: self.semantic_version.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "semantic_version",
                    "semantic_version was not specified but it is required when building LifecyclePolicyResourceSelectionRecipe",
                )
            })?,
        })
    }
}
