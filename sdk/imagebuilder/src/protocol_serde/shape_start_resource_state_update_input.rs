// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_start_resource_state_update_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::start_resource_state_update::StartResourceStateUpdateInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("clientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.exclusion_rules {
        #[allow(unused_mut)]
        let mut object_3 = object.key("exclusionRules").start_object();
        crate::protocol_serde::shape_resource_state_update_exclusion_rules::ser_resource_state_update_exclusion_rules(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.execution_role {
        object.key("executionRole").string(var_4.as_str());
    }
    if let Some(var_5) = &input.include_resources {
        #[allow(unused_mut)]
        let mut object_6 = object.key("includeResources").start_object();
        crate::protocol_serde::shape_resource_state_update_include_resources::ser_resource_state_update_include_resources(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.resource_arn {
        object.key("resourceArn").string(var_7.as_str());
    }
    if let Some(var_8) = &input.state {
        #[allow(unused_mut)]
        let mut object_9 = object.key("state").start_object();
        crate::protocol_serde::shape_resource_state::ser_resource_state(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.update_at {
        object
            .key("updateAt")
            .date_time(var_10, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    Ok(())
}
