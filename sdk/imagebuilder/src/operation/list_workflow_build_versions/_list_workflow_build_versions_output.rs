// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListWorkflowBuildVersionsOutput {
    /// <p>A list that contains metadata for the workflow builds that have run for the workflow resource specified in the request.</p>
    pub workflow_summary_list: ::std::option::Option<::std::vec::Vec<crate::types::WorkflowSummary>>,
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListWorkflowBuildVersionsOutput {
    /// <p>A list that contains metadata for the workflow builds that have run for the workflow resource specified in the request.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.workflow_summary_list.is_none()`.
    pub fn workflow_summary_list(&self) -> &[crate::types::WorkflowSummary] {
        self.workflow_summary_list.as_deref().unwrap_or_default()
    }
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for ListWorkflowBuildVersionsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListWorkflowBuildVersionsOutput {
    /// Creates a new builder-style object to manufacture [`ListWorkflowBuildVersionsOutput`](crate::operation::list_workflow_build_versions::ListWorkflowBuildVersionsOutput).
    pub fn builder() -> crate::operation::list_workflow_build_versions::builders::ListWorkflowBuildVersionsOutputBuilder {
        crate::operation::list_workflow_build_versions::builders::ListWorkflowBuildVersionsOutputBuilder::default()
    }
}

/// A builder for [`ListWorkflowBuildVersionsOutput`](crate::operation::list_workflow_build_versions::ListWorkflowBuildVersionsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListWorkflowBuildVersionsOutputBuilder {
    pub(crate) workflow_summary_list: ::std::option::Option<::std::vec::Vec<crate::types::WorkflowSummary>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListWorkflowBuildVersionsOutputBuilder {
    /// Appends an item to `workflow_summary_list`.
    ///
    /// To override the contents of this collection use [`set_workflow_summary_list`](Self::set_workflow_summary_list).
    ///
    /// <p>A list that contains metadata for the workflow builds that have run for the workflow resource specified in the request.</p>
    pub fn workflow_summary_list(mut self, input: crate::types::WorkflowSummary) -> Self {
        let mut v = self.workflow_summary_list.unwrap_or_default();
        v.push(input);
        self.workflow_summary_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list that contains metadata for the workflow builds that have run for the workflow resource specified in the request.</p>
    pub fn set_workflow_summary_list(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::WorkflowSummary>>) -> Self {
        self.workflow_summary_list = input;
        self
    }
    /// <p>A list that contains metadata for the workflow builds that have run for the workflow resource specified in the request.</p>
    pub fn get_workflow_summary_list(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::WorkflowSummary>> {
        &self.workflow_summary_list
    }
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListWorkflowBuildVersionsOutput`](crate::operation::list_workflow_build_versions::ListWorkflowBuildVersionsOutput).
    pub fn build(self) -> crate::operation::list_workflow_build_versions::ListWorkflowBuildVersionsOutput {
        crate::operation::list_workflow_build_versions::ListWorkflowBuildVersionsOutput {
            workflow_summary_list: self.workflow_summary_list,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
