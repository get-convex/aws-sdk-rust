// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListWorkflowsOutput {
    /// <p>A list of workflow build versions that match the request criteria.</p>
    pub workflow_version_list: ::std::option::Option<::std::vec::Vec<crate::types::WorkflowVersion>>,
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListWorkflowsOutput {
    /// <p>A list of workflow build versions that match the request criteria.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.workflow_version_list.is_none()`.
    pub fn workflow_version_list(&self) -> &[crate::types::WorkflowVersion] {
        self.workflow_version_list.as_deref().unwrap_or_default()
    }
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for ListWorkflowsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListWorkflowsOutput {
    /// Creates a new builder-style object to manufacture [`ListWorkflowsOutput`](crate::operation::list_workflows::ListWorkflowsOutput).
    pub fn builder() -> crate::operation::list_workflows::builders::ListWorkflowsOutputBuilder {
        crate::operation::list_workflows::builders::ListWorkflowsOutputBuilder::default()
    }
}

/// A builder for [`ListWorkflowsOutput`](crate::operation::list_workflows::ListWorkflowsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListWorkflowsOutputBuilder {
    pub(crate) workflow_version_list: ::std::option::Option<::std::vec::Vec<crate::types::WorkflowVersion>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListWorkflowsOutputBuilder {
    /// Appends an item to `workflow_version_list`.
    ///
    /// To override the contents of this collection use [`set_workflow_version_list`](Self::set_workflow_version_list).
    ///
    /// <p>A list of workflow build versions that match the request criteria.</p>
    pub fn workflow_version_list(mut self, input: crate::types::WorkflowVersion) -> Self {
        let mut v = self.workflow_version_list.unwrap_or_default();
        v.push(input);
        self.workflow_version_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of workflow build versions that match the request criteria.</p>
    pub fn set_workflow_version_list(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::WorkflowVersion>>) -> Self {
        self.workflow_version_list = input;
        self
    }
    /// <p>A list of workflow build versions that match the request criteria.</p>
    pub fn get_workflow_version_list(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::WorkflowVersion>> {
        &self.workflow_version_list
    }
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service hasn't included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListWorkflowsOutput`](crate::operation::list_workflows::ListWorkflowsOutput).
    pub fn build(self) -> crate::operation::list_workflows::ListWorkflowsOutput {
        crate::operation::list_workflows::ListWorkflowsOutput {
            workflow_version_list: self.workflow_version_list,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
