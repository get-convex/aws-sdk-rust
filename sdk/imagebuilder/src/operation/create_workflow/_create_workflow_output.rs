// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateWorkflowOutput {
    /// <p>The client token that uniquely identifies the request.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the workflow resource that the request created.</p>
    pub workflow_build_version_arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CreateWorkflowOutput {
    /// <p>The client token that uniquely identifies the request.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the workflow resource that the request created.</p>
    pub fn workflow_build_version_arn(&self) -> ::std::option::Option<&str> {
        self.workflow_build_version_arn.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for CreateWorkflowOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateWorkflowOutput {
    /// Creates a new builder-style object to manufacture [`CreateWorkflowOutput`](crate::operation::create_workflow::CreateWorkflowOutput).
    pub fn builder() -> crate::operation::create_workflow::builders::CreateWorkflowOutputBuilder {
        crate::operation::create_workflow::builders::CreateWorkflowOutputBuilder::default()
    }
}

/// A builder for [`CreateWorkflowOutput`](crate::operation::create_workflow::CreateWorkflowOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateWorkflowOutputBuilder {
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
    pub(crate) workflow_build_version_arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CreateWorkflowOutputBuilder {
    /// <p>The client token that uniquely identifies the request.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The client token that uniquely identifies the request.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>The client token that uniquely identifies the request.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// <p>The Amazon Resource Name (ARN) of the workflow resource that the request created.</p>
    pub fn workflow_build_version_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workflow_build_version_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the workflow resource that the request created.</p>
    pub fn set_workflow_build_version_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workflow_build_version_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the workflow resource that the request created.</p>
    pub fn get_workflow_build_version_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.workflow_build_version_arn
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateWorkflowOutput`](crate::operation::create_workflow::CreateWorkflowOutput).
    pub fn build(self) -> crate::operation::create_workflow::CreateWorkflowOutput {
        crate::operation::create_workflow::CreateWorkflowOutput {
            client_token: self.client_token,
            workflow_build_version_arn: self.workflow_build_version_arn,
            _request_id: self._request_id,
        }
    }
}
