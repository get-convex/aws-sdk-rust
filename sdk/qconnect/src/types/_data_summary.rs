// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary of the data.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DataSummary {
    /// <p>Reference information about the content.</p>
    pub reference: ::std::option::Option<crate::types::DataReference>,
    /// <p>Details about the data.</p>
    pub details: ::std::option::Option<crate::types::DataDetails>,
}
impl DataSummary {
    /// <p>Reference information about the content.</p>
    pub fn reference(&self) -> ::std::option::Option<&crate::types::DataReference> {
        self.reference.as_ref()
    }
    /// <p>Details about the data.</p>
    pub fn details(&self) -> ::std::option::Option<&crate::types::DataDetails> {
        self.details.as_ref()
    }
}
impl DataSummary {
    /// Creates a new builder-style object to manufacture [`DataSummary`](crate::types::DataSummary).
    pub fn builder() -> crate::types::builders::DataSummaryBuilder {
        crate::types::builders::DataSummaryBuilder::default()
    }
}

/// A builder for [`DataSummary`](crate::types::DataSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DataSummaryBuilder {
    pub(crate) reference: ::std::option::Option<crate::types::DataReference>,
    pub(crate) details: ::std::option::Option<crate::types::DataDetails>,
}
impl DataSummaryBuilder {
    /// <p>Reference information about the content.</p>
    /// This field is required.
    pub fn reference(mut self, input: crate::types::DataReference) -> Self {
        self.reference = ::std::option::Option::Some(input);
        self
    }
    /// <p>Reference information about the content.</p>
    pub fn set_reference(mut self, input: ::std::option::Option<crate::types::DataReference>) -> Self {
        self.reference = input;
        self
    }
    /// <p>Reference information about the content.</p>
    pub fn get_reference(&self) -> &::std::option::Option<crate::types::DataReference> {
        &self.reference
    }
    /// <p>Details about the data.</p>
    /// This field is required.
    pub fn details(mut self, input: crate::types::DataDetails) -> Self {
        self.details = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details about the data.</p>
    pub fn set_details(mut self, input: ::std::option::Option<crate::types::DataDetails>) -> Self {
        self.details = input;
        self
    }
    /// <p>Details about the data.</p>
    pub fn get_details(&self) -> &::std::option::Option<crate::types::DataDetails> {
        &self.details
    }
    /// Consumes the builder and constructs a [`DataSummary`](crate::types::DataSummary).
    pub fn build(self) -> crate::types::DataSummary {
        crate::types::DataSummary {
            reference: self.reference,
            details: self.details,
        }
    }
}
