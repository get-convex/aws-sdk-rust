// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Reserved for future use.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RdsCustomClusterConfiguration {
    /// <p>Reserved for future use.</p>
    pub interconnect_subnet_id: ::std::option::Option<::std::string::String>,
    /// <p>Reserved for future use.</p>
    pub transit_gateway_multicast_domain_id: ::std::option::Option<::std::string::String>,
    /// <p>Reserved for future use.</p>
    pub replica_mode: ::std::option::Option<crate::types::ReplicaMode>,
}
impl RdsCustomClusterConfiguration {
    /// <p>Reserved for future use.</p>
    pub fn interconnect_subnet_id(&self) -> ::std::option::Option<&str> {
        self.interconnect_subnet_id.as_deref()
    }
    /// <p>Reserved for future use.</p>
    pub fn transit_gateway_multicast_domain_id(&self) -> ::std::option::Option<&str> {
        self.transit_gateway_multicast_domain_id.as_deref()
    }
    /// <p>Reserved for future use.</p>
    pub fn replica_mode(&self) -> ::std::option::Option<&crate::types::ReplicaMode> {
        self.replica_mode.as_ref()
    }
}
impl RdsCustomClusterConfiguration {
    /// Creates a new builder-style object to manufacture [`RdsCustomClusterConfiguration`](crate::types::RdsCustomClusterConfiguration).
    pub fn builder() -> crate::types::builders::RdsCustomClusterConfigurationBuilder {
        crate::types::builders::RdsCustomClusterConfigurationBuilder::default()
    }
}

/// A builder for [`RdsCustomClusterConfiguration`](crate::types::RdsCustomClusterConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RdsCustomClusterConfigurationBuilder {
    pub(crate) interconnect_subnet_id: ::std::option::Option<::std::string::String>,
    pub(crate) transit_gateway_multicast_domain_id: ::std::option::Option<::std::string::String>,
    pub(crate) replica_mode: ::std::option::Option<crate::types::ReplicaMode>,
}
impl RdsCustomClusterConfigurationBuilder {
    /// <p>Reserved for future use.</p>
    pub fn interconnect_subnet_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.interconnect_subnet_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Reserved for future use.</p>
    pub fn set_interconnect_subnet_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.interconnect_subnet_id = input;
        self
    }
    /// <p>Reserved for future use.</p>
    pub fn get_interconnect_subnet_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.interconnect_subnet_id
    }
    /// <p>Reserved for future use.</p>
    pub fn transit_gateway_multicast_domain_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.transit_gateway_multicast_domain_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Reserved for future use.</p>
    pub fn set_transit_gateway_multicast_domain_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.transit_gateway_multicast_domain_id = input;
        self
    }
    /// <p>Reserved for future use.</p>
    pub fn get_transit_gateway_multicast_domain_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.transit_gateway_multicast_domain_id
    }
    /// <p>Reserved for future use.</p>
    pub fn replica_mode(mut self, input: crate::types::ReplicaMode) -> Self {
        self.replica_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>Reserved for future use.</p>
    pub fn set_replica_mode(mut self, input: ::std::option::Option<crate::types::ReplicaMode>) -> Self {
        self.replica_mode = input;
        self
    }
    /// <p>Reserved for future use.</p>
    pub fn get_replica_mode(&self) -> &::std::option::Option<crate::types::ReplicaMode> {
        &self.replica_mode
    }
    /// Consumes the builder and constructs a [`RdsCustomClusterConfiguration`](crate::types::RdsCustomClusterConfiguration).
    pub fn build(self) -> crate::types::RdsCustomClusterConfiguration {
        crate::types::RdsCustomClusterConfiguration {
            interconnect_subnet_id: self.interconnect_subnet_id,
            transit_gateway_multicast_domain_id: self.transit_gateway_multicast_domain_id,
            replica_mode: self.replica_mode,
        }
    }
}
