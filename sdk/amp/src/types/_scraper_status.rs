// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Represents the status of a scraper.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ScraperStatus {
    /// Status code of this scraper.
    pub status_code: crate::types::ScraperStatusCode,
}
impl ScraperStatus {
    /// Status code of this scraper.
    pub fn status_code(&self) -> &crate::types::ScraperStatusCode {
        &self.status_code
    }
}
impl ScraperStatus {
    /// Creates a new builder-style object to manufacture [`ScraperStatus`](crate::types::ScraperStatus).
    pub fn builder() -> crate::types::builders::ScraperStatusBuilder {
        crate::types::builders::ScraperStatusBuilder::default()
    }
}

/// A builder for [`ScraperStatus`](crate::types::ScraperStatus).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ScraperStatusBuilder {
    pub(crate) status_code: ::std::option::Option<crate::types::ScraperStatusCode>,
}
impl ScraperStatusBuilder {
    /// Status code of this scraper.
    /// This field is required.
    pub fn status_code(mut self, input: crate::types::ScraperStatusCode) -> Self {
        self.status_code = ::std::option::Option::Some(input);
        self
    }
    /// Status code of this scraper.
    pub fn set_status_code(mut self, input: ::std::option::Option<crate::types::ScraperStatusCode>) -> Self {
        self.status_code = input;
        self
    }
    /// Status code of this scraper.
    pub fn get_status_code(&self) -> &::std::option::Option<crate::types::ScraperStatusCode> {
        &self.status_code
    }
    /// Consumes the builder and constructs a [`ScraperStatus`](crate::types::ScraperStatus).
    /// This method will fail if any of the following fields are not set:
    /// - [`status_code`](crate::types::builders::ScraperStatusBuilder::status_code)
    pub fn build(self) -> ::std::result::Result<crate::types::ScraperStatus, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ScraperStatus {
            status_code: self.status_code.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status_code",
                    "status_code was not specified but it is required when building ScraperStatus",
                )
            })?,
        })
    }
}
