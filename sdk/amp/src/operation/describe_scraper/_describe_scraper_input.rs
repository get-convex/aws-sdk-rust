// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Represents the input of a DescribeScraper operation.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeScraperInput {
    /// The IDs of the scraper to describe.
    pub scraper_id: ::std::option::Option<::std::string::String>,
}
impl DescribeScraperInput {
    /// The IDs of the scraper to describe.
    pub fn scraper_id(&self) -> ::std::option::Option<&str> {
        self.scraper_id.as_deref()
    }
}
impl DescribeScraperInput {
    /// Creates a new builder-style object to manufacture [`DescribeScraperInput`](crate::operation::describe_scraper::DescribeScraperInput).
    pub fn builder() -> crate::operation::describe_scraper::builders::DescribeScraperInputBuilder {
        crate::operation::describe_scraper::builders::DescribeScraperInputBuilder::default()
    }
}

/// A builder for [`DescribeScraperInput`](crate::operation::describe_scraper::DescribeScraperInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeScraperInputBuilder {
    pub(crate) scraper_id: ::std::option::Option<::std::string::String>,
}
impl DescribeScraperInputBuilder {
    /// The IDs of the scraper to describe.
    /// This field is required.
    pub fn scraper_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.scraper_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The IDs of the scraper to describe.
    pub fn set_scraper_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.scraper_id = input;
        self
    }
    /// The IDs of the scraper to describe.
    pub fn get_scraper_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.scraper_id
    }
    /// Consumes the builder and constructs a [`DescribeScraperInput`](crate::operation::describe_scraper::DescribeScraperInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::describe_scraper::DescribeScraperInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::describe_scraper::DescribeScraperInput { scraper_id: self.scraper_id })
    }
}
