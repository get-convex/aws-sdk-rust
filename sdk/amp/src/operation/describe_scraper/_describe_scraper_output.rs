// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Represents the output of a DescribeScraper operation.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeScraperOutput {
    /// The properties of the selected scrapers.
    pub scraper: ::std::option::Option<crate::types::ScraperDescription>,
    _request_id: Option<String>,
}
impl DescribeScraperOutput {
    /// The properties of the selected scrapers.
    pub fn scraper(&self) -> ::std::option::Option<&crate::types::ScraperDescription> {
        self.scraper.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for DescribeScraperOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeScraperOutput {
    /// Creates a new builder-style object to manufacture [`DescribeScraperOutput`](crate::operation::describe_scraper::DescribeScraperOutput).
    pub fn builder() -> crate::operation::describe_scraper::builders::DescribeScraperOutputBuilder {
        crate::operation::describe_scraper::builders::DescribeScraperOutputBuilder::default()
    }
}

/// A builder for [`DescribeScraperOutput`](crate::operation::describe_scraper::DescribeScraperOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeScraperOutputBuilder {
    pub(crate) scraper: ::std::option::Option<crate::types::ScraperDescription>,
    _request_id: Option<String>,
}
impl DescribeScraperOutputBuilder {
    /// The properties of the selected scrapers.
    /// This field is required.
    pub fn scraper(mut self, input: crate::types::ScraperDescription) -> Self {
        self.scraper = ::std::option::Option::Some(input);
        self
    }
    /// The properties of the selected scrapers.
    pub fn set_scraper(mut self, input: ::std::option::Option<crate::types::ScraperDescription>) -> Self {
        self.scraper = input;
        self
    }
    /// The properties of the selected scrapers.
    pub fn get_scraper(&self) -> &::std::option::Option<crate::types::ScraperDescription> {
        &self.scraper
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeScraperOutput`](crate::operation::describe_scraper::DescribeScraperOutput).
    pub fn build(self) -> crate::operation::describe_scraper::DescribeScraperOutput {
        crate::operation::describe_scraper::DescribeScraperOutput {
            scraper: self.scraper,
            _request_id: self._request_id,
        }
    }
}
