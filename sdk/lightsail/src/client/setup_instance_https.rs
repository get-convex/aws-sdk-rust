// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SetupInstanceHttps`](crate::operation::setup_instance_https::builders::SetupInstanceHttpsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_name(impl Into<String>)`](crate::operation::setup_instance_https::builders::SetupInstanceHttpsFluentBuilder::instance_name) / [`set_instance_name(Option<String>)`](crate::operation::setup_instance_https::builders::SetupInstanceHttpsFluentBuilder::set_instance_name):<br>required: **true**<br><p>The name of the Lightsail instance.</p><br>
    ///   - [`email_address(impl Into<String>)`](crate::operation::setup_instance_https::builders::SetupInstanceHttpsFluentBuilder::email_address) / [`set_email_address(Option<String>)`](crate::operation::setup_instance_https::builders::SetupInstanceHttpsFluentBuilder::set_email_address):<br>required: **true**<br><p>The contact method for SSL/TLS certificate renewal alerts. You can enter one email address.</p><br>
    ///   - [`domain_names(impl Into<String>)`](crate::operation::setup_instance_https::builders::SetupInstanceHttpsFluentBuilder::domain_names) / [`set_domain_names(Option<Vec::<String>>)`](crate::operation::setup_instance_https::builders::SetupInstanceHttpsFluentBuilder::set_domain_names):<br>required: **true**<br><p>The name of the domain and subdomains that were specified for the SSL/TLS certificate.</p><br>
    ///   - [`certificate_provider(CertificateProvider)`](crate::operation::setup_instance_https::builders::SetupInstanceHttpsFluentBuilder::certificate_provider) / [`set_certificate_provider(Option<CertificateProvider>)`](crate::operation::setup_instance_https::builders::SetupInstanceHttpsFluentBuilder::set_certificate_provider):<br>required: **true**<br><p>The certificate authority that issues the SSL/TLS certificate.</p><br>
    /// - On success, responds with [`SetupInstanceHttpsOutput`](crate::operation::setup_instance_https::SetupInstanceHttpsOutput) with field(s):
    ///   - [`operations(Option<Vec::<Operation>>)`](crate::operation::setup_instance_https::SetupInstanceHttpsOutput::operations): <p>The available API operations for <code>SetupInstanceHttps</code>.</p>
    /// - On failure, responds with [`SdkError<SetupInstanceHttpsError>`](crate::operation::setup_instance_https::SetupInstanceHttpsError)
    pub fn setup_instance_https(&self) -> crate::operation::setup_instance_https::builders::SetupInstanceHttpsFluentBuilder {
        crate::operation::setup_instance_https::builders::SetupInstanceHttpsFluentBuilder::new(self.handle.clone())
    }
}
