// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about an unused access finding for an action. IAM Access Analyzer charges for unused access analysis based on the number of IAM roles and users analyzed per month. For more details on pricing, see <a href="https://aws.amazon.com/iam/access-analyzer/pricing">IAM Access Analyzer pricing</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UnusedAction {
    /// <p>The action for which the unused access finding was generated.</p>
    pub action: ::std::string::String,
    /// <p>The time at which the action was last accessed.</p>
    pub last_accessed: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl UnusedAction {
    /// <p>The action for which the unused access finding was generated.</p>
    pub fn action(&self) -> &str {
        use std::ops::Deref;
        self.action.deref()
    }
    /// <p>The time at which the action was last accessed.</p>
    pub fn last_accessed(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_accessed.as_ref()
    }
}
impl UnusedAction {
    /// Creates a new builder-style object to manufacture [`UnusedAction`](crate::types::UnusedAction).
    pub fn builder() -> crate::types::builders::UnusedActionBuilder {
        crate::types::builders::UnusedActionBuilder::default()
    }
}

/// A builder for [`UnusedAction`](crate::types::UnusedAction).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UnusedActionBuilder {
    pub(crate) action: ::std::option::Option<::std::string::String>,
    pub(crate) last_accessed: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl UnusedActionBuilder {
    /// <p>The action for which the unused access finding was generated.</p>
    /// This field is required.
    pub fn action(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.action = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The action for which the unused access finding was generated.</p>
    pub fn set_action(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.action = input;
        self
    }
    /// <p>The action for which the unused access finding was generated.</p>
    pub fn get_action(&self) -> &::std::option::Option<::std::string::String> {
        &self.action
    }
    /// <p>The time at which the action was last accessed.</p>
    pub fn last_accessed(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_accessed = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time at which the action was last accessed.</p>
    pub fn set_last_accessed(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_accessed = input;
        self
    }
    /// <p>The time at which the action was last accessed.</p>
    pub fn get_last_accessed(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_accessed
    }
    /// Consumes the builder and constructs a [`UnusedAction`](crate::types::UnusedAction).
    /// This method will fail if any of the following fields are not set:
    /// - [`action`](crate::types::builders::UnusedActionBuilder::action)
    pub fn build(self) -> ::std::result::Result<crate::types::UnusedAction, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::UnusedAction {
            action: self.action.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "action",
                    "action was not specified but it is required when building UnusedAction",
                )
            })?,
            last_accessed: self.last_accessed,
        })
    }
}
