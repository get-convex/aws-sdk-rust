// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CheckAccessNotGranted`](crate::operation::check_access_not_granted::builders::CheckAccessNotGrantedFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_document(impl Into<String>)`](crate::operation::check_access_not_granted::builders::CheckAccessNotGrantedFluentBuilder::policy_document) / [`set_policy_document(Option<String>)`](crate::operation::check_access_not_granted::builders::CheckAccessNotGrantedFluentBuilder::set_policy_document):<br>required: **true**<br><p>The JSON policy document to use as the content for the policy.</p><br>
    ///   - [`access(Access)`](crate::operation::check_access_not_granted::builders::CheckAccessNotGrantedFluentBuilder::access) / [`set_access(Option<Vec::<Access>>)`](crate::operation::check_access_not_granted::builders::CheckAccessNotGrantedFluentBuilder::set_access):<br>required: **true**<br><p>An access object containing the permissions that shouldn't be granted by the specified policy.</p><br>
    ///   - [`policy_type(AccessCheckPolicyType)`](crate::operation::check_access_not_granted::builders::CheckAccessNotGrantedFluentBuilder::policy_type) / [`set_policy_type(Option<AccessCheckPolicyType>)`](crate::operation::check_access_not_granted::builders::CheckAccessNotGrantedFluentBuilder::set_policy_type):<br>required: **true**<br><p>The type of policy. Identity policies grant permissions to IAM principals. Identity policies include managed and inline policies for IAM roles, users, and groups.</p> <p>Resource policies grant permissions on Amazon Web Services resources. Resource policies include trust policies for IAM roles and bucket policies for Amazon S3 buckets. You can provide a generic input such as identity policy or resource policy or a specific input such as managed policy or Amazon S3 bucket policy.</p><br>
    /// - On success, responds with [`CheckAccessNotGrantedOutput`](crate::operation::check_access_not_granted::CheckAccessNotGrantedOutput) with field(s):
    ///   - [`result(Option<CheckAccessNotGrantedResult>)`](crate::operation::check_access_not_granted::CheckAccessNotGrantedOutput::result): <p>The result of the check for whether the access is allowed. If the result is <code>PASS</code>, the specified policy doesn't allow any of the specified permissions in the access object. If the result is <code>FAIL</code>, the specified policy might allow some or all of the permissions in the access object.</p>
    ///   - [`message(Option<String>)`](crate::operation::check_access_not_granted::CheckAccessNotGrantedOutput::message): <p>The message indicating whether the specified access is allowed.</p>
    ///   - [`reasons(Option<Vec::<ReasonSummary>>)`](crate::operation::check_access_not_granted::CheckAccessNotGrantedOutput::reasons): <p>A description of the reasoning of the result.</p>
    /// - On failure, responds with [`SdkError<CheckAccessNotGrantedError>`](crate::operation::check_access_not_granted::CheckAccessNotGrantedError)
    pub fn check_access_not_granted(&self) -> crate::operation::check_access_not_granted::builders::CheckAccessNotGrantedFluentBuilder {
        crate::operation::check_access_not_granted::builders::CheckAccessNotGrantedFluentBuilder::new(self.handle.clone())
    }
}
