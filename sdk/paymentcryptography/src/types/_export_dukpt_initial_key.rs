// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Parameter information for IPEK generation during export.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExportDukptInitialKey {
    /// <p>The KSN for IPEK generation using DUKPT.</p>
    /// <p>KSN must be padded before sending to Amazon Web Services Payment Cryptography. KSN hex length should be 20 for a TDES_2KEY key or 24 for an AES key.</p>
    pub key_serial_number: ::std::string::String,
}
impl ExportDukptInitialKey {
    /// <p>The KSN for IPEK generation using DUKPT.</p>
    /// <p>KSN must be padded before sending to Amazon Web Services Payment Cryptography. KSN hex length should be 20 for a TDES_2KEY key or 24 for an AES key.</p>
    pub fn key_serial_number(&self) -> &str {
        use std::ops::Deref;
        self.key_serial_number.deref()
    }
}
impl ExportDukptInitialKey {
    /// Creates a new builder-style object to manufacture [`ExportDukptInitialKey`](crate::types::ExportDukptInitialKey).
    pub fn builder() -> crate::types::builders::ExportDukptInitialKeyBuilder {
        crate::types::builders::ExportDukptInitialKeyBuilder::default()
    }
}

/// A builder for [`ExportDukptInitialKey`](crate::types::ExportDukptInitialKey).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExportDukptInitialKeyBuilder {
    pub(crate) key_serial_number: ::std::option::Option<::std::string::String>,
}
impl ExportDukptInitialKeyBuilder {
    /// <p>The KSN for IPEK generation using DUKPT.</p>
    /// <p>KSN must be padded before sending to Amazon Web Services Payment Cryptography. KSN hex length should be 20 for a TDES_2KEY key or 24 for an AES key.</p>
    /// This field is required.
    pub fn key_serial_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.key_serial_number = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The KSN for IPEK generation using DUKPT.</p>
    /// <p>KSN must be padded before sending to Amazon Web Services Payment Cryptography. KSN hex length should be 20 for a TDES_2KEY key or 24 for an AES key.</p>
    pub fn set_key_serial_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.key_serial_number = input;
        self
    }
    /// <p>The KSN for IPEK generation using DUKPT.</p>
    /// <p>KSN must be padded before sending to Amazon Web Services Payment Cryptography. KSN hex length should be 20 for a TDES_2KEY key or 24 for an AES key.</p>
    pub fn get_key_serial_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.key_serial_number
    }
    /// Consumes the builder and constructs a [`ExportDukptInitialKey`](crate::types::ExportDukptInitialKey).
    /// This method will fail if any of the following fields are not set:
    /// - [`key_serial_number`](crate::types::builders::ExportDukptInitialKeyBuilder::key_serial_number)
    pub fn build(self) -> ::std::result::Result<crate::types::ExportDukptInitialKey, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ExportDukptInitialKey {
            key_serial_number: self.key_serial_number.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "key_serial_number",
                    "key_serial_number was not specified but it is required when building ExportDukptInitialKey",
                )
            })?,
        })
    }
}
