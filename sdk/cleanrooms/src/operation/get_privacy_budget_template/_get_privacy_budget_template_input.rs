// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetPrivacyBudgetTemplateInput {
    /// <p>A unique identifier for one of your memberships for a collaboration. The privacy budget template is retrieved from the collaboration that this membership belongs to. Accepts a membership ID.</p>
    pub membership_identifier: ::std::option::Option<::std::string::String>,
    /// <p>A unique identifier for your privacy budget template.</p>
    pub privacy_budget_template_identifier: ::std::option::Option<::std::string::String>,
}
impl GetPrivacyBudgetTemplateInput {
    /// <p>A unique identifier for one of your memberships for a collaboration. The privacy budget template is retrieved from the collaboration that this membership belongs to. Accepts a membership ID.</p>
    pub fn membership_identifier(&self) -> ::std::option::Option<&str> {
        self.membership_identifier.as_deref()
    }
    /// <p>A unique identifier for your privacy budget template.</p>
    pub fn privacy_budget_template_identifier(&self) -> ::std::option::Option<&str> {
        self.privacy_budget_template_identifier.as_deref()
    }
}
impl GetPrivacyBudgetTemplateInput {
    /// Creates a new builder-style object to manufacture [`GetPrivacyBudgetTemplateInput`](crate::operation::get_privacy_budget_template::GetPrivacyBudgetTemplateInput).
    pub fn builder() -> crate::operation::get_privacy_budget_template::builders::GetPrivacyBudgetTemplateInputBuilder {
        crate::operation::get_privacy_budget_template::builders::GetPrivacyBudgetTemplateInputBuilder::default()
    }
}

/// A builder for [`GetPrivacyBudgetTemplateInput`](crate::operation::get_privacy_budget_template::GetPrivacyBudgetTemplateInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetPrivacyBudgetTemplateInputBuilder {
    pub(crate) membership_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) privacy_budget_template_identifier: ::std::option::Option<::std::string::String>,
}
impl GetPrivacyBudgetTemplateInputBuilder {
    /// <p>A unique identifier for one of your memberships for a collaboration. The privacy budget template is retrieved from the collaboration that this membership belongs to. Accepts a membership ID.</p>
    /// This field is required.
    pub fn membership_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.membership_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for one of your memberships for a collaboration. The privacy budget template is retrieved from the collaboration that this membership belongs to. Accepts a membership ID.</p>
    pub fn set_membership_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.membership_identifier = input;
        self
    }
    /// <p>A unique identifier for one of your memberships for a collaboration. The privacy budget template is retrieved from the collaboration that this membership belongs to. Accepts a membership ID.</p>
    pub fn get_membership_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.membership_identifier
    }
    /// <p>A unique identifier for your privacy budget template.</p>
    /// This field is required.
    pub fn privacy_budget_template_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.privacy_budget_template_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for your privacy budget template.</p>
    pub fn set_privacy_budget_template_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.privacy_budget_template_identifier = input;
        self
    }
    /// <p>A unique identifier for your privacy budget template.</p>
    pub fn get_privacy_budget_template_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.privacy_budget_template_identifier
    }
    /// Consumes the builder and constructs a [`GetPrivacyBudgetTemplateInput`](crate::operation::get_privacy_budget_template::GetPrivacyBudgetTemplateInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_privacy_budget_template::GetPrivacyBudgetTemplateInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_privacy_budget_template::GetPrivacyBudgetTemplateInput {
            membership_identifier: self.membership_identifier,
            privacy_budget_template_identifier: self.privacy_budget_template_identifier,
        })
    }
}
