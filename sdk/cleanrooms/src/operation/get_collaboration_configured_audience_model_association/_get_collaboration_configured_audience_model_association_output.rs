// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetCollaborationConfiguredAudienceModelAssociationOutput {
    /// <p>The metadata of the configured audience model association.</p>
    pub collaboration_configured_audience_model_association: ::std::option::Option<crate::types::CollaborationConfiguredAudienceModelAssociation>,
    _request_id: Option<String>,
}
impl GetCollaborationConfiguredAudienceModelAssociationOutput {
    /// <p>The metadata of the configured audience model association.</p>
    pub fn collaboration_configured_audience_model_association(
        &self,
    ) -> ::std::option::Option<&crate::types::CollaborationConfiguredAudienceModelAssociation> {
        self.collaboration_configured_audience_model_association.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetCollaborationConfiguredAudienceModelAssociationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetCollaborationConfiguredAudienceModelAssociationOutput {
    /// Creates a new builder-style object to manufacture [`GetCollaborationConfiguredAudienceModelAssociationOutput`](crate::operation::get_collaboration_configured_audience_model_association::GetCollaborationConfiguredAudienceModelAssociationOutput).
    pub fn builder() -> crate::operation::get_collaboration_configured_audience_model_association::builders::GetCollaborationConfiguredAudienceModelAssociationOutputBuilder{
        crate::operation::get_collaboration_configured_audience_model_association::builders::GetCollaborationConfiguredAudienceModelAssociationOutputBuilder::default()
    }
}

/// A builder for [`GetCollaborationConfiguredAudienceModelAssociationOutput`](crate::operation::get_collaboration_configured_audience_model_association::GetCollaborationConfiguredAudienceModelAssociationOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetCollaborationConfiguredAudienceModelAssociationOutputBuilder {
    pub(crate) collaboration_configured_audience_model_association:
        ::std::option::Option<crate::types::CollaborationConfiguredAudienceModelAssociation>,
    _request_id: Option<String>,
}
impl GetCollaborationConfiguredAudienceModelAssociationOutputBuilder {
    /// <p>The metadata of the configured audience model association.</p>
    /// This field is required.
    pub fn collaboration_configured_audience_model_association(
        mut self,
        input: crate::types::CollaborationConfiguredAudienceModelAssociation,
    ) -> Self {
        self.collaboration_configured_audience_model_association = ::std::option::Option::Some(input);
        self
    }
    /// <p>The metadata of the configured audience model association.</p>
    pub fn set_collaboration_configured_audience_model_association(
        mut self,
        input: ::std::option::Option<crate::types::CollaborationConfiguredAudienceModelAssociation>,
    ) -> Self {
        self.collaboration_configured_audience_model_association = input;
        self
    }
    /// <p>The metadata of the configured audience model association.</p>
    pub fn get_collaboration_configured_audience_model_association(
        &self,
    ) -> &::std::option::Option<crate::types::CollaborationConfiguredAudienceModelAssociation> {
        &self.collaboration_configured_audience_model_association
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetCollaborationConfiguredAudienceModelAssociationOutput`](crate::operation::get_collaboration_configured_audience_model_association::GetCollaborationConfiguredAudienceModelAssociationOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_collaboration_configured_audience_model_association::GetCollaborationConfiguredAudienceModelAssociationOutput {
        crate::operation::get_collaboration_configured_audience_model_association::GetCollaborationConfiguredAudienceModelAssociationOutput {
            collaboration_configured_audience_model_association: self.collaboration_configured_audience_model_association,
            _request_id: self._request_id,
        }
    }
}
