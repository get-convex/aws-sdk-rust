// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateConfiguredAudienceModelAssociation`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`membership_identifier(impl Into<String>)`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::membership_identifier) / [`set_membership_identifier(Option<String>)`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::set_membership_identifier):<br>required: **true**<br><p>A unique identifier for one of your memberships for a collaboration. The configured audience model is associated to the collaboration that this membership belongs to. Accepts a membership ID.</p><br>
    ///   - [`configured_audience_model_arn(impl Into<String>)`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::configured_audience_model_arn) / [`set_configured_audience_model_arn(Option<String>)`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::set_configured_audience_model_arn):<br>required: **true**<br><p>A unique identifier for the configured audience model that you want to associate.</p><br>
    ///   - [`configured_audience_model_association_name(impl Into<String>)`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::configured_audience_model_association_name) / [`set_configured_audience_model_association_name(Option<String>)`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::set_configured_audience_model_association_name):<br>required: **true**<br><p>The name of the configured audience model association.</p><br>
    ///   - [`manage_resource_policies(bool)`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::manage_resource_policies) / [`set_manage_resource_policies(Option<bool>)`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::set_manage_resource_policies):<br>required: **true**<br><p>When <code>TRUE</code>, indicates that the resource policy for the configured audience model resource being associated is configured for Clean Rooms to manage permissions related to the given collaboration. When <code>FALSE</code>, indicates that the configured audience model resource owner will manage permissions related to the given collaboration.</p> <p>Setting this to <code>TRUE</code> requires you to have permissions to create, update, and delete the resource policy for the <code>cleanrooms-ml</code> resource when you call the <code>DeleteConfiguredAudienceModelAssociation</code> resource. In addition, if you are the collaboration creator and specify <code>TRUE</code>, you must have the same permissions when you call the <code>DeleteMember</code> and <code>DeleteCollaboration</code> APIs.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::set_tags):<br>required: **false**<br><p>An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::set_description):<br>required: **false**<br><p>A description of the configured audience model association.</p><br>
    /// - On success, responds with [`CreateConfiguredAudienceModelAssociationOutput`](crate::operation::create_configured_audience_model_association::CreateConfiguredAudienceModelAssociationOutput) with field(s):
    ///   - [`configured_audience_model_association(Option<ConfiguredAudienceModelAssociation>)`](crate::operation::create_configured_audience_model_association::CreateConfiguredAudienceModelAssociationOutput::configured_audience_model_association): <p>Information about the configured audience model association.</p>
    /// - On failure, responds with [`SdkError<CreateConfiguredAudienceModelAssociationError>`](crate::operation::create_configured_audience_model_association::CreateConfiguredAudienceModelAssociationError)
    pub fn create_configured_audience_model_association(
        &self,
    ) -> crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder {
        crate::operation::create_configured_audience_model_association::builders::CreateConfiguredAudienceModelAssociationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
