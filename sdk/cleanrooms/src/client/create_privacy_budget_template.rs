// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreatePrivacyBudgetTemplate`](crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`membership_identifier(impl Into<String>)`](crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder::membership_identifier) / [`set_membership_identifier(Option<String>)`](crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder::set_membership_identifier):<br>required: **true**<br><p>A unique identifier for one of your memberships for a collaboration. The privacy budget template is created in the collaboration that this membership belongs to. Accepts a membership ID.</p><br>
    ///   - [`auto_refresh(PrivacyBudgetTemplateAutoRefresh)`](crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder::auto_refresh) / [`set_auto_refresh(Option<PrivacyBudgetTemplateAutoRefresh>)`](crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder::set_auto_refresh):<br>required: **true**<br><p>How often the privacy budget refreshes.</p><important>  <p>If you plan to regularly bring new data into the collaboration, you can use <code>CALENDAR_MONTH</code> to automatically get a new privacy budget for the collaboration every calendar month. Choosing this option allows arbitrary amounts of information to be revealed about rows of the data when repeatedly queries across refreshes. Avoid choosing this if the same rows will be repeatedly queried between privacy budget refreshes.</p> </important><br>
    ///   - [`privacy_budget_type(PrivacyBudgetType)`](crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder::privacy_budget_type) / [`set_privacy_budget_type(Option<PrivacyBudgetType>)`](crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder::set_privacy_budget_type):<br>required: **true**<br><p>Specifies the type of the privacy budget template.</p><br>
    ///   - [`parameters(PrivacyBudgetTemplateParametersInput)`](crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder::parameters) / [`set_parameters(Option<PrivacyBudgetTemplateParametersInput>)`](crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder::set_parameters):<br>required: **true**<br><p>Specifies your parameters for the privacy budget template.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder::set_tags):<br>required: **false**<br><p>An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.</p><br>
    /// - On success, responds with [`CreatePrivacyBudgetTemplateOutput`](crate::operation::create_privacy_budget_template::CreatePrivacyBudgetTemplateOutput) with field(s):
    ///   - [`privacy_budget_template(Option<PrivacyBudgetTemplate>)`](crate::operation::create_privacy_budget_template::CreatePrivacyBudgetTemplateOutput::privacy_budget_template): <p>A summary of the elements in the privacy budget template.</p>
    /// - On failure, responds with [`SdkError<CreatePrivacyBudgetTemplateError>`](crate::operation::create_privacy_budget_template::CreatePrivacyBudgetTemplateError)
    pub fn create_privacy_budget_template(
        &self,
    ) -> crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder {
        crate::operation::create_privacy_budget_template::builders::CreatePrivacyBudgetTemplateFluentBuilder::new(self.handle.clone())
    }
}
