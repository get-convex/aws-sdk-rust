// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeletePrivacyBudgetTemplate`](crate::operation::delete_privacy_budget_template::builders::DeletePrivacyBudgetTemplateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`membership_identifier(impl Into<String>)`](crate::operation::delete_privacy_budget_template::builders::DeletePrivacyBudgetTemplateFluentBuilder::membership_identifier) / [`set_membership_identifier(Option<String>)`](crate::operation::delete_privacy_budget_template::builders::DeletePrivacyBudgetTemplateFluentBuilder::set_membership_identifier):<br>required: **true**<br><p>A unique identifier for one of your memberships for a collaboration. The privacy budget template is deleted from the collaboration that this membership belongs to. Accepts a membership ID.</p><br>
    ///   - [`privacy_budget_template_identifier(impl Into<String>)`](crate::operation::delete_privacy_budget_template::builders::DeletePrivacyBudgetTemplateFluentBuilder::privacy_budget_template_identifier) / [`set_privacy_budget_template_identifier(Option<String>)`](crate::operation::delete_privacy_budget_template::builders::DeletePrivacyBudgetTemplateFluentBuilder::set_privacy_budget_template_identifier):<br>required: **true**<br><p>A unique identifier for your privacy budget template.</p><br>
    /// - On success, responds with [`DeletePrivacyBudgetTemplateOutput`](crate::operation::delete_privacy_budget_template::DeletePrivacyBudgetTemplateOutput)
    /// - On failure, responds with [`SdkError<DeletePrivacyBudgetTemplateError>`](crate::operation::delete_privacy_budget_template::DeletePrivacyBudgetTemplateError)
    pub fn delete_privacy_budget_template(
        &self,
    ) -> crate::operation::delete_privacy_budget_template::builders::DeletePrivacyBudgetTemplateFluentBuilder {
        crate::operation::delete_privacy_budget_template::builders::DeletePrivacyBudgetTemplateFluentBuilder::new(self.handle.clone())
    }
}
