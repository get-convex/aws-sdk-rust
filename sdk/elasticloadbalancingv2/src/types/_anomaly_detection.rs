// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about anomaly detection and mitigation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AnomalyDetection {
    /// <p>The latest anomaly detection result.</p>
    pub result: ::std::option::Option<crate::types::AnomalyResultEnum>,
    /// <p>Indicates whether anomaly mitigation is in progress.</p>
    pub mitigation_in_effect: ::std::option::Option<crate::types::MitigationInEffectEnum>,
}
impl AnomalyDetection {
    /// <p>The latest anomaly detection result.</p>
    pub fn result(&self) -> ::std::option::Option<&crate::types::AnomalyResultEnum> {
        self.result.as_ref()
    }
    /// <p>Indicates whether anomaly mitigation is in progress.</p>
    pub fn mitigation_in_effect(&self) -> ::std::option::Option<&crate::types::MitigationInEffectEnum> {
        self.mitigation_in_effect.as_ref()
    }
}
impl AnomalyDetection {
    /// Creates a new builder-style object to manufacture [`AnomalyDetection`](crate::types::AnomalyDetection).
    pub fn builder() -> crate::types::builders::AnomalyDetectionBuilder {
        crate::types::builders::AnomalyDetectionBuilder::default()
    }
}

/// A builder for [`AnomalyDetection`](crate::types::AnomalyDetection).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AnomalyDetectionBuilder {
    pub(crate) result: ::std::option::Option<crate::types::AnomalyResultEnum>,
    pub(crate) mitigation_in_effect: ::std::option::Option<crate::types::MitigationInEffectEnum>,
}
impl AnomalyDetectionBuilder {
    /// <p>The latest anomaly detection result.</p>
    pub fn result(mut self, input: crate::types::AnomalyResultEnum) -> Self {
        self.result = ::std::option::Option::Some(input);
        self
    }
    /// <p>The latest anomaly detection result.</p>
    pub fn set_result(mut self, input: ::std::option::Option<crate::types::AnomalyResultEnum>) -> Self {
        self.result = input;
        self
    }
    /// <p>The latest anomaly detection result.</p>
    pub fn get_result(&self) -> &::std::option::Option<crate::types::AnomalyResultEnum> {
        &self.result
    }
    /// <p>Indicates whether anomaly mitigation is in progress.</p>
    pub fn mitigation_in_effect(mut self, input: crate::types::MitigationInEffectEnum) -> Self {
        self.mitigation_in_effect = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates whether anomaly mitigation is in progress.</p>
    pub fn set_mitigation_in_effect(mut self, input: ::std::option::Option<crate::types::MitigationInEffectEnum>) -> Self {
        self.mitigation_in_effect = input;
        self
    }
    /// <p>Indicates whether anomaly mitigation is in progress.</p>
    pub fn get_mitigation_in_effect(&self) -> &::std::option::Option<crate::types::MitigationInEffectEnum> {
        &self.mitigation_in_effect
    }
    /// Consumes the builder and constructs a [`AnomalyDetection`](crate::types::AnomalyDetection).
    pub fn build(self) -> crate::types::AnomalyDetection {
        crate::types::AnomalyDetection {
            result: self.result,
            mitigation_in_effect: self.mitigation_in_effect,
        }
    }
}
