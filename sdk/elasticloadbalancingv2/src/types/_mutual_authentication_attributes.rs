// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the mutual authentication attributes of a listener.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MutualAuthenticationAttributes {
    /// <p>The client certificate handling method. Options are <code>off</code>, <code>passthrough</code> or <code>verify</code>. The default value is <code>off</code>.</p>
    pub mode: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the trust store.</p>
    pub trust_store_arn: ::std::option::Option<::std::string::String>,
    /// <p>Indicates whether expired client certificates are ignored.</p>
    pub ignore_client_certificate_expiry: ::std::option::Option<bool>,
}
impl MutualAuthenticationAttributes {
    /// <p>The client certificate handling method. Options are <code>off</code>, <code>passthrough</code> or <code>verify</code>. The default value is <code>off</code>.</p>
    pub fn mode(&self) -> ::std::option::Option<&str> {
        self.mode.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the trust store.</p>
    pub fn trust_store_arn(&self) -> ::std::option::Option<&str> {
        self.trust_store_arn.as_deref()
    }
    /// <p>Indicates whether expired client certificates are ignored.</p>
    pub fn ignore_client_certificate_expiry(&self) -> ::std::option::Option<bool> {
        self.ignore_client_certificate_expiry
    }
}
impl MutualAuthenticationAttributes {
    /// Creates a new builder-style object to manufacture [`MutualAuthenticationAttributes`](crate::types::MutualAuthenticationAttributes).
    pub fn builder() -> crate::types::builders::MutualAuthenticationAttributesBuilder {
        crate::types::builders::MutualAuthenticationAttributesBuilder::default()
    }
}

/// A builder for [`MutualAuthenticationAttributes`](crate::types::MutualAuthenticationAttributes).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MutualAuthenticationAttributesBuilder {
    pub(crate) mode: ::std::option::Option<::std::string::String>,
    pub(crate) trust_store_arn: ::std::option::Option<::std::string::String>,
    pub(crate) ignore_client_certificate_expiry: ::std::option::Option<bool>,
}
impl MutualAuthenticationAttributesBuilder {
    /// <p>The client certificate handling method. Options are <code>off</code>, <code>passthrough</code> or <code>verify</code>. The default value is <code>off</code>.</p>
    pub fn mode(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.mode = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The client certificate handling method. Options are <code>off</code>, <code>passthrough</code> or <code>verify</code>. The default value is <code>off</code>.</p>
    pub fn set_mode(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.mode = input;
        self
    }
    /// <p>The client certificate handling method. Options are <code>off</code>, <code>passthrough</code> or <code>verify</code>. The default value is <code>off</code>.</p>
    pub fn get_mode(&self) -> &::std::option::Option<::std::string::String> {
        &self.mode
    }
    /// <p>The Amazon Resource Name (ARN) of the trust store.</p>
    pub fn trust_store_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.trust_store_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the trust store.</p>
    pub fn set_trust_store_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.trust_store_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the trust store.</p>
    pub fn get_trust_store_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.trust_store_arn
    }
    /// <p>Indicates whether expired client certificates are ignored.</p>
    pub fn ignore_client_certificate_expiry(mut self, input: bool) -> Self {
        self.ignore_client_certificate_expiry = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates whether expired client certificates are ignored.</p>
    pub fn set_ignore_client_certificate_expiry(mut self, input: ::std::option::Option<bool>) -> Self {
        self.ignore_client_certificate_expiry = input;
        self
    }
    /// <p>Indicates whether expired client certificates are ignored.</p>
    pub fn get_ignore_client_certificate_expiry(&self) -> &::std::option::Option<bool> {
        &self.ignore_client_certificate_expiry
    }
    /// Consumes the builder and constructs a [`MutualAuthenticationAttributes`](crate::types::MutualAuthenticationAttributes).
    pub fn build(self) -> crate::types::MutualAuthenticationAttributes {
        crate::types::MutualAuthenticationAttributes {
            mode: self.mode,
            trust_store_arn: self.trust_store_arn,
            ignore_client_certificate_expiry: self.ignore_client_certificate_expiry,
        }
    }
}
