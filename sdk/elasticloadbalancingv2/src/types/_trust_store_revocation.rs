// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a revocation file in use by a trust store.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TrustStoreRevocation {
    /// <p>The Amazon Resource Name (ARN) of the trust store.</p>
    pub trust_store_arn: ::std::option::Option<::std::string::String>,
    /// <p>The revocation ID of the revocation file.</p>
    pub revocation_id: ::std::option::Option<i64>,
    /// <p>The type of revocation file.</p>
    pub revocation_type: ::std::option::Option<crate::types::RevocationType>,
    /// <p>The number of revoked certificates.</p>
    pub number_of_revoked_entries: ::std::option::Option<i64>,
}
impl TrustStoreRevocation {
    /// <p>The Amazon Resource Name (ARN) of the trust store.</p>
    pub fn trust_store_arn(&self) -> ::std::option::Option<&str> {
        self.trust_store_arn.as_deref()
    }
    /// <p>The revocation ID of the revocation file.</p>
    pub fn revocation_id(&self) -> ::std::option::Option<i64> {
        self.revocation_id
    }
    /// <p>The type of revocation file.</p>
    pub fn revocation_type(&self) -> ::std::option::Option<&crate::types::RevocationType> {
        self.revocation_type.as_ref()
    }
    /// <p>The number of revoked certificates.</p>
    pub fn number_of_revoked_entries(&self) -> ::std::option::Option<i64> {
        self.number_of_revoked_entries
    }
}
impl TrustStoreRevocation {
    /// Creates a new builder-style object to manufacture [`TrustStoreRevocation`](crate::types::TrustStoreRevocation).
    pub fn builder() -> crate::types::builders::TrustStoreRevocationBuilder {
        crate::types::builders::TrustStoreRevocationBuilder::default()
    }
}

/// A builder for [`TrustStoreRevocation`](crate::types::TrustStoreRevocation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TrustStoreRevocationBuilder {
    pub(crate) trust_store_arn: ::std::option::Option<::std::string::String>,
    pub(crate) revocation_id: ::std::option::Option<i64>,
    pub(crate) revocation_type: ::std::option::Option<crate::types::RevocationType>,
    pub(crate) number_of_revoked_entries: ::std::option::Option<i64>,
}
impl TrustStoreRevocationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the trust store.</p>
    pub fn trust_store_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.trust_store_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the trust store.</p>
    pub fn set_trust_store_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.trust_store_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the trust store.</p>
    pub fn get_trust_store_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.trust_store_arn
    }
    /// <p>The revocation ID of the revocation file.</p>
    pub fn revocation_id(mut self, input: i64) -> Self {
        self.revocation_id = ::std::option::Option::Some(input);
        self
    }
    /// <p>The revocation ID of the revocation file.</p>
    pub fn set_revocation_id(mut self, input: ::std::option::Option<i64>) -> Self {
        self.revocation_id = input;
        self
    }
    /// <p>The revocation ID of the revocation file.</p>
    pub fn get_revocation_id(&self) -> &::std::option::Option<i64> {
        &self.revocation_id
    }
    /// <p>The type of revocation file.</p>
    pub fn revocation_type(mut self, input: crate::types::RevocationType) -> Self {
        self.revocation_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of revocation file.</p>
    pub fn set_revocation_type(mut self, input: ::std::option::Option<crate::types::RevocationType>) -> Self {
        self.revocation_type = input;
        self
    }
    /// <p>The type of revocation file.</p>
    pub fn get_revocation_type(&self) -> &::std::option::Option<crate::types::RevocationType> {
        &self.revocation_type
    }
    /// <p>The number of revoked certificates.</p>
    pub fn number_of_revoked_entries(mut self, input: i64) -> Self {
        self.number_of_revoked_entries = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of revoked certificates.</p>
    pub fn set_number_of_revoked_entries(mut self, input: ::std::option::Option<i64>) -> Self {
        self.number_of_revoked_entries = input;
        self
    }
    /// <p>The number of revoked certificates.</p>
    pub fn get_number_of_revoked_entries(&self) -> &::std::option::Option<i64> {
        &self.number_of_revoked_entries
    }
    /// Consumes the builder and constructs a [`TrustStoreRevocation`](crate::types::TrustStoreRevocation).
    pub fn build(self) -> crate::types::TrustStoreRevocation {
        crate::types::TrustStoreRevocation {
            trust_store_arn: self.trust_store_arn,
            revocation_id: self.revocation_id,
            revocation_type: self.revocation_type,
            number_of_revoked_entries: self.number_of_revoked_entries,
        }
    }
}
