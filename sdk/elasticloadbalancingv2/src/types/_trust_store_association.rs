// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the resources a trust store is associated with.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TrustStoreAssociation {
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub resource_arn: ::std::option::Option<::std::string::String>,
}
impl TrustStoreAssociation {
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn resource_arn(&self) -> ::std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
}
impl TrustStoreAssociation {
    /// Creates a new builder-style object to manufacture [`TrustStoreAssociation`](crate::types::TrustStoreAssociation).
    pub fn builder() -> crate::types::builders::TrustStoreAssociationBuilder {
        crate::types::builders::TrustStoreAssociationBuilder::default()
    }
}

/// A builder for [`TrustStoreAssociation`](crate::types::TrustStoreAssociation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TrustStoreAssociationBuilder {
    pub(crate) resource_arn: ::std::option::Option<::std::string::String>,
}
impl TrustStoreAssociationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn resource_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn set_resource_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn get_resource_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_arn
    }
    /// Consumes the builder and constructs a [`TrustStoreAssociation`](crate::types::TrustStoreAssociation).
    pub fn build(self) -> crate::types::TrustStoreAssociation {
        crate::types::TrustStoreAssociation {
            resource_arn: self.resource_arn,
        }
    }
}
