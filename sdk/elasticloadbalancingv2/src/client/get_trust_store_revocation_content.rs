// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetTrustStoreRevocationContent`](crate::operation::get_trust_store_revocation_content::builders::GetTrustStoreRevocationContentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`trust_store_arn(impl Into<String>)`](crate::operation::get_trust_store_revocation_content::builders::GetTrustStoreRevocationContentFluentBuilder::trust_store_arn) / [`set_trust_store_arn(Option<String>)`](crate::operation::get_trust_store_revocation_content::builders::GetTrustStoreRevocationContentFluentBuilder::set_trust_store_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the trust store.</p><br>
    ///   - [`revocation_id(i64)`](crate::operation::get_trust_store_revocation_content::builders::GetTrustStoreRevocationContentFluentBuilder::revocation_id) / [`set_revocation_id(Option<i64>)`](crate::operation::get_trust_store_revocation_content::builders::GetTrustStoreRevocationContentFluentBuilder::set_revocation_id):<br>required: **true**<br><p>The revocation ID of the revocation file.</p><br>
    /// - On success, responds with [`GetTrustStoreRevocationContentOutput`](crate::operation::get_trust_store_revocation_content::GetTrustStoreRevocationContentOutput) with field(s):
    ///   - [`location(Option<String>)`](crate::operation::get_trust_store_revocation_content::GetTrustStoreRevocationContentOutput::location): <p>The revocation files Amazon S3 URI.</p>
    /// - On failure, responds with [`SdkError<GetTrustStoreRevocationContentError>`](crate::operation::get_trust_store_revocation_content::GetTrustStoreRevocationContentError)
    pub fn get_trust_store_revocation_content(
        &self,
    ) -> crate::operation::get_trust_store_revocation_content::builders::GetTrustStoreRevocationContentFluentBuilder {
        crate::operation::get_trust_store_revocation_content::builders::GetTrustStoreRevocationContentFluentBuilder::new(self.handle.clone())
    }
}
