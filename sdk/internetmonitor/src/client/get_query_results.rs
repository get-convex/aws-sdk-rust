// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetQueryResults`](crate::operation::get_query_results::builders::GetQueryResultsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_query_results::builders::GetQueryResultsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`monitor_name(impl Into<String>)`](crate::operation::get_query_results::builders::GetQueryResultsFluentBuilder::monitor_name) / [`set_monitor_name(Option<String>)`](crate::operation::get_query_results::builders::GetQueryResultsFluentBuilder::set_monitor_name):<br>required: **true**<br><p>The name of the monitor to return data for.</p><br>
    ///   - [`query_id(impl Into<String>)`](crate::operation::get_query_results::builders::GetQueryResultsFluentBuilder::query_id) / [`set_query_id(Option<String>)`](crate::operation::get_query_results::builders::GetQueryResultsFluentBuilder::set_query_id):<br>required: **true**<br><p>The ID of the query that you want to return data results for. A <code>QueryId</code> is an internally-generated identifier for a specific query.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_query_results::builders::GetQueryResultsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_query_results::builders::GetQueryResultsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next set of results. You receive this token from a previous call.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_query_results::builders::GetQueryResultsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_query_results::builders::GetQueryResultsFluentBuilder::set_max_results):<br>required: **false**<br><p>The number of query results that you want to return with this call.</p><br>
    /// - On success, responds with [`GetQueryResultsOutput`](crate::operation::get_query_results::GetQueryResultsOutput) with field(s):
    ///   - [`fields(Vec::<QueryField>)`](crate::operation::get_query_results::GetQueryResultsOutput::fields): <p>The fields that the query returns data for. Fields are name-data type pairs, such as <code>availability_score</code>-<code>float</code>.</p>
    ///   - [`data(Vec::<Vec::<String>>)`](crate::operation::get_query_results::GetQueryResultsOutput::data): <p>The data results that the query returns. Data is returned in arrays, aligned with the <code>Fields</code> for the query, which creates a repository of Amazon CloudWatch Internet Monitor information for your application. Then, you can filter the information in the repository by using <code>FilterParameters</code> that you define.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_query_results::GetQueryResultsOutput::next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On failure, responds with [`SdkError<GetQueryResultsError>`](crate::operation::get_query_results::GetQueryResultsError)
    pub fn get_query_results(&self) -> crate::operation::get_query_results::builders::GetQueryResultsFluentBuilder {
        crate::operation::get_query_results::builders::GetQueryResultsFluentBuilder::new(self.handle.clone())
    }
}
