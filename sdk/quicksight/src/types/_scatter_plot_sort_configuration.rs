// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The sort configuration of a scatter plot.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ScatterPlotSortConfiguration {
    /// <p>The limit configuration of the visual display for an axis.</p>
    pub scatter_plot_limit_configuration: ::std::option::Option<crate::types::ItemsLimitConfiguration>,
}
impl ScatterPlotSortConfiguration {
    /// <p>The limit configuration of the visual display for an axis.</p>
    pub fn scatter_plot_limit_configuration(&self) -> ::std::option::Option<&crate::types::ItemsLimitConfiguration> {
        self.scatter_plot_limit_configuration.as_ref()
    }
}
impl ScatterPlotSortConfiguration {
    /// Creates a new builder-style object to manufacture [`ScatterPlotSortConfiguration`](crate::types::ScatterPlotSortConfiguration).
    pub fn builder() -> crate::types::builders::ScatterPlotSortConfigurationBuilder {
        crate::types::builders::ScatterPlotSortConfigurationBuilder::default()
    }
}

/// A builder for [`ScatterPlotSortConfiguration`](crate::types::ScatterPlotSortConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ScatterPlotSortConfigurationBuilder {
    pub(crate) scatter_plot_limit_configuration: ::std::option::Option<crate::types::ItemsLimitConfiguration>,
}
impl ScatterPlotSortConfigurationBuilder {
    /// <p>The limit configuration of the visual display for an axis.</p>
    pub fn scatter_plot_limit_configuration(mut self, input: crate::types::ItemsLimitConfiguration) -> Self {
        self.scatter_plot_limit_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The limit configuration of the visual display for an axis.</p>
    pub fn set_scatter_plot_limit_configuration(mut self, input: ::std::option::Option<crate::types::ItemsLimitConfiguration>) -> Self {
        self.scatter_plot_limit_configuration = input;
        self
    }
    /// <p>The limit configuration of the visual display for an axis.</p>
    pub fn get_scatter_plot_limit_configuration(&self) -> &::std::option::Option<crate::types::ItemsLimitConfiguration> {
        &self.scatter_plot_limit_configuration
    }
    /// Consumes the builder and constructs a [`ScatterPlotSortConfiguration`](crate::types::ScatterPlotSortConfiguration).
    pub fn build(self) -> crate::types::ScatterPlotSortConfiguration {
        crate::types::ScatterPlotSortConfiguration {
            scatter_plot_limit_configuration: self.scatter_plot_limit_configuration,
        }
    }
}
