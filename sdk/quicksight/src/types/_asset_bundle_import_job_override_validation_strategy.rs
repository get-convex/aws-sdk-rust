// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An optional parameter that overrides the validation strategy for all analyses and dashboards before the resource is imported.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssetBundleImportJobOverrideValidationStrategy {
    /// <p>A Boolean value that indicates whether to import all analyses and dashboards under strict or lenient mode.</p>
    pub strict_mode_for_all_resources: bool,
}
impl AssetBundleImportJobOverrideValidationStrategy {
    /// <p>A Boolean value that indicates whether to import all analyses and dashboards under strict or lenient mode.</p>
    pub fn strict_mode_for_all_resources(&self) -> bool {
        self.strict_mode_for_all_resources
    }
}
impl AssetBundleImportJobOverrideValidationStrategy {
    /// Creates a new builder-style object to manufacture [`AssetBundleImportJobOverrideValidationStrategy`](crate::types::AssetBundleImportJobOverrideValidationStrategy).
    pub fn builder() -> crate::types::builders::AssetBundleImportJobOverrideValidationStrategyBuilder {
        crate::types::builders::AssetBundleImportJobOverrideValidationStrategyBuilder::default()
    }
}

/// A builder for [`AssetBundleImportJobOverrideValidationStrategy`](crate::types::AssetBundleImportJobOverrideValidationStrategy).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssetBundleImportJobOverrideValidationStrategyBuilder {
    pub(crate) strict_mode_for_all_resources: ::std::option::Option<bool>,
}
impl AssetBundleImportJobOverrideValidationStrategyBuilder {
    /// <p>A Boolean value that indicates whether to import all analyses and dashboards under strict or lenient mode.</p>
    pub fn strict_mode_for_all_resources(mut self, input: bool) -> Self {
        self.strict_mode_for_all_resources = ::std::option::Option::Some(input);
        self
    }
    /// <p>A Boolean value that indicates whether to import all analyses and dashboards under strict or lenient mode.</p>
    pub fn set_strict_mode_for_all_resources(mut self, input: ::std::option::Option<bool>) -> Self {
        self.strict_mode_for_all_resources = input;
        self
    }
    /// <p>A Boolean value that indicates whether to import all analyses and dashboards under strict or lenient mode.</p>
    pub fn get_strict_mode_for_all_resources(&self) -> &::std::option::Option<bool> {
        &self.strict_mode_for_all_resources
    }
    /// Consumes the builder and constructs a [`AssetBundleImportJobOverrideValidationStrategy`](crate::types::AssetBundleImportJobOverrideValidationStrategy).
    pub fn build(self) -> crate::types::AssetBundleImportJobOverrideValidationStrategy {
        crate::types::AssetBundleImportJobOverrideValidationStrategy {
            strict_mode_for_all_resources: self.strict_mode_for_all_resources.unwrap_or_default(),
        }
    }
}
