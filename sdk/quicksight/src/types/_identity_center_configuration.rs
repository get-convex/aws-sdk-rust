// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The parameters for an IAM Identity Center configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IdentityCenterConfiguration {
    /// <p>A Boolean option that controls whether Trusted Identity Propagation should be used.</p>
    pub enable_identity_propagation: ::std::option::Option<bool>,
}
impl IdentityCenterConfiguration {
    /// <p>A Boolean option that controls whether Trusted Identity Propagation should be used.</p>
    pub fn enable_identity_propagation(&self) -> ::std::option::Option<bool> {
        self.enable_identity_propagation
    }
}
impl IdentityCenterConfiguration {
    /// Creates a new builder-style object to manufacture [`IdentityCenterConfiguration`](crate::types::IdentityCenterConfiguration).
    pub fn builder() -> crate::types::builders::IdentityCenterConfigurationBuilder {
        crate::types::builders::IdentityCenterConfigurationBuilder::default()
    }
}

/// A builder for [`IdentityCenterConfiguration`](crate::types::IdentityCenterConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IdentityCenterConfigurationBuilder {
    pub(crate) enable_identity_propagation: ::std::option::Option<bool>,
}
impl IdentityCenterConfigurationBuilder {
    /// <p>A Boolean option that controls whether Trusted Identity Propagation should be used.</p>
    pub fn enable_identity_propagation(mut self, input: bool) -> Self {
        self.enable_identity_propagation = ::std::option::Option::Some(input);
        self
    }
    /// <p>A Boolean option that controls whether Trusted Identity Propagation should be used.</p>
    pub fn set_enable_identity_propagation(mut self, input: ::std::option::Option<bool>) -> Self {
        self.enable_identity_propagation = input;
        self
    }
    /// <p>A Boolean option that controls whether Trusted Identity Propagation should be used.</p>
    pub fn get_enable_identity_propagation(&self) -> &::std::option::Option<bool> {
        &self.enable_identity_propagation
    }
    /// Consumes the builder and constructs a [`IdentityCenterConfiguration`](crate::types::IdentityCenterConfiguration).
    pub fn build(self) -> crate::types::IdentityCenterConfiguration {
        crate::types::IdentityCenterConfiguration {
            enable_identity_propagation: self.enable_identity_propagation,
        }
    }
}
