// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about an autoshift. Amazon Web Services starts an autoshift to temporarily move traffic for a resource away from an Availability Zone in an Amazon Web Services Region when Amazon Web Services determines that there's an issue in the Availability Zone that could potentially affect customers. You can configure zonal autoshift in Route 53 ARC for managed resources in your Amazon Web Services account in a Region. Supported Amazon Web Services resources are automatically registered with Route 53 ARC.</p>
/// <p>Autoshifts are temporary. When the Availability Zone recovers, Amazon Web Services ends the autoshift, and traffic for the resource is no longer directed to the other Availability Zones in the Region.</p>
/// <p>You can stop an autoshift for a resource by disabling zonal autoshift.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutoshiftSummary {
    /// <p>The Availability Zone that traffic is shifted away from for a resource when Amazon Web Services starts an autoshift. Until the autoshift ends, traffic for the resource is instead directed to other Availability Zones in the Amazon Web Services Region. An autoshift can end for a resource, for example, when Amazon Web Services ends the autoshift for the Availability Zone or when you disable zonal autoshift for the resource.</p>
    pub away_from: ::std::string::String,
    /// <p>The time (in UTC) when the autoshift ended.</p>
    pub end_time: ::aws_smithy_types::DateTime,
    /// <p>The time (in UTC) when the autoshift started.</p>
    pub start_time: ::aws_smithy_types::DateTime,
    /// <p>The status for an autoshift.</p>
    pub status: crate::types::AutoshiftExecutionStatus,
}
impl AutoshiftSummary {
    /// <p>The Availability Zone that traffic is shifted away from for a resource when Amazon Web Services starts an autoshift. Until the autoshift ends, traffic for the resource is instead directed to other Availability Zones in the Amazon Web Services Region. An autoshift can end for a resource, for example, when Amazon Web Services ends the autoshift for the Availability Zone or when you disable zonal autoshift for the resource.</p>
    pub fn away_from(&self) -> &str {
        use std::ops::Deref;
        self.away_from.deref()
    }
    /// <p>The time (in UTC) when the autoshift ended.</p>
    pub fn end_time(&self) -> &::aws_smithy_types::DateTime {
        &self.end_time
    }
    /// <p>The time (in UTC) when the autoshift started.</p>
    pub fn start_time(&self) -> &::aws_smithy_types::DateTime {
        &self.start_time
    }
    /// <p>The status for an autoshift.</p>
    pub fn status(&self) -> &crate::types::AutoshiftExecutionStatus {
        &self.status
    }
}
impl AutoshiftSummary {
    /// Creates a new builder-style object to manufacture [`AutoshiftSummary`](crate::types::AutoshiftSummary).
    pub fn builder() -> crate::types::builders::AutoshiftSummaryBuilder {
        crate::types::builders::AutoshiftSummaryBuilder::default()
    }
}

/// A builder for [`AutoshiftSummary`](crate::types::AutoshiftSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AutoshiftSummaryBuilder {
    pub(crate) away_from: ::std::option::Option<::std::string::String>,
    pub(crate) end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::AutoshiftExecutionStatus>,
}
impl AutoshiftSummaryBuilder {
    /// <p>The Availability Zone that traffic is shifted away from for a resource when Amazon Web Services starts an autoshift. Until the autoshift ends, traffic for the resource is instead directed to other Availability Zones in the Amazon Web Services Region. An autoshift can end for a resource, for example, when Amazon Web Services ends the autoshift for the Availability Zone or when you disable zonal autoshift for the resource.</p>
    /// This field is required.
    pub fn away_from(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.away_from = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Availability Zone that traffic is shifted away from for a resource when Amazon Web Services starts an autoshift. Until the autoshift ends, traffic for the resource is instead directed to other Availability Zones in the Amazon Web Services Region. An autoshift can end for a resource, for example, when Amazon Web Services ends the autoshift for the Availability Zone or when you disable zonal autoshift for the resource.</p>
    pub fn set_away_from(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.away_from = input;
        self
    }
    /// <p>The Availability Zone that traffic is shifted away from for a resource when Amazon Web Services starts an autoshift. Until the autoshift ends, traffic for the resource is instead directed to other Availability Zones in the Amazon Web Services Region. An autoshift can end for a resource, for example, when Amazon Web Services ends the autoshift for the Availability Zone or when you disable zonal autoshift for the resource.</p>
    pub fn get_away_from(&self) -> &::std::option::Option<::std::string::String> {
        &self.away_from
    }
    /// <p>The time (in UTC) when the autoshift ended.</p>
    /// This field is required.
    pub fn end_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time (in UTC) when the autoshift ended.</p>
    pub fn set_end_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>The time (in UTC) when the autoshift ended.</p>
    pub fn get_end_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end_time
    }
    /// <p>The time (in UTC) when the autoshift started.</p>
    /// This field is required.
    pub fn start_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time (in UTC) when the autoshift started.</p>
    pub fn set_start_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start_time = input;
        self
    }
    /// <p>The time (in UTC) when the autoshift started.</p>
    pub fn get_start_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start_time
    }
    /// <p>The status for an autoshift.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::AutoshiftExecutionStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status for an autoshift.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::AutoshiftExecutionStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status for an autoshift.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::AutoshiftExecutionStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`AutoshiftSummary`](crate::types::AutoshiftSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`away_from`](crate::types::builders::AutoshiftSummaryBuilder::away_from)
    /// - [`end_time`](crate::types::builders::AutoshiftSummaryBuilder::end_time)
    /// - [`start_time`](crate::types::builders::AutoshiftSummaryBuilder::start_time)
    /// - [`status`](crate::types::builders::AutoshiftSummaryBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::AutoshiftSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AutoshiftSummary {
            away_from: self.away_from.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "away_from",
                    "away_from was not specified but it is required when building AutoshiftSummary",
                )
            })?,
            end_time: self.end_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "end_time",
                    "end_time was not specified but it is required when building AutoshiftSummary",
                )
            })?,
            start_time: self.start_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "start_time",
                    "start_time was not specified but it is required when building AutoshiftSummary",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building AutoshiftSummary",
                )
            })?,
        })
    }
}
