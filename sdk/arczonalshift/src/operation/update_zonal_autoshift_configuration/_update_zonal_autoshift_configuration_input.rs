// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateZonalAutoshiftConfigurationInput {
    /// <p>The identifier for the resource that you want to update the zonal autoshift configuration for. The identifier is the Amazon Resource Name (ARN) for the resource.</p>
    pub resource_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The zonal autoshift status for the resource that you want to update the zonal autoshift configuration for.</p>
    pub zonal_autoshift_status: ::std::option::Option<crate::types::ZonalAutoshiftStatus>,
}
impl UpdateZonalAutoshiftConfigurationInput {
    /// <p>The identifier for the resource that you want to update the zonal autoshift configuration for. The identifier is the Amazon Resource Name (ARN) for the resource.</p>
    pub fn resource_identifier(&self) -> ::std::option::Option<&str> {
        self.resource_identifier.as_deref()
    }
    /// <p>The zonal autoshift status for the resource that you want to update the zonal autoshift configuration for.</p>
    pub fn zonal_autoshift_status(&self) -> ::std::option::Option<&crate::types::ZonalAutoshiftStatus> {
        self.zonal_autoshift_status.as_ref()
    }
}
impl UpdateZonalAutoshiftConfigurationInput {
    /// Creates a new builder-style object to manufacture [`UpdateZonalAutoshiftConfigurationInput`](crate::operation::update_zonal_autoshift_configuration::UpdateZonalAutoshiftConfigurationInput).
    pub fn builder() -> crate::operation::update_zonal_autoshift_configuration::builders::UpdateZonalAutoshiftConfigurationInputBuilder {
        crate::operation::update_zonal_autoshift_configuration::builders::UpdateZonalAutoshiftConfigurationInputBuilder::default()
    }
}

/// A builder for [`UpdateZonalAutoshiftConfigurationInput`](crate::operation::update_zonal_autoshift_configuration::UpdateZonalAutoshiftConfigurationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateZonalAutoshiftConfigurationInputBuilder {
    pub(crate) resource_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) zonal_autoshift_status: ::std::option::Option<crate::types::ZonalAutoshiftStatus>,
}
impl UpdateZonalAutoshiftConfigurationInputBuilder {
    /// <p>The identifier for the resource that you want to update the zonal autoshift configuration for. The identifier is the Amazon Resource Name (ARN) for the resource.</p>
    /// This field is required.
    pub fn resource_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for the resource that you want to update the zonal autoshift configuration for. The identifier is the Amazon Resource Name (ARN) for the resource.</p>
    pub fn set_resource_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_identifier = input;
        self
    }
    /// <p>The identifier for the resource that you want to update the zonal autoshift configuration for. The identifier is the Amazon Resource Name (ARN) for the resource.</p>
    pub fn get_resource_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_identifier
    }
    /// <p>The zonal autoshift status for the resource that you want to update the zonal autoshift configuration for.</p>
    /// This field is required.
    pub fn zonal_autoshift_status(mut self, input: crate::types::ZonalAutoshiftStatus) -> Self {
        self.zonal_autoshift_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The zonal autoshift status for the resource that you want to update the zonal autoshift configuration for.</p>
    pub fn set_zonal_autoshift_status(mut self, input: ::std::option::Option<crate::types::ZonalAutoshiftStatus>) -> Self {
        self.zonal_autoshift_status = input;
        self
    }
    /// <p>The zonal autoshift status for the resource that you want to update the zonal autoshift configuration for.</p>
    pub fn get_zonal_autoshift_status(&self) -> &::std::option::Option<crate::types::ZonalAutoshiftStatus> {
        &self.zonal_autoshift_status
    }
    /// Consumes the builder and constructs a [`UpdateZonalAutoshiftConfigurationInput`](crate::operation::update_zonal_autoshift_configuration::UpdateZonalAutoshiftConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_zonal_autoshift_configuration::UpdateZonalAutoshiftConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_zonal_autoshift_configuration::UpdateZonalAutoshiftConfigurationInput {
                resource_identifier: self.resource_identifier,
                zonal_autoshift_status: self.zonal_autoshift_status,
            },
        )
    }
}
