// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdatePracticeRunConfiguration`](crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_identifier(impl Into<String>)`](crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder::resource_identifier) / [`set_resource_identifier(Option<String>)`](crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder::set_resource_identifier):<br>required: **true**<br><p>The identifier for the resource that you want to update the practice run configuration for. The identifier is the Amazon Resource Name (ARN) for the resource.</p><br>
    ///   - [`blocked_windows(impl Into<String>)`](crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder::blocked_windows) / [`set_blocked_windows(Option<Vec::<String>>)`](crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder::set_blocked_windows):<br>required: **false**<br><p>Add, change, or remove windows of days and times for when you can, optionally, block Route 53 ARC from starting a practice run for a resource.</p> <p>The format for blocked windows is: DAY:HH:SS-DAY:HH:SS. Keep in mind, when you specify dates, that dates and times for practice runs are in UTC. Also, be aware of potential time adjustments that might be required for daylight saving time differences. Separate multiple blocked windows with spaces.</p> <p>For example, say you run business report summaries three days a week. For this scenario, you might set the following recurring days and times as blocked windows, for example: <code>MON-20:30-21:30 WED-20:30-21:30 FRI-20:30-21:30</code>.</p><br>
    ///   - [`blocked_dates(impl Into<String>)`](crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder::blocked_dates) / [`set_blocked_dates(Option<Vec::<String>>)`](crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder::set_blocked_dates):<br>required: **false**<br><p>Add, change, or remove blocked dates for a practice run in zonal autoshift.</p> <p>Optionally, you can block practice runs for specific calendar dates. The format for blocked dates is: YYYY-MM-DD. Keep in mind, when you specify dates, that dates and times for practice runs are in UTC. Separate multiple blocked dates with spaces.</p> <p>For example, if you have an application update scheduled to launch on May 1, 2024, and you don't want practice runs to shift traffic away at that time, you could set a blocked date for <code>2024-05-01</code>.</p><br>
    ///   - [`blocking_alarms(ControlCondition)`](crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder::blocking_alarms) / [`set_blocking_alarms(Option<Vec::<ControlCondition>>)`](crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder::set_blocking_alarms):<br>required: **false**<br><p>Add, change, or remove the Amazon CloudWatch alarm that you optionally specify as the blocking alarm for practice runs.</p><br>
    ///   - [`outcome_alarms(ControlCondition)`](crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder::outcome_alarms) / [`set_outcome_alarms(Option<Vec::<ControlCondition>>)`](crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder::set_outcome_alarms):<br>required: **false**<br><p>Specify a new the Amazon CloudWatch alarm as the outcome alarm for practice runs.</p><br>
    /// - On success, responds with [`UpdatePracticeRunConfigurationOutput`](crate::operation::update_practice_run_configuration::UpdatePracticeRunConfigurationOutput) with field(s):
    ///   - [`arn(String)`](crate::operation::update_practice_run_configuration::UpdatePracticeRunConfigurationOutput::arn): <p>The Amazon Resource Name (ARN) of the resource that you updated the practice run for.</p>
    ///   - [`name(String)`](crate::operation::update_practice_run_configuration::UpdatePracticeRunConfigurationOutput::name): <p>The name of the resource that you updated the practice run for.</p>
    ///   - [`zonal_autoshift_status(ZonalAutoshiftStatus)`](crate::operation::update_practice_run_configuration::UpdatePracticeRunConfigurationOutput::zonal_autoshift_status): <p>The zonal autoshift status for the resource that you updated the practice run for.</p>
    ///   - [`practice_run_configuration(Option<PracticeRunConfiguration>)`](crate::operation::update_practice_run_configuration::UpdatePracticeRunConfigurationOutput::practice_run_configuration): <p>The practice run configuration that was updated.</p>
    /// - On failure, responds with [`SdkError<UpdatePracticeRunConfigurationError>`](crate::operation::update_practice_run_configuration::UpdatePracticeRunConfigurationError)
    pub fn update_practice_run_configuration(
        &self,
    ) -> crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder {
        crate::operation::update_practice_run_configuration::builders::UpdatePracticeRunConfigurationFluentBuilder::new(self.handle.clone())
    }
}
