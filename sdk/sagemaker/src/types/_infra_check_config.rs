// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration information for the infrastructure health check of a training job. A SageMaker-provided health check tests the health of instance hardware and cluster network connectivity.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InfraCheckConfig {
    /// <p>Enables an infrastructure health check.</p>
    pub enable_infra_check: ::std::option::Option<bool>,
}
impl InfraCheckConfig {
    /// <p>Enables an infrastructure health check.</p>
    pub fn enable_infra_check(&self) -> ::std::option::Option<bool> {
        self.enable_infra_check
    }
}
impl InfraCheckConfig {
    /// Creates a new builder-style object to manufacture [`InfraCheckConfig`](crate::types::InfraCheckConfig).
    pub fn builder() -> crate::types::builders::InfraCheckConfigBuilder {
        crate::types::builders::InfraCheckConfigBuilder::default()
    }
}

/// A builder for [`InfraCheckConfig`](crate::types::InfraCheckConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InfraCheckConfigBuilder {
    pub(crate) enable_infra_check: ::std::option::Option<bool>,
}
impl InfraCheckConfigBuilder {
    /// <p>Enables an infrastructure health check.</p>
    pub fn enable_infra_check(mut self, input: bool) -> Self {
        self.enable_infra_check = ::std::option::Option::Some(input);
        self
    }
    /// <p>Enables an infrastructure health check.</p>
    pub fn set_enable_infra_check(mut self, input: ::std::option::Option<bool>) -> Self {
        self.enable_infra_check = input;
        self
    }
    /// <p>Enables an infrastructure health check.</p>
    pub fn get_enable_infra_check(&self) -> &::std::option::Option<bool> {
        &self.enable_infra_check
    }
    /// Consumes the builder and constructs a [`InfraCheckConfig`](crate::types::InfraCheckConfig).
    pub fn build(self) -> crate::types::InfraCheckConfig {
        crate::types::InfraCheckConfig {
            enable_infra_check: self.enable_infra_check,
        }
    }
}
