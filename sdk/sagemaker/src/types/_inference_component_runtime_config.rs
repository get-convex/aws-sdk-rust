// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Runtime settings for a model that is deployed with an inference component.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InferenceComponentRuntimeConfig {
    /// <p>The number of runtime copies of the model container to deploy with the inference component. Each copy can serve inference requests.</p>
    pub copy_count: ::std::option::Option<i32>,
}
impl InferenceComponentRuntimeConfig {
    /// <p>The number of runtime copies of the model container to deploy with the inference component. Each copy can serve inference requests.</p>
    pub fn copy_count(&self) -> ::std::option::Option<i32> {
        self.copy_count
    }
}
impl InferenceComponentRuntimeConfig {
    /// Creates a new builder-style object to manufacture [`InferenceComponentRuntimeConfig`](crate::types::InferenceComponentRuntimeConfig).
    pub fn builder() -> crate::types::builders::InferenceComponentRuntimeConfigBuilder {
        crate::types::builders::InferenceComponentRuntimeConfigBuilder::default()
    }
}

/// A builder for [`InferenceComponentRuntimeConfig`](crate::types::InferenceComponentRuntimeConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InferenceComponentRuntimeConfigBuilder {
    pub(crate) copy_count: ::std::option::Option<i32>,
}
impl InferenceComponentRuntimeConfigBuilder {
    /// <p>The number of runtime copies of the model container to deploy with the inference component. Each copy can serve inference requests.</p>
    /// This field is required.
    pub fn copy_count(mut self, input: i32) -> Self {
        self.copy_count = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of runtime copies of the model container to deploy with the inference component. Each copy can serve inference requests.</p>
    pub fn set_copy_count(mut self, input: ::std::option::Option<i32>) -> Self {
        self.copy_count = input;
        self
    }
    /// <p>The number of runtime copies of the model container to deploy with the inference component. Each copy can serve inference requests.</p>
    pub fn get_copy_count(&self) -> &::std::option::Option<i32> {
        &self.copy_count
    }
    /// Consumes the builder and constructs a [`InferenceComponentRuntimeConfig`](crate::types::InferenceComponentRuntimeConfig).
    pub fn build(self) -> crate::types::InferenceComponentRuntimeConfig {
        crate::types::InferenceComponentRuntimeConfig { copy_count: self.copy_count }
    }
}
