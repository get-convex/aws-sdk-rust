// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The Code Editor application settings.</p>
/// <p>For more information about Code Editor, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/code-editor.html">Get started with Code Editor in Amazon SageMaker</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CodeEditorAppSettings {
    /// <p>Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.</p>
    pub default_resource_spec: ::std::option::Option<crate::types::ResourceSpec>,
    /// <p>The Amazon Resource Name (ARN) of the Code Editor application lifecycle configuration.</p>
    pub lifecycle_config_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl CodeEditorAppSettings {
    /// <p>Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.</p>
    pub fn default_resource_spec(&self) -> ::std::option::Option<&crate::types::ResourceSpec> {
        self.default_resource_spec.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the Code Editor application lifecycle configuration.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.lifecycle_config_arns.is_none()`.
    pub fn lifecycle_config_arns(&self) -> &[::std::string::String] {
        self.lifecycle_config_arns.as_deref().unwrap_or_default()
    }
}
impl CodeEditorAppSettings {
    /// Creates a new builder-style object to manufacture [`CodeEditorAppSettings`](crate::types::CodeEditorAppSettings).
    pub fn builder() -> crate::types::builders::CodeEditorAppSettingsBuilder {
        crate::types::builders::CodeEditorAppSettingsBuilder::default()
    }
}

/// A builder for [`CodeEditorAppSettings`](crate::types::CodeEditorAppSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CodeEditorAppSettingsBuilder {
    pub(crate) default_resource_spec: ::std::option::Option<crate::types::ResourceSpec>,
    pub(crate) lifecycle_config_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl CodeEditorAppSettingsBuilder {
    /// <p>Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.</p>
    pub fn default_resource_spec(mut self, input: crate::types::ResourceSpec) -> Self {
        self.default_resource_spec = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.</p>
    pub fn set_default_resource_spec(mut self, input: ::std::option::Option<crate::types::ResourceSpec>) -> Self {
        self.default_resource_spec = input;
        self
    }
    /// <p>Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.</p>
    pub fn get_default_resource_spec(&self) -> &::std::option::Option<crate::types::ResourceSpec> {
        &self.default_resource_spec
    }
    /// Appends an item to `lifecycle_config_arns`.
    ///
    /// To override the contents of this collection use [`set_lifecycle_config_arns`](Self::set_lifecycle_config_arns).
    ///
    /// <p>The Amazon Resource Name (ARN) of the Code Editor application lifecycle configuration.</p>
    pub fn lifecycle_config_arns(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.lifecycle_config_arns.unwrap_or_default();
        v.push(input.into());
        self.lifecycle_config_arns = ::std::option::Option::Some(v);
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Code Editor application lifecycle configuration.</p>
    pub fn set_lifecycle_config_arns(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.lifecycle_config_arns = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Code Editor application lifecycle configuration.</p>
    pub fn get_lifecycle_config_arns(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.lifecycle_config_arns
    }
    /// Consumes the builder and constructs a [`CodeEditorAppSettings`](crate::types::CodeEditorAppSettings).
    pub fn build(self) -> crate::types::CodeEditorAppSettings {
        crate::types::CodeEditorAppSettings {
            default_resource_spec: self.default_resource_spec,
            lifecycle_config_arns: self.lifecycle_config_arns,
        }
    }
}
