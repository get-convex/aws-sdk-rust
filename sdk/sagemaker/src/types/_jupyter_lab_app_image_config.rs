// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for the file system and kernels in a SageMaker image running as a JupyterLab app.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct JupyterLabAppImageConfig {
    /// <p>The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.</p>
    pub file_system_config: ::std::option::Option<crate::types::FileSystemConfig>,
    /// <p>The configuration used to run the application image container.</p>
    pub container_config: ::std::option::Option<crate::types::ContainerConfig>,
}
impl JupyterLabAppImageConfig {
    /// <p>The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.</p>
    pub fn file_system_config(&self) -> ::std::option::Option<&crate::types::FileSystemConfig> {
        self.file_system_config.as_ref()
    }
    /// <p>The configuration used to run the application image container.</p>
    pub fn container_config(&self) -> ::std::option::Option<&crate::types::ContainerConfig> {
        self.container_config.as_ref()
    }
}
impl JupyterLabAppImageConfig {
    /// Creates a new builder-style object to manufacture [`JupyterLabAppImageConfig`](crate::types::JupyterLabAppImageConfig).
    pub fn builder() -> crate::types::builders::JupyterLabAppImageConfigBuilder {
        crate::types::builders::JupyterLabAppImageConfigBuilder::default()
    }
}

/// A builder for [`JupyterLabAppImageConfig`](crate::types::JupyterLabAppImageConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct JupyterLabAppImageConfigBuilder {
    pub(crate) file_system_config: ::std::option::Option<crate::types::FileSystemConfig>,
    pub(crate) container_config: ::std::option::Option<crate::types::ContainerConfig>,
}
impl JupyterLabAppImageConfigBuilder {
    /// <p>The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.</p>
    pub fn file_system_config(mut self, input: crate::types::FileSystemConfig) -> Self {
        self.file_system_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.</p>
    pub fn set_file_system_config(mut self, input: ::std::option::Option<crate::types::FileSystemConfig>) -> Self {
        self.file_system_config = input;
        self
    }
    /// <p>The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.</p>
    pub fn get_file_system_config(&self) -> &::std::option::Option<crate::types::FileSystemConfig> {
        &self.file_system_config
    }
    /// <p>The configuration used to run the application image container.</p>
    pub fn container_config(mut self, input: crate::types::ContainerConfig) -> Self {
        self.container_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration used to run the application image container.</p>
    pub fn set_container_config(mut self, input: ::std::option::Option<crate::types::ContainerConfig>) -> Self {
        self.container_config = input;
        self
    }
    /// <p>The configuration used to run the application image container.</p>
    pub fn get_container_config(&self) -> &::std::option::Option<crate::types::ContainerConfig> {
        &self.container_config
    }
    /// Consumes the builder and constructs a [`JupyterLabAppImageConfig`](crate::types::JupyterLabAppImageConfig).
    pub fn build(self) -> crate::types::JupyterLabAppImageConfig {
        crate::types::JupyterLabAppImageConfig {
            file_system_config: self.file_system_config,
            container_config: self.container_config,
        }
    }
}
