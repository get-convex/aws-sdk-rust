// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeregisterAdminInput {
    /// <p>The ID of the private re:Post to remove the admin from.</p>
    pub space_id: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the admin to remove.</p>
    pub admin_id: ::std::option::Option<::std::string::String>,
}
impl DeregisterAdminInput {
    /// <p>The ID of the private re:Post to remove the admin from.</p>
    pub fn space_id(&self) -> ::std::option::Option<&str> {
        self.space_id.as_deref()
    }
    /// <p>The ID of the admin to remove.</p>
    pub fn admin_id(&self) -> ::std::option::Option<&str> {
        self.admin_id.as_deref()
    }
}
impl DeregisterAdminInput {
    /// Creates a new builder-style object to manufacture [`DeregisterAdminInput`](crate::operation::deregister_admin::DeregisterAdminInput).
    pub fn builder() -> crate::operation::deregister_admin::builders::DeregisterAdminInputBuilder {
        crate::operation::deregister_admin::builders::DeregisterAdminInputBuilder::default()
    }
}

/// A builder for [`DeregisterAdminInput`](crate::operation::deregister_admin::DeregisterAdminInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeregisterAdminInputBuilder {
    pub(crate) space_id: ::std::option::Option<::std::string::String>,
    pub(crate) admin_id: ::std::option::Option<::std::string::String>,
}
impl DeregisterAdminInputBuilder {
    /// <p>The ID of the private re:Post to remove the admin from.</p>
    /// This field is required.
    pub fn space_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.space_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the private re:Post to remove the admin from.</p>
    pub fn set_space_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.space_id = input;
        self
    }
    /// <p>The ID of the private re:Post to remove the admin from.</p>
    pub fn get_space_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.space_id
    }
    /// <p>The ID of the admin to remove.</p>
    /// This field is required.
    pub fn admin_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.admin_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the admin to remove.</p>
    pub fn set_admin_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.admin_id = input;
        self
    }
    /// <p>The ID of the admin to remove.</p>
    pub fn get_admin_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.admin_id
    }
    /// Consumes the builder and constructs a [`DeregisterAdminInput`](crate::operation::deregister_admin::DeregisterAdminInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::deregister_admin::DeregisterAdminInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::deregister_admin::DeregisterAdminInput {
            space_id: self.space_id,
            admin_id: self.admin_id,
        })
    }
}
