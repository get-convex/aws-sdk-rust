// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeregisterAdmin`](crate::operation::deregister_admin::builders::DeregisterAdminFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`space_id(impl Into<String>)`](crate::operation::deregister_admin::builders::DeregisterAdminFluentBuilder::space_id) / [`set_space_id(Option<String>)`](crate::operation::deregister_admin::builders::DeregisterAdminFluentBuilder::set_space_id):<br>required: **true**<br><p>The ID of the private re:Post to remove the admin from.</p><br>
    ///   - [`admin_id(impl Into<String>)`](crate::operation::deregister_admin::builders::DeregisterAdminFluentBuilder::admin_id) / [`set_admin_id(Option<String>)`](crate::operation::deregister_admin::builders::DeregisterAdminFluentBuilder::set_admin_id):<br>required: **true**<br><p>The ID of the admin to remove.</p><br>
    /// - On success, responds with [`DeregisterAdminOutput`](crate::operation::deregister_admin::DeregisterAdminOutput)
    /// - On failure, responds with [`SdkError<DeregisterAdminError>`](crate::operation::deregister_admin::DeregisterAdminError)
    pub fn deregister_admin(&self) -> crate::operation::deregister_admin::builders::DeregisterAdminFluentBuilder {
        crate::operation::deregister_admin::builders::DeregisterAdminFluentBuilder::new(self.handle.clone())
    }
}
