// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetSpace`](crate::operation::get_space::builders::GetSpaceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`space_id(impl Into<String>)`](crate::operation::get_space::builders::GetSpaceFluentBuilder::space_id) / [`set_space_id(Option<String>)`](crate::operation::get_space::builders::GetSpaceFluentBuilder::set_space_id):<br>required: **true**<br><p>The ID of the private re:Post.</p><br>
    /// - On success, responds with [`GetSpaceOutput`](crate::operation::get_space::GetSpaceOutput) with field(s):
    ///   - [`space_id(String)`](crate::operation::get_space::GetSpaceOutput::space_id): <p>The unique ID of the private re:Post.</p>
    ///   - [`arn(String)`](crate::operation::get_space::GetSpaceOutput::arn): <p>The ARN of the private re:Post.</p>
    ///   - [`name(String)`](crate::operation::get_space::GetSpaceOutput::name): <p>The name of the private re:Post.</p>
    ///   - [`status(String)`](crate::operation::get_space::GetSpaceOutput::status): <p>The creation or deletion status of the private re:Post.</p>
    ///   - [`configuration_status(ConfigurationStatus)`](crate::operation::get_space::GetSpaceOutput::configuration_status): <p>The configuration status of the private re:Post.</p>
    ///   - [`client_id(String)`](crate::operation::get_space::GetSpaceOutput::client_id): <p>The Identity Center identifier for the Application Instance.</p>
    ///   - [`description(Option<String>)`](crate::operation::get_space::GetSpaceOutput::description): <p>The description of the private re:Post.</p>
    ///   - [`vanity_domain_status(VanityDomainStatus)`](crate::operation::get_space::GetSpaceOutput::vanity_domain_status): <p>The approval status of the custom subdomain.</p>
    ///   - [`vanity_domain(String)`](crate::operation::get_space::GetSpaceOutput::vanity_domain): <p>The custom subdomain that you use to access your private re:Post. All custom subdomains must be approved by AWS before use.</p>
    ///   - [`random_domain(String)`](crate::operation::get_space::GetSpaceOutput::random_domain): <p>The AWS generated subdomain of the private re:Post</p>
    ///   - [`customer_role_arn(Option<String>)`](crate::operation::get_space::GetSpaceOutput::customer_role_arn): <p>The IAM role that grants permissions to the private re:Post to convert unanswered questions into AWS support tickets.</p>
    ///   - [`create_date_time(DateTime)`](crate::operation::get_space::GetSpaceOutput::create_date_time): <p>The date when the private re:Post was created.</p>
    ///   - [`delete_date_time(Option<DateTime>)`](crate::operation::get_space::GetSpaceOutput::delete_date_time): <p>The date when the private re:Post was deleted.</p>
    ///   - [`tier(TierLevel)`](crate::operation::get_space::GetSpaceOutput::tier): <p>The pricing tier of the private re:Post.</p>
    ///   - [`storage_limit(i64)`](crate::operation::get_space::GetSpaceOutput::storage_limit): <p>The storage limit of the private re:Post.</p>
    ///   - [`user_admins(Option<Vec::<String>>)`](crate::operation::get_space::GetSpaceOutput::user_admins): <p>The list of users that are administrators of the private re:Post.</p>
    ///   - [`group_admins(Option<Vec::<String>>)`](crate::operation::get_space::GetSpaceOutput::group_admins): <p>The list of groups that are administrators of the private re:Post.</p>
    ///   - [`user_kms_key(Option<String>)`](crate::operation::get_space::GetSpaceOutput::user_kms_key): <p>The custom AWS KMS key ARN thatâ€™s used for the AWS KMS encryption.</p>
    ///   - [`user_count(Option<i32>)`](crate::operation::get_space::GetSpaceOutput::user_count): <p>The number of users that have onboarded to the private re:Post.</p>
    ///   - [`content_size(Option<i64>)`](crate::operation::get_space::GetSpaceOutput::content_size): <p>The content size of the private re:Post.</p>
    /// - On failure, responds with [`SdkError<GetSpaceError>`](crate::operation::get_space::GetSpaceError)
    pub fn get_space(&self) -> crate::operation::get_space::builders::GetSpaceFluentBuilder {
        crate::operation::get_space::builders::GetSpaceFluentBuilder::new(self.handle.clone())
    }
}
