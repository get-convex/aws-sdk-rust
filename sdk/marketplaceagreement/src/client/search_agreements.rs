// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SearchAgreements`](crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog(impl Into<String>)`](crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder::catalog) / [`set_catalog(Option<String>)`](crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder::set_catalog):<br>required: **false**<br><p>The catalog in which the agreement was created.</p><br>
    ///   - [`filters(Filter)`](crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder::set_filters):<br>required: **false**<br><p>The filter name and value pair used to return a specific list of results.</p> <p>The following filters are supported:</p> <ul>  <li>   <p><code>ResourceIdentifier</code> – The unique identifier of the resource.</p></li>  <li>   <p><code>ResourceType</code> – Type of the resource, which is the product (<code>AmiProduct</code>, <code>ContainerProduct</code>, or <code>SaaSProduct</code>).</p></li>  <li>   <p><code>PartyType</code> – The party type (either <code>Acceptor</code> or <code>Proposer</code>) of the caller. For agreements where the caller is the proposer, use the <code>Proposer</code> filter. For agreements where the caller is the acceptor, use the <code>Acceptor</code> filter.</p></li>  <li>   <p><code>AcceptorAccountId</code> – The AWS account ID of the party accepting the agreement terms.</p></li>  <li>   <p><code>OfferId</code> – The unique identifier of the offer in which the terms are registered in the agreement token.</p></li>  <li>   <p><code>Status</code> – The current status of the agreement. Values include <code>ACTIVE</code>, <code>ARCHIVED</code>, <code>CANCELLED</code>, <code>EXPIRED</code>, <code>RENEWED</code>, <code>REPLACED</code>, and <code>TERMINATED</code>.</p></li>  <li>   <p><code>BeforeEndTime</code> – A date used to filter agreements with a date before the <code>endTime</code> of an agreement.</p></li>  <li>   <p><code>AfterEndTime</code> – A date used to filter agreements with a date after the <code>endTime</code> of an agreement.</p></li>  <li>   <p><code>AgreementType</code> – The type of agreement. Values include <code>PurchaseAgreement</code> or <code>VendorInsightsAgreement</code>.</p></li> </ul><br>
    ///   - [`sort(Sort)`](crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder::sort) / [`set_sort(Option<Sort>)`](crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder::set_sort):<br>required: **false**<br><p>An object that contains the <code>SortBy</code> and <code>SortOrder</code> attributes.</p><br>
    ///   - [`max_results(i32)`](crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of agreements to return in the response.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder::set_next_token):<br>required: **false**<br><p>A token to specify where to start pagination.</p><br>
    /// - On success, responds with [`SearchAgreementsOutput`](crate::operation::search_agreements::SearchAgreementsOutput) with field(s):
    ///   - [`agreement_view_summaries(Option<Vec::<AgreementViewSummary>>)`](crate::operation::search_agreements::SearchAgreementsOutput::agreement_view_summaries): <p>A summary of the agreement, including top-level attributes (for example, the agreement ID, version, proposer, and acceptor).</p>
    ///   - [`next_token(Option<String>)`](crate::operation::search_agreements::SearchAgreementsOutput::next_token): <p>The token used for pagination. The field is <code>null</code> if there are no more results.</p>
    /// - On failure, responds with [`SdkError<SearchAgreementsError>`](crate::operation::search_agreements::SearchAgreementsError)
    pub fn search_agreements(&self) -> crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder {
        crate::operation::search_agreements::builders::SearchAgreementsFluentBuilder::new(self.handle.clone())
    }
}
