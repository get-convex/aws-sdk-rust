// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeAgreement`](crate::operation::describe_agreement::builders::DescribeAgreementFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`agreement_id(impl Into<String>)`](crate::operation::describe_agreement::builders::DescribeAgreementFluentBuilder::agreement_id) / [`set_agreement_id(Option<String>)`](crate::operation::describe_agreement::builders::DescribeAgreementFluentBuilder::set_agreement_id):<br>required: **true**<br><p>The unique identifier of the agreement.</p><br>
    /// - On success, responds with [`DescribeAgreementOutput`](crate::operation::describe_agreement::DescribeAgreementOutput) with field(s):
    ///   - [`agreement_id(Option<String>)`](crate::operation::describe_agreement::DescribeAgreementOutput::agreement_id): <p>The unique identifier of the agreement.</p>
    ///   - [`acceptor(Option<Acceptor>)`](crate::operation::describe_agreement::DescribeAgreementOutput::acceptor): <p>The details of the party accepting the agreement terms. This is commonly the buyer for <code>PurchaseAgreement</code>.</p>
    ///   - [`proposer(Option<Proposer>)`](crate::operation::describe_agreement::DescribeAgreementOutput::proposer): <p>The details of the party proposing the agreement terms. This is commonly the seller for <code>PurchaseAgreement</code>.</p>
    ///   - [`start_time(Option<DateTime>)`](crate::operation::describe_agreement::DescribeAgreementOutput::start_time): <p>The date and time when the agreement starts.</p>
    ///   - [`end_time(Option<DateTime>)`](crate::operation::describe_agreement::DescribeAgreementOutput::end_time): <p>The date and time when the agreement ends. The field is <code>null</code> for pay-as-you-go agreements, which don’t have end dates.</p>
    ///   - [`acceptance_time(Option<DateTime>)`](crate::operation::describe_agreement::DescribeAgreementOutput::acceptance_time): <p>The date and time the offer was accepted or the agreement was created.</p><note>  <p><code>AcceptanceTime</code> and <code>StartTime</code> can differ for future dated agreements (FDAs).</p> </note>
    ///   - [`agreement_type(Option<String>)`](crate::operation::describe_agreement::DescribeAgreementOutput::agreement_type): <p>The type of agreement. Values are <code>PurchaseAgreement</code> or <code>VendorInsightsAgreement</code>.</p>
    ///   - [`estimated_charges(Option<EstimatedCharges>)`](crate::operation::describe_agreement::DescribeAgreementOutput::estimated_charges): <p>The estimated cost of the agreement.</p>
    ///   - [`proposal_summary(Option<ProposalSummary>)`](crate::operation::describe_agreement::DescribeAgreementOutput::proposal_summary): <p>A summary of the proposal received from the proposer.</p>
    ///   - [`status(Option<AgreementStatus>)`](crate::operation::describe_agreement::DescribeAgreementOutput::status): <p>The current status of the agreement.</p> <p>Statuses include:</p> <ul>  <li>   <p><code>ACTIVE</code> – The terms of the agreement are active.</p></li>  <li>   <p><code>ARCHIVED</code> – The agreement ended without a specified reason.</p></li>  <li>   <p><code>CANCELLED</code> – The acceptor ended the agreement before the defined end date.</p></li>  <li>   <p><code>EXPIRED</code> – The agreement ended on the defined end date.</p></li>  <li>   <p><code>RENEWED</code> – The agreement was renewed into a new agreement (for example, an auto-renewal).</p></li>  <li>   <p><code>REPLACED</code> – The agreement was replaced using an agreement replacement offer.</p></li>  <li>   <p><code>ROLLED_BACK</code> (Only applicable to inactive agreement revisions) – The agreement revision has been rolled back because of an error. An earlier revision is now active.</p></li>  <li>   <p><code>SUPERCEDED</code> (Only applicable to inactive agreement revisions) – The agreement revision is no longer active and another agreement revision is now active.</p></li>  <li>   <p><code>TERMINATED</code> – The agreement ended before the defined end date because of an AWS termination (for example, a payment failure).</p></li> </ul>
    /// - On failure, responds with [`SdkError<DescribeAgreementError>`](crate::operation::describe_agreement::DescribeAgreementError)
    pub fn describe_agreement(&self) -> crate::operation::describe_agreement::builders::DescribeAgreementFluentBuilder {
        crate::operation::describe_agreement::builders::DescribeAgreementFluentBuilder::new(self.handle.clone())
    }
}
