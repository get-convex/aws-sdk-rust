// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines the customer support available for the acceptors when they purchase the software.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SupportTerm {
    /// <p>Category of the term being updated.</p>
    pub r#type: ::std::option::Option<::std::string::String>,
    /// <p>Free-text field about the refund policy description that will be shown to customers as is on the website and console.</p>
    pub refund_policy: ::std::option::Option<::std::string::String>,
}
impl SupportTerm {
    /// <p>Category of the term being updated.</p>
    pub fn r#type(&self) -> ::std::option::Option<&str> {
        self.r#type.as_deref()
    }
    /// <p>Free-text field about the refund policy description that will be shown to customers as is on the website and console.</p>
    pub fn refund_policy(&self) -> ::std::option::Option<&str> {
        self.refund_policy.as_deref()
    }
}
impl SupportTerm {
    /// Creates a new builder-style object to manufacture [`SupportTerm`](crate::types::SupportTerm).
    pub fn builder() -> crate::types::builders::SupportTermBuilder {
        crate::types::builders::SupportTermBuilder::default()
    }
}

/// A builder for [`SupportTerm`](crate::types::SupportTerm).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SupportTermBuilder {
    pub(crate) r#type: ::std::option::Option<::std::string::String>,
    pub(crate) refund_policy: ::std::option::Option<::std::string::String>,
}
impl SupportTermBuilder {
    /// <p>Category of the term being updated.</p>
    pub fn r#type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.r#type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Category of the term being updated.</p>
    pub fn set_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>Category of the term being updated.</p>
    pub fn get_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.r#type
    }
    /// <p>Free-text field about the refund policy description that will be shown to customers as is on the website and console.</p>
    pub fn refund_policy(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.refund_policy = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Free-text field about the refund policy description that will be shown to customers as is on the website and console.</p>
    pub fn set_refund_policy(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.refund_policy = input;
        self
    }
    /// <p>Free-text field about the refund policy description that will be shown to customers as is on the website and console.</p>
    pub fn get_refund_policy(&self) -> &::std::option::Option<::std::string::String> {
        &self.refund_policy
    }
    /// Consumes the builder and constructs a [`SupportTerm`](crate::types::SupportTerm).
    pub fn build(self) -> crate::types::SupportTerm {
        crate::types::SupportTerm {
            r#type: self.r#type,
            refund_policy: self.refund_policy,
        }
    }
}
