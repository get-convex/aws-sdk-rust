// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines the per unit rates for each individual product dimension.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RateCardItem {
    /// <p>Dimension for which the given entitlement applies. Dimensions represent categories of capacity in a product and are specified when the product is listed in AWS Marketplace.</p>
    pub dimension_key: ::std::option::Option<::std::string::String>,
    /// <p>Per unit price for the product dimension that’s used for calculating the amount to be charged.</p>
    pub price: ::std::option::Option<::std::string::String>,
}
impl RateCardItem {
    /// <p>Dimension for which the given entitlement applies. Dimensions represent categories of capacity in a product and are specified when the product is listed in AWS Marketplace.</p>
    pub fn dimension_key(&self) -> ::std::option::Option<&str> {
        self.dimension_key.as_deref()
    }
    /// <p>Per unit price for the product dimension that’s used for calculating the amount to be charged.</p>
    pub fn price(&self) -> ::std::option::Option<&str> {
        self.price.as_deref()
    }
}
impl RateCardItem {
    /// Creates a new builder-style object to manufacture [`RateCardItem`](crate::types::RateCardItem).
    pub fn builder() -> crate::types::builders::RateCardItemBuilder {
        crate::types::builders::RateCardItemBuilder::default()
    }
}

/// A builder for [`RateCardItem`](crate::types::RateCardItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RateCardItemBuilder {
    pub(crate) dimension_key: ::std::option::Option<::std::string::String>,
    pub(crate) price: ::std::option::Option<::std::string::String>,
}
impl RateCardItemBuilder {
    /// <p>Dimension for which the given entitlement applies. Dimensions represent categories of capacity in a product and are specified when the product is listed in AWS Marketplace.</p>
    pub fn dimension_key(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.dimension_key = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Dimension for which the given entitlement applies. Dimensions represent categories of capacity in a product and are specified when the product is listed in AWS Marketplace.</p>
    pub fn set_dimension_key(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.dimension_key = input;
        self
    }
    /// <p>Dimension for which the given entitlement applies. Dimensions represent categories of capacity in a product and are specified when the product is listed in AWS Marketplace.</p>
    pub fn get_dimension_key(&self) -> &::std::option::Option<::std::string::String> {
        &self.dimension_key
    }
    /// <p>Per unit price for the product dimension that’s used for calculating the amount to be charged.</p>
    pub fn price(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.price = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Per unit price for the product dimension that’s used for calculating the amount to be charged.</p>
    pub fn set_price(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.price = input;
        self
    }
    /// <p>Per unit price for the product dimension that’s used for calculating the amount to be charged.</p>
    pub fn get_price(&self) -> &::std::option::Option<::std::string::String> {
        &self.price
    }
    /// Consumes the builder and constructs a [`RateCardItem`](crate::types::RateCardItem).
    pub fn build(self) -> crate::types::RateCardItem {
        crate::types::RateCardItem {
            dimension_key: self.dimension_key,
            price: self.price,
        }
    }
}
