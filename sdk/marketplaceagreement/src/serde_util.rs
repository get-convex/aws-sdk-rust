// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn validation_exception_field_correct_errors(
    mut builder: crate::types::builders::ValidationExceptionFieldBuilder,
) -> crate::types::builders::ValidationExceptionFieldBuilder {
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn configurable_upfront_pricing_term_configuration_correct_errors(
    mut builder: crate::types::builders::ConfigurableUpfrontPricingTermConfigurationBuilder,
) -> crate::types::builders::ConfigurableUpfrontPricingTermConfigurationBuilder {
    if builder.selector_value.is_none() {
        builder.selector_value = Some(Default::default())
    }
    if builder.dimensions.is_none() {
        builder.dimensions = Some(Default::default())
    }
    builder
}

pub(crate) fn renewal_term_configuration_correct_errors(
    mut builder: crate::types::builders::RenewalTermConfigurationBuilder,
) -> crate::types::builders::RenewalTermConfigurationBuilder {
    if builder.enable_auto_renew.is_none() {
        builder.enable_auto_renew = Some(Default::default())
    }
    builder
}

pub(crate) fn dimension_correct_errors(mut builder: crate::types::builders::DimensionBuilder) -> crate::types::builders::DimensionBuilder {
    if builder.dimension_key.is_none() {
        builder.dimension_key = Some(Default::default())
    }
    if builder.dimension_value.is_none() {
        builder.dimension_value = Some(Default::default())
    }
    builder
}
