// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateRepositoryLink`](crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`connection_arn(impl Into<String>)`](crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder::connection_arn) / [`set_connection_arn(Option<String>)`](crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder::set_connection_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the connection to be associated with the repository link.</p><br>
    ///   - [`owner_id(impl Into<String>)`](crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder::owner_id) / [`set_owner_id(Option<String>)`](crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder::set_owner_id):<br>required: **true**<br><p>The owner ID for the repository associated with a specific sync configuration, such as the owner ID in GitHub.</p><br>
    ///   - [`repository_name(impl Into<String>)`](crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder::repository_name) / [`set_repository_name(Option<String>)`](crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder::set_repository_name):<br>required: **true**<br><p>The name of the repository to be associated with the repository link.</p><br>
    ///   - [`encryption_key_arn(impl Into<String>)`](crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder::encryption_key_arn) / [`set_encryption_key_arn(Option<String>)`](crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder::set_encryption_key_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) encryption key for the repository to be associated with the repository link.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder::set_tags):<br>required: **false**<br><p>The tags for the repository to be associated with the repository link.</p><br>
    /// - On success, responds with [`CreateRepositoryLinkOutput`](crate::operation::create_repository_link::CreateRepositoryLinkOutput) with field(s):
    ///   - [`repository_link_info(Option<RepositoryLinkInfo>)`](crate::operation::create_repository_link::CreateRepositoryLinkOutput::repository_link_info): <p>The returned information about the created repository link.</p>
    /// - On failure, responds with [`SdkError<CreateRepositoryLinkError>`](crate::operation::create_repository_link::CreateRepositoryLinkError)
    pub fn create_repository_link(&self) -> crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder {
        crate::operation::create_repository_link::builders::CreateRepositoryLinkFluentBuilder::new(self.handle.clone())
    }
}
