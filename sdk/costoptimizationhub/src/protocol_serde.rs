// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_get_preferences;

pub(crate) mod shape_get_recommendation;

pub(crate) mod shape_list_enrollment_statuses;

pub(crate) mod shape_list_recommendation_summaries;

pub(crate) mod shape_list_recommendations;

pub(crate) mod shape_update_enrollment_status;

pub(crate) mod shape_update_preferences;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_get_recommendation_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_enrollment_statuses_input;

pub(crate) mod shape_list_recommendation_summaries_input;

pub(crate) mod shape_list_recommendations_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_enrollment_status_input;

pub(crate) mod shape_update_preferences_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_account_enrollment_statuses;

pub(crate) mod shape_filter;

pub(crate) mod shape_order_by;

pub(crate) mod shape_recommendation_list;

pub(crate) mod shape_recommendation_summaries_list;

pub(crate) mod shape_resource_details;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_validation_exception_details;

pub(crate) mod shape_account_enrollment_status;

pub(crate) mod shape_compute_savings_plans;

pub(crate) mod shape_ebs_volume;

pub(crate) mod shape_ec2_auto_scaling_group;

pub(crate) mod shape_ec2_instance;

pub(crate) mod shape_ec2_instance_savings_plans;

pub(crate) mod shape_ec2_reserved_instances;

pub(crate) mod shape_ecs_service;

pub(crate) mod shape_elasti_cache_reserved_instances;

pub(crate) mod shape_lambda_function;

pub(crate) mod shape_open_search_reserved_instances;

pub(crate) mod shape_rds_reserved_instances;

pub(crate) mod shape_recommendation;

pub(crate) mod shape_recommendation_summary;

pub(crate) mod shape_redshift_reserved_instances;

pub(crate) mod shape_sage_maker_savings_plans;

pub(crate) mod shape_tag;

pub(crate) mod shape_validation_exception_detail;

pub(crate) mod shape_compute_savings_plans_configuration;

pub(crate) mod shape_ebs_volume_configuration;

pub(crate) mod shape_ec2_auto_scaling_group_configuration;

pub(crate) mod shape_ec2_instance_configuration;

pub(crate) mod shape_ec2_instance_savings_plans_configuration;

pub(crate) mod shape_ec2_reserved_instances_configuration;

pub(crate) mod shape_ecs_service_configuration;

pub(crate) mod shape_elasti_cache_reserved_instances_configuration;

pub(crate) mod shape_lambda_function_configuration;

pub(crate) mod shape_open_search_reserved_instances_configuration;

pub(crate) mod shape_rds_reserved_instances_configuration;

pub(crate) mod shape_redshift_reserved_instances_configuration;

pub(crate) mod shape_reserved_instances_cost_calculation;

pub(crate) mod shape_resource_cost_calculation;

pub(crate) mod shape_sage_maker_savings_plans_configuration;

pub(crate) mod shape_savings_plans_cost_calculation;

pub(crate) mod shape_block_storage_performance_configuration;

pub(crate) mod shape_compute_configuration;

pub(crate) mod shape_instance_configuration;

pub(crate) mod shape_reserved_instances_pricing;

pub(crate) mod shape_resource_pricing;

pub(crate) mod shape_savings_plans_pricing;

pub(crate) mod shape_storage_configuration;

pub(crate) mod shape_usage_list;

pub(crate) mod shape_estimated_discounts;

pub(crate) mod shape_usage;
