// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The EC2 instance configuration used for recommendations.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Ec2InstanceConfiguration {
    /// <p>Details about the instance.</p>
    pub instance: ::std::option::Option<crate::types::InstanceConfiguration>,
}
impl Ec2InstanceConfiguration {
    /// <p>Details about the instance.</p>
    pub fn instance(&self) -> ::std::option::Option<&crate::types::InstanceConfiguration> {
        self.instance.as_ref()
    }
}
impl Ec2InstanceConfiguration {
    /// Creates a new builder-style object to manufacture [`Ec2InstanceConfiguration`](crate::types::Ec2InstanceConfiguration).
    pub fn builder() -> crate::types::builders::Ec2InstanceConfigurationBuilder {
        crate::types::builders::Ec2InstanceConfigurationBuilder::default()
    }
}

/// A builder for [`Ec2InstanceConfiguration`](crate::types::Ec2InstanceConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct Ec2InstanceConfigurationBuilder {
    pub(crate) instance: ::std::option::Option<crate::types::InstanceConfiguration>,
}
impl Ec2InstanceConfigurationBuilder {
    /// <p>Details about the instance.</p>
    pub fn instance(mut self, input: crate::types::InstanceConfiguration) -> Self {
        self.instance = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details about the instance.</p>
    pub fn set_instance(mut self, input: ::std::option::Option<crate::types::InstanceConfiguration>) -> Self {
        self.instance = input;
        self
    }
    /// <p>Details about the instance.</p>
    pub fn get_instance(&self) -> &::std::option::Option<crate::types::InstanceConfiguration> {
        &self.instance
    }
    /// Consumes the builder and constructs a [`Ec2InstanceConfiguration`](crate::types::Ec2InstanceConfiguration).
    pub fn build(self) -> crate::types::Ec2InstanceConfiguration {
        crate::types::Ec2InstanceConfiguration { instance: self.instance }
    }
}
