// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Complex data type that defines S3Detail objects.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct S3Detail {
    /// <p>The S3 bucket prefix under which the recording is stored.</p>
    pub recording_prefix: ::std::string::String,
}
impl S3Detail {
    /// <p>The S3 bucket prefix under which the recording is stored.</p>
    pub fn recording_prefix(&self) -> &str {
        use std::ops::Deref;
        self.recording_prefix.deref()
    }
}
impl S3Detail {
    /// Creates a new builder-style object to manufacture [`S3Detail`](crate::types::S3Detail).
    pub fn builder() -> crate::types::builders::S3DetailBuilder {
        crate::types::builders::S3DetailBuilder::default()
    }
}

/// A builder for [`S3Detail`](crate::types::S3Detail).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct S3DetailBuilder {
    pub(crate) recording_prefix: ::std::option::Option<::std::string::String>,
}
impl S3DetailBuilder {
    /// <p>The S3 bucket prefix under which the recording is stored.</p>
    /// This field is required.
    pub fn recording_prefix(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.recording_prefix = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The S3 bucket prefix under which the recording is stored.</p>
    pub fn set_recording_prefix(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.recording_prefix = input;
        self
    }
    /// <p>The S3 bucket prefix under which the recording is stored.</p>
    pub fn get_recording_prefix(&self) -> &::std::option::Option<::std::string::String> {
        &self.recording_prefix
    }
    /// Consumes the builder and constructs a [`S3Detail`](crate::types::S3Detail).
    /// This method will fail if any of the following fields are not set:
    /// - [`recording_prefix`](crate::types::builders::S3DetailBuilder::recording_prefix)
    pub fn build(self) -> ::std::result::Result<crate::types::S3Detail, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::S3Detail {
            recording_prefix: self.recording_prefix.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "recording_prefix",
                    "recording_prefix was not specified but it is required when building S3Detail",
                )
            })?,
        })
    }
}
