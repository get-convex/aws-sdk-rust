// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary information about a Destination.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DestinationSummary {
    /// <p>Unique identifier for this destination, assigned by IVS.</p>
    pub id: ::std::string::String,
    /// <p>State of the Composition Destination.</p>
    pub state: crate::types::DestinationState,
    /// <p>UTC time of the destination start. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>UTC time of the destination end. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl DestinationSummary {
    /// <p>Unique identifier for this destination, assigned by IVS.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
    /// <p>State of the Composition Destination.</p>
    pub fn state(&self) -> &crate::types::DestinationState {
        &self.state
    }
    /// <p>UTC time of the destination start. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn start_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
    /// <p>UTC time of the destination end. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn end_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
}
impl DestinationSummary {
    /// Creates a new builder-style object to manufacture [`DestinationSummary`](crate::types::DestinationSummary).
    pub fn builder() -> crate::types::builders::DestinationSummaryBuilder {
        crate::types::builders::DestinationSummaryBuilder::default()
    }
}

/// A builder for [`DestinationSummary`](crate::types::DestinationSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DestinationSummaryBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) state: ::std::option::Option<crate::types::DestinationState>,
    pub(crate) start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl DestinationSummaryBuilder {
    /// <p>Unique identifier for this destination, assigned by IVS.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Unique identifier for this destination, assigned by IVS.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>Unique identifier for this destination, assigned by IVS.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>State of the Composition Destination.</p>
    /// This field is required.
    pub fn state(mut self, input: crate::types::DestinationState) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// <p>State of the Composition Destination.</p>
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::DestinationState>) -> Self {
        self.state = input;
        self
    }
    /// <p>State of the Composition Destination.</p>
    pub fn get_state(&self) -> &::std::option::Option<crate::types::DestinationState> {
        &self.state
    }
    /// <p>UTC time of the destination start. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn start_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>UTC time of the destination start. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn set_start_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start_time = input;
        self
    }
    /// <p>UTC time of the destination start. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn get_start_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start_time
    }
    /// <p>UTC time of the destination end. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn end_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>UTC time of the destination end. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn set_end_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>UTC time of the destination end. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn get_end_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end_time
    }
    /// Consumes the builder and constructs a [`DestinationSummary`](crate::types::DestinationSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::types::builders::DestinationSummaryBuilder::id)
    /// - [`state`](crate::types::builders::DestinationSummaryBuilder::state)
    pub fn build(self) -> ::std::result::Result<crate::types::DestinationSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::DestinationSummary {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building DestinationSummary",
                )
            })?,
            state: self.state.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "state",
                    "state was not specified but it is required when building DestinationSummary",
                )
            })?,
            start_time: self.start_time,
            end_time: self.end_time,
        })
    }
}
